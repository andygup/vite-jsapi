import{aH as l,e,y as t,a as f,bB as v,bD as u,K as c}from"./index-bdad94d1.js";import h from"./FeatureLayer-c8139660.js";import"./UniqueValueRenderer-0032343a.js";import"./ColorStop-4e0fcd9e.js";import"./diffUtils-a0d8d1c6.js";import"./colorRamps-cdef51b0.js";import"./jsonUtils-4dabb521.js";import"./DictionaryLoader-5abfccef.js";import"./FieldsIndex-9b4d6ad9.js";import"./heatmapUtils-b945ba0a.js";import"./MultiOriginJSONSupport-60332d9e.js";import"./sql-479078ee.js";import"./FeatureLayerBase-641d2a83.js";import"./commonProperties-ea87c313.js";import"./ElevationInfo-3fa56032.js";import"./AttachmentQuery-f7103c79.js";import"./Query-9dbb4c19.js";import"./RelationshipQuery-c453586a.js";import"./serviceCapabilitiesUtils-461d06bb.js";import"./editsZScale-706679e7.js";import"./queryZScale-f54a22c6.js";import"./FeatureSet-973dd09f.js";import"./APIKeyMixin-ce457857.js";import"./ArcGISService-1851ba5b.js";import"./BlendLayer-49bfabe4.js";import"./jsonUtils-1baf7cbc.js";import"./CustomParametersMixin-20743481.js";import"./EditBusLayer-e86c072c.js";import"./FeatureReductionLayer-8676d4d4.js";import"./FeatureEffect-65c5e21a.js";import"./FeatureFilter-5540eb97.js";import"./labelingInfo-38aab5bb.js";import"./defaults-d902f6e7.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-6d869fbc.js";import"./OrderedLayer-72cfd2d0.js";import"./PortalLayer-47bcd3d8.js";import"./portalItemUtils-cf820457.js";import"./ScaleRangeLayer-ccfb81e3.js";import"./TemporalLayer-316aae95.js";import"./FeatureTemplate-8e68a2d4.js";import"./FeatureType-c7bc4c60.js";import"./fieldProperties-1df28490.js";import"./versionUtils-17260697.js";import"./styleUtils-509f9421.js";import"./TopFeaturesQuery-f297bba6.js";import"./popupUtils-c1ca5a99.js";let r=class extends l(v){constructor(s){super(s)}read(s,p){const y={};for(const d in s)y[d.toLowerCase()]=s[d];super.read(y,p)}};e([t({json:{name:"dempathprefix"}})],r.prototype,"demPathPrefix",void 0),e([t({json:{name:"dempathsuffix"}})],r.prototype,"demPathSuffix",void 0),e([t({json:{name:"imagepathprefix"}})],r.prototype,"imagePathPrefix",void 0),e([t({json:{name:"imagepathsuffix"}})],r.prototype,"imagePathSuffix",void 0),e([t({json:{name:"depthimagepathprefix"}})],r.prototype,"depthImagePathPrefix",void 0),e([t({json:{name:"depthimagepathsuffix"}})],r.prototype,"depthImagePathSuffix",void 0),e([t({json:{name:"localimagepathprefix"}})],r.prototype,"localImagePathPrefix",void 0),e([t({json:{name:"localimagepathsuffix"}})],r.prototype,"localImagePathSuffix",void 0),e([t({json:{name:"videopathprefix"}})],r.prototype,"videoPathPrefix",void 0),e([t({json:{name:"videopathsuffix"}})],r.prototype,"videoPathSuffix",void 0),r=e([f("esri.layers.orientedImagery.core.Affixes")],r);const g=r;let i=class extends v{constructor(n){super(n)}};e([t({type:Number,json:{write:!0}})],i.prototype,"averageHeightAboveGround",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraHeading",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraPitch",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraRoll",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"farDistance",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"horizontalFieldOfView",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"nearDistance",void 0),e([t({json:{write:!0}})],i.prototype,"orientedImageryType",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"verticalFieldOfView",void 0),i=e([f("esri.layers.orientedImagery.core.CameraProperties")],i);const x=i;let o=class extends h{constructor(){super(...arguments),this.affixes=null,this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery",this.elevationSource=null}readElevationSource(n,s){var y;let p=(y=n.url)==null?void 0:y.trim();if(p){const{affixes:d}=this;if(d){const{demPathSuffix:a,demPathPrefix:m}=d;m!=null&&m.trim()&&(p=(m==null?void 0:m.trim())+"/"+p),a!=null&&a.trim()&&(p=p+"/"+(a==null?void 0:a.trim()))}}return{...n,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new c("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({type:g,json:{write:!0}})],o.prototype,"affixes",void 0),e([t({type:x,json:{write:!0}})],o.prototype,"cameraProperties",void 0),e([t({json:{write:!0}})],o.prototype,"coverage",void 0),e([t({json:{write:!0}})],o.prototype,"coveragePercent",void 0),e([t({json:{write:!0}})],o.prototype,"defaultSearchLocation",void 0),e([t({json:{write:!0}})],o.prototype,"depthImage",void 0),e([t({json:{write:!0}})],o.prototype,"geometryType",void 0),e([t()],o.prototype,"imageProperties",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maximumDistance",void 0),e([t({type:["OrientedImageryLayer"]})],o.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],o.prototype,"type",void 0),e([t({json:{write:!0},dependsOn:["affixes"]})],o.prototype,"elevationSource",void 0),e([u("portal-item","elevationSource",["elevationSource"])],o.prototype,"readElevationSource",null),o=e([f("esri.layers.OrientedImageryLayer")],o);const le=o;export{le as default};
