import{t as l,r as c,K as B,L as v,o as G,e as _}from"./typedArrayUtil-2bcf3cee.js";import{t as O,l as L,o as R,r as P,M as H,p as $}from"./featureConversionUtils-7c9ea581.js";import{e as p}from"./OptimizedFeature-9345d11b.js";import{b as E,t as Y}from"./FeatureSetReader-22887d5b.js";import{_ as j}from"./preload-helper-101896b7.js";import{s as Q,a as F}from"./Error-bd05b442.js";import{h as g}from"./string-3d0ebcd3.js";import{a as X}from"./mathUtils-daf59e84.js";import{D as Z,j as w}from"./promiseUtils-29120e0a.js";import{m as V}from"./diffUtils-58fbd195.js";import{r as q}from"./FieldsIndex-394de0a1.js";import{a8 as J,a9 as K,aa as W,ab as D,N as tt,O as et}from"./enums-8bf08d0c.js";import{c as st,u as rt,f as y,e as it,i as nt,n as at,l as ot,r as ht,s as k,a as h}from"./visualVariablesUtils-7af1d739.js";import{m as ut}from"./Utils-c2939f8d.js";import{G as f}from"./enums-64ab819c.js";function dt({coords:u,lengths:t}){let e=0;for(const s of t){for(let r=1;r<s;r++)u[2*(e+r)]+=u[2*(e+r)-2],u[2*(e+r)+1]+=u[2*(e+r)-1];e+=s}}class m extends E{constructor(t,e,s){super(t,s),this._exceededTransferLimit=!1,this._featureIndex=-1,this._dateFields=new Set,this._geometryType=s==null?void 0:s.geometryType,this._features=e}static fromFeatures(t,e){const{objectIdField:s,geometryType:r}=e,i=O([],t,r,!1,!1,s);for(let n=0;n<i.length;n++)i[n].displayId=t[n].displayId;return m.fromOptimizedFeatures(i,e)}static fromFeatureSet(t,e){const s=L(t,e.objectIdField);return m.fromOptimizedFeatureSet(s,e)}static fromOptimizedFeatureSet(t,e){const{features:s}=t,r=m.fromOptimizedFeatures(s,e);r._exceededTransferLimit=t.exceededTransferLimit,r._transform=t.transform;for(const i of t.fields)i.type==="esriFieldTypeDate"&&r._dateFields.add(i.name);return r}static fromOptimizedFeatures(t,e,s){const r=E.createInstance(),i=new m(r,t,e);return i._transform=s,i}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}removeIds(t){const e=new Set(t);this._features=this._features.filter(s=>!(s.objectId&&e.has(s.objectId)))}append(t){for(const e of t)this._features.push(e)}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new m(this.instance,this._features,this.fullSchema());return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return R(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readGeometry();return P(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const t=this.readCentroid();return l(t)?null:{x:t.coords[0]*this._sx+this._tx,y:t.coords[1]*this._sy+this._ty}}readGeometryArea(){return p(this._current)?H(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if(this.geometryType==="esriGeometryPoint"||!t)return t;const e=t.clone();return dt(e),e}readHydratedGeometry(){const t=this._current.geometry;if(l(t))return null;const e=t.clone();return c(this._transform)&&$(e,e,this.hasZ,this.hasM,this._transform),e}getXHydrated(){if(!p(this._current))return 0;const t=this._current.geometry.coords[0],e=this.getQuantizationTransform();return l(e)?t:t*e.scale[0]+e.translate[0]}getYHydrated(){if(!p(this._current))return 0;const t=this._current.geometry.coords[1],e=this.getQuantizationTransform();return l(e)?t:e.translate[1]-t*e.scale[1]}getX(){return p(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return p(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!p(this._current)){if(c(this._current.centroid)){const[s,r]=this._current.centroid.coords;return this.createQuantizedExtrudedQuad(s,r)}return null}const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let e=0;for(const s of t.lengths)t.coords[2*e]=t.coords[2*e]*this._sx+this._tx,t.coords[2*e+1]=t.coords[2*e+1]*this._sy+this._ty,e+=s;return t}readCentroid(){return p(this._current)?this._computeCentroid():this._current.centroid}hasField(t){return t in this._current.attributes?!0:this.getFieldNames().map(e=>e.toLowerCase()).includes(t.toLowerCase())}getFieldNames(){return Object.keys(this._current.attributes)}_readAttribute(t,e){const s=this._current.attributes[t];if(s!==void 0)return s!=null&&e&&this._dateFields.has(t)?new Date(s):s;const r=this.readAttributes(),i=t.toLocaleLowerCase().trim();for(const n in r)if(n.toLocaleLowerCase().trim()===i){const a=this._current.attributes[n];return a!=null&&e&&this._dateFields.has(n)?new Date(a):a}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields}_readAttributes(){return this._current.attributes}}const x=Q.getLogger("esri.views.layers.2d.features.support.AttributeStore"),S=at(ot,x),I={sharedArrayBuffer:g("esri-shared-array-buffer"),atomics:g("esri-atomics")};function M(u,t){return e=>t(u(e))}class ct{constructor(t,e,s,r){this.size=0,this.texelSize=4;const{pixelType:i,layout:n,textureOnly:a}=r;this.textureOnly=a||!1,this.pixelType=i,this._ctype=e,this.layout=n,this._resetRange(),this._shared=t,this.size=s,a||(this.data=this._initData(i,s,t,e))}get buffer(){return G(this.data,t=>t.buffer)}unsetComponentAllTexels(t,e){const s=_(this.data);for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(t,e){const s=_(this.data);for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(t,e,s){const r=_(this.data);for(const i of s)r[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}setComponentTexel(t,e,s){_(this.data)[s*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}unsetComponentTexel(t,e,s){_(this.data)[s*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}getData(t,e){const s=y(t);return _(this.data)[s*this.texelSize+e]}setData(t,e,s){const r=y(t),i=1<<e;this.layout&i?(this.data[r*this.texelSize+e]=s,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)):x.error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}lock(){this.pixelType===f.UNSIGNED_BYTE&&this._shared&&I.atomics&&this._ctype!=="local"&&Atomics.store(this.data,0,1)}unlock(){this.pixelType===f.UNSIGNED_BYTE&&this._shared&&I.atomics&&this._ctype!=="local"&&Atomics.store(this.data,0,0)}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),s=_(this.data);e.set(s),this.data=e}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,s=this.texelSize;if(t>e)return null;this._resetRange();const r=!(this._shared||this._ctype==="local"),i=this.pixelType,n=this.layout,a=_(this.data);return{start:t,end:e,data:r&&a.slice(t*s,(e+1)*s)||null,pixelType:i,layout:n}}_initData(t,e,s,r){const i=s&&r!=="local"?SharedArrayBuffer:ArrayBuffer,n=ut(t),a=new n(new i(e*e*4*n.BYTES_PER_ELEMENT));for(let o=0;o<a.length;o+=4)a[o+1]=255;return a}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class Et{constructor(t,e,s=()=>{}){this._client=t,this.config=e,this._notifyChange=s,this._attributeComputeMap=new Map,this._blocks=new Array,this._filters=new Array(J),this._targetType=0,this._abortController=new AbortController,this._hasScaleExpr=!1,this._size=32,this._idsToHighlight=new Set;const r=e.supportsTextureFloat?f.FLOAT:f.UNSIGNED_BYTE;S(`Creating AttributeStore ${I.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:f.UNSIGNED_BYTE,layout:1},{pixelType:f.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:f.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:r,layout:15},{pixelType:r,layout:15},{pixelType:r,layout:15},{pixelType:r,layout:15}],this._blocks=this._blockDescriptors.map(()=>null)}destroy(){this._abortController.abort()}get hasScaleExpr(){return this._hasScaleExpr}get _signal(){return this._abortController.signal}get hasHighlight(){return this._idsToHighlight.size>0}isUpdating(){return!!this._currUpdate||!!this._nextUpdate}update(t,e){this.config=e;const s=e.schema.processors[0].storage,r=V(this._schema,s);if((t.targets.feature||t.targets.aggregate)&&(t.storage.data=!0),r&&(g("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",r),t.storage.data=!0,this._schema=s,this._attributeComputeMap.clear(),!l(s))){switch(s.target){case"feature":this._targetType=rt;break;case"aggregate":this._targetType=st}if(s.type==="subtype")for(const i in s.mapping){const n=s.mapping[i];if(c(n)&&c(n.vvMapping))for(const a of n.vvMapping)this._bindAttribute(a)}else{if(c(s.vvMapping))for(const i of s.vvMapping)this._bindAttribute(i);if(c(s.attributeMapping))for(const i of s.attributeMapping)this._bindAttribute(i)}}}onTileData(t,e){if(l(e.addOrUpdate))return;const s=e.addOrUpdate.getCursor();for(;s.next();){const r=s.getDisplayId();this.setAttributeData(r,s)}}async setHighlight(t,e){const r=this._getBlock(0),i=e.map(n=>y(n));r.lock(),r.unsetComponentAllTexels(0,1),r.setComponent(0,1,i),r.unlock(),this._idsToHighlight.clear();for(const n of t)this._idsToHighlight.add(n);await this.sendUpdates()}async updateFilters(t,e,s){const{service:r,spatialReference:i}=s,{filters:n}=e,a=n.map((o,d)=>this._updateFilter(o,d,r,i));(await Promise.all(a)).some(o=>o)&&(t.storage.filters=!0,g("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"))}setData(t,e,s,r){const i=y(t);this._ensureSizeForTexel(i),this._getBlock(e).setData(t,s,r)}getData(t,e,s){return this._getBlock(e).getData(t,s)}getHighlightFlag(t){return this._idsToHighlight.has(t)?K:0}unsetAttributeData(t){const e=y(t);this._getBlock(0).setData(e,0,0)}setAttributeData(t,e){const s=y(t);if(this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(e)),this._targetType!==it(t))return;const r=this._attributeComputeMap,i=this.config.supportsTextureFloat?1:2,n=4;r.size&&r.forEach((a,o)=>{const d=o*i%n,T=Math.floor(o*i/n),b=this._getBlock(T+W),A=a(e);if(this.config.supportsTextureFloat)b.setData(s,d,A);else if(A===D)b.setData(s,d,255),b.setData(s,d+1,255);else{const C=X(Math.round(A),-32767,32766)+32768,U=255&C,N=(65280&C)>>8;b.setData(s,d,U),b.setData(s,d+1,N)}})}sendUpdates(){if(g("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate"),this._notifyChange(),this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=Z(),this._nextUpdate.promise;const t={blocks:this._blocks.map(e=>c(e)?e.toMessage():null)};return this._currUpdate=this._createResources().then(()=>{const e=()=>{if(this._currUpdate=null,this._nextUpdate){const r=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then(()=>r.resolve())}else g("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::No additional updates queued");this._notifyChange()};g("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::client.update");const s=this._client.update(t,this._signal).then(e).catch(e);return this._client.render(this._signal),s}).catch(e=>{if(w(e))return this._createResourcesPromise=null,this._createResources();this._notifyChange(),x.error(new F("mapview-attribute-store","Encountered an error during client update",e))}),this._currUpdate}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}_bindAttribute(t){function e(){return t.normalizationField?n=>{const a=n.readAttribute(t.normalizationField);return a?n.readAttribute(t.field)/a:null}:n=>n.readAttribute(t.field)}function s(){return t.normalizationField&&x.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),n=>n.getComputedNumericAtIndex(t.fieldIndex)}let r;if(t.fieldIndex!=null)r=s();else{if(!t.field)return;r=e()}t.valueRepresentation&&(r=M(r,n=>ht(n,t.valueRepresentation)));const i=n=>n===null||isNaN(n)||n===1/0||n===-1/0?D:n;this._attributeComputeMap.set(t.binding,M(r,i))}_createResources(){if(c(this._createResourcesPromise))return this._createResourcesPromise;this._getBlock(tt),this._getBlock(et),S("Initializing AttributeStore");const t={shared:I.sharedArrayBuffer&&this._client.type!=="local",size:this._size,blocks:B(this._blocks,s=>({textureOnly:s.textureOnly,buffer:s.buffer,pixelType:s.pixelType}))},e=this._client.initialize(t,this._signal).catch(s=>{w(s)?this._createResourcesPromise=null:x.error(new F("mapview-attribute-store","Encountered an error during client initialization",s))});return this._createResourcesPromise=e,e.then(()=>l(this._createResourcesPromise)?this._createResources():void 0),e}_getBlock(t){const e=this._blocks[t];if(c(e))return e;S(`Initializing AttributeBlock at index ${t}`);const s=I.sharedArrayBuffer,r=this._client.type,i=new ct(s,r,this._size,this._blockDescriptors[t]);return this._blocks[t]=i,this._createResourcesPromise=null,i}_expand(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;return S("Expanding block size to",t,this._blocks),v(this._blocks,e=>e.expand(t)),this._createResourcesPromise=null,this._size=t,0}return x.error(new F("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}async _updateFilter(t,e,s,r){const i=this._filters[e],n=c(i)&&i.hash;if(!i&&!t||n===JSON.stringify(t))return!1;if(l(t)){if(!i)return!1;const o=1<<e+1,d=this._getBlock(0);return this._filters[e]=null,d.setComponentAllTexels(0,o),this.sendUpdates(),!0}return await(await this._getFilter(e,s)).update(t,r),!0}async _getFilter(t,e){const s=this._filters[t];if(c(s))return s;const{default:r}=await j(()=>import("./FeatureFilter-4d1eed92.js"),["assets/FeatureFilter-4d1eed92.js","assets/Error-bd05b442.js","assets/string-3d0ebcd3.js","assets/typedArrayUtil-2bcf3cee.js","assets/aaBoundingRect-45a7fe45.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/Extent-7f29a1bb.js","assets/cast-daef7652.js","assets/ensureType-fa162cfc.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-29120e0a.js","assets/Polyline-c56eca9b.js","assets/timeSupport-21b6beab.js","assets/preload-helper-101896b7.js","assets/jsonUtils-8bd548d9.js","assets/featureConversionUtils-7c9ea581.js","assets/OptimizedFeature-9345d11b.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/projectionSupport-1035a977.js","assets/projection-33a6cba9.js","assets/unitUtils-43365914.js","assets/jsonMap-a9c94baf.js","assets/SimpleObservable-7c382d01.js","assets/mat4-62d5e6a4.js","assets/assets-4cb15247.js","assets/request-c2b0ab45.js","assets/zscale-a508c8e5.js","assets/json-48e3ea08.js","assets/utils-f95dbca3.js","assets/normalizeUtils-d322ac85.js","assets/geometry-4b789d90.js","assets/typeUtils-d7b057b5.js","assets/Query-e996b56b.js","assets/TimeExtent-84882adb.js","assets/enumeration-e46f3fd4.js","assets/Field-0ac3c9d2.js","assets/fieldType-4ec45634.js","assets/Clonable-f249bc0f.js","assets/FeatureStore2D-7b3943d2.js","assets/CircularArray-d560a86f.js","assets/Evented-d8fc77f0.js","assets/rbush-8e36784a.js","assets/quickselect-322ec8e1.js","assets/aaBoundingBox-6fbd5972.js","assets/diffUtils-58fbd195.js","assets/Collection-e2259e32.js","assets/arcadeOnDemand-87969052.js","assets/FeatureSetReader-22887d5b.js","assets/centroid-de776b3b.js"]),i=new r({geometryType:e.geometryType,hasM:!1,hasZ:!1,timeInfo:e.timeInfo,fieldsIndex:new q(e.fields)});return this._filters[t]=i,i}isVisible(t){return!!(2&this._getBlock(0).getData(t,0))}getFilterFlags(t){let e=0;const s=nt(t.getDisplayId());for(let i=0;i<this._filters.length;i++){const n=!!(s&1<<i),a=this._filters[i];e|=(!n||l(a)||a.check(t)?1:0)<<i}let r=0;if(this._idsToHighlight.size){const i=t.getObjectId();r=this.getHighlightFlag(i)}return e<<1|r}}let lt=class{constructor(){this._freeIds=[],this._idCounter=1}createId(t=!1){return k(this._getFreeId(),t)}releaseId(t){this._freeIds.push(t)}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}};function z(u,t,e){if(!(u.length>t))for(;u.length<=t;)u.push(e)}class Dt{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new lt,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const t=this._bitsets.length;return this._bitsets.push(Y.create(this._allocatedSize,h)),t+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]),z(this._numerics[t],e,0)}_ensureInstanceId(t){z(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]),z(this._strings[t],e,null)}createDisplayId(t=!1){const e=this._idGenerator.createId();return e>this._allocatedSize&&this._expand(),k(e,t)}releaseDisplayId(t){for(const e of this._bitsets)e.unset(t);return this._idGenerator.releaseId(t&h)}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(t&h,0)}setComputedNumeric(t,e,s){return this.setComputedNumericAtIndex(t&h,s,0)}getComputedString(t,e){return this.getComputedStringAtIndex(t&h,0)}setComputedString(t,e,s){return this.setComputedStringAtIndex(t&h,0,s)}getComputedNumericAtIndex(t,e){const s=t&h;return this._ensureNumeric(e,s),this._numerics[e][s]}setComputedNumericAtIndex(t,e,s){const r=t&h;this._ensureNumeric(e,r),this._numerics[e][r]=s}getInstanceId(t){const e=t&h;return this._ensureInstanceId(e),this._instanceIds[e]}setInstanceId(t,e){const s=t&h;this._ensureInstanceId(s),this._instanceIds[s]=e}getComputedStringAtIndex(t,e){const s=t&h;return this._ensureString(e,s),this._strings[e][s]}setComputedStringAtIndex(t,e,s){const r=t&h;this._ensureString(e,r),this._strings[e][r]=s}getXMin(t){return this._bounds[4*(t&h)]}getYMin(t){return this._bounds[4*(t&h)+1]}getXMax(t){return this._bounds[4*(t&h)+2]}getYMax(t){return this._bounds[4*(t&h)+3]}setBounds(t,e){const s=e.readHydratedGeometry();if(!s||!s.coords.length)return!1;let r=1/0,i=1/0,n=-1/0,a=-1/0;s.forEachVertex((d,T)=>{r=Math.min(r,d),i=Math.min(i,T),n=Math.max(n,d),a=Math.max(a,T)});const o=t&h;return z(this._bounds,4*o+4,0),this._bounds[4*o]=r,this._bounds[4*o+1]=i,this._bounds[4*o+2]=n,this._bounds[4*o+3]=a,!0}}export{m as c,Dt as r,Et as v};
