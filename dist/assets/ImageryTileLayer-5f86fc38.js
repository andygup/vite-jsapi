import{aa as dt,j7 as ye,w as k,s1 as it,i as ze,T as M,aO as st,a7 as W,aK as G,C as $,d as X,U as rt,dm as mt,r8 as nt,dx as pt,e as w,y as S,mS as at,b as Q,aN as yt,aL as q,iE as gt,d9 as ot,M as lt,z as xt,at as It,Z as wt,fH as bt,r5 as St,r6 as Rt,mL as vt,mM as Tt,rn as _t,rq as kt,mK as Ct,r7 as Ft,mN as Pt,a1 as Mt,ik as pe,gE as $t,l as Dt,gy as Ot,gJ as Bt,rw as zt,gI as Et,aP as Jt,cP as Nt}from"./index-df1c7459.js";import{g as ct,y as Ht,e as Lt,s as At,p as ut,c as Wt,w as De,l as ht,h as He,q as qt,r as Le,$ as Ae,S as We,v as jt,V as Gt,L as Ut,j as qe,n as Vt,m as Xt,a as Yt,o as Kt,d as Qt}from"./fetchRasterInfo-d992a7eb.js";import{b as ke,S as Zt,I as ge,F as ei,D as ti,a as ii,K as si,U as ri,d as ni,f as ai,T as oi,V as je,u as xe,R as li,p as ci,W as Ee,J as ui,X as hi,m as fi,Y as di,Z as mi,$ as pi,a0 as yi,a1 as gi,a2 as we,a3 as xi,a4 as Ii,a5 as wi}from"./dataUtils-9d851346.js";import{T as Ge,U as be,j as Ue,o as Ve,n as bi,Q as Ce,J as Fe,$ as Si,V as Ri,C as vi}from"./rasterProjectionHelper-816895fe.js";import{C as Oe,f as Ti,i as _i,m as Je,c as ki,h as Ci}from"./utils-6ca01b1e.js";import{n as Fi,z as Pi}from"./TilemapCache-fc3c869b.js";import"./generateRendererUtils-f1e35d90.js";import"./colorUtils-c0f43caf.js";let Mi=class{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const t=e+"/"+r,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.refCount--,n.refCount<=0&&(i.delete(t),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,r){const t=e+"/"+r,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.ts=Date.now(),n.refCount++,i.delete(t),i.set(t,n),n.block}return null}putBlock(e,r,t,i){const n=this._cachedBlocks,a=e+"/"+r;if(n.has(a)){const o=n.get(a);o.ts=Date.now(),o.refCount++}else n.set(a,{block:t,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,r){const t=this._cachedBlocks,i=e+"/"+r;t.has(i)&&t.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),t=Date.now();for(let i=0;i<r.length&&r[i][1].ts<=t-this._duration;i++)e.delete(r[i][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let t=0;t<r.length-this._size;t++)e.delete(r[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const Te=new Map,te=new Mi;function Xe(s,e){return e==null?s:`${s}?sliceId=${e}`}function $i(s,e,r){var a,o;const t=Te.get(s);if(!t)return e==null?te.decreaseRefCount(s,r):0;if(e==null||t[e]==null)return te.decreaseRefCount(s,r);const i=(a=t[e])==null?void 0:a.cache,n=i==null?void 0:i.get(r);if(i&&n){if(n.refCount--,n.refCount===0){i.delete(r);for(let l=0;l<t.length;l++)(o=t[l])==null||o.cache.delete(r);n.controller&&n.controller.abort()}return n.refCount}return 0}function Ye(s,e,r){var n,a,o;const t=Te.get(s);if(!t)return e==null?te.getBlock(s,r):null;if(e==null||t[e]==null){for(let l=0;l<t.length;l++){const c=(n=t[l])==null?void 0:n.cache.get(r);if(c)return c.refCount++,c.block}return te.getBlock(s,r)}const i=(a=t[e])==null?void 0:a.cache.get(r);if(i)return i.refCount++,i.block;for(let l=0;l<t.length;l++){if(l===e||!t[l])continue;const c=(o=t[l])==null?void 0:o.cache,u=c==null?void 0:c.get(r);if(c&&u)return u.refCount++,c.set(r,u),u.block}return null}function Ke(s,e,r,t,i=null){var o;const n=Te.get(s);if(!n)return void(e==null&&te.putBlock(s,r,t,i));if(e==null||n[e]==null)return void te.putBlock(s,r,t,i);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:i};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(o=n[e])==null||o.cache.set(r,a)}function Di(s,e,r){var i;const t=Te.get(s);t?e!=null&&t[e]!=null?(i=t[e])==null||i.cache.delete(r):te.deleteBlock(s,r):e==null&&te.deleteBlock(s,r)}const Qe=8,Oi=256;let U=class extends dt(yt){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const s=Ge();this.addResolvingPromise(s),await this.when()}normalizeCtorArgs(s){return s&&s.ioConfig&&(s={...s,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:ye.create(),...s.ioConfig}}),s}get _isGlobalWrappableSource(){const{rasterInfo:s}=this,e=be(s.spatialReference);return k(e)&&s.extent.width>=e/2}set url(s){this._set("url",it(s,ze.getLogger(this.declaredClass)))}async open(s){throw new M("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(s,e,r,t={}){const i=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(s,e,r,i);return this.fetchPixels(n,i.size[0],i.size[1],t)}async identify(s,e={}){var P;s=st(W,s).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:i}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=i;let{transposedVariableName:o}=e;const l=k(a)&&n&&(t!=null||ct(r));l&&!o&&(o=k(r)&&r.length>0?r[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=i,{datumTransformation:h}=e;let f=Ue(s,c,h);if(!u.intersects(f))return{location:f,value:null};if(k(i.transform)){const D=i.transform.inverseTransform(f);if(!i.nativeExtent.intersects(D))return{location:D,value:null};f=D}let d=0;const p=k(o)&&k(a)&&i.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const D=this.primaryRasters.rasters[0];if(p)return D.identify(f,e);const{pixelSize:H}=i,B=3,O=H.x*B/2,N=H.y*B/2,L=new G({xmin:f.x-O,xmax:f.x+O,ymin:f.y-N,ymax:f.y+N,spatialReference:c}),j={interpolation:"nearest"},{pixelBlock:J}=await D.fetchPixels(L,B,B,j),{pixelBlock:z}=await this.fetchPixels(L,B,B,j);if($(J))return{location:f,value:null};const Z=Math.floor(B*B*.5),Ie=!J.mask||J.mask[Z]?J.pixels.map(ue=>ue[Z]):null;let ce;return k(z)&&(ce=!z.mask||z.mask[Z]?z.pixels.map(ue=>ue[Z]):void 0),{location:f,value:Ie,processedValue:ce,pyramidLevel:0}}if(!p){if(e.srcResolution)d=Ve(e.srcResolution,i,this.ioConfig.sampling).pyramidLevel;else if(d=await this.computeBestPyramidLevelForLocation(s,e),d==null)return{location:f,value:null}}const g=this.identifyPixelLocation(f,d,null,p);if(g===null)return{location:f,value:null};const{row:m,col:y,rowOffset:x,colOffset:I,blockWidth:v}=g,C=o??X(e.sliceId),_=Xe(this.url,C),F=`${d}/${m}/${y}`;let T=Ye(_,null,F);$(T)&&(T=this.fetchRawTile(d,m,y,e),Ke(_,null,F,T));const R=await T;if($(R)||!((P=R.pixels)!=null&&P.length))return{location:f,value:null};const b=x*v+I;return this._processIdentifyResult(R,{srcLocation:f,position:b,pyramidLevel:d,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(s,e,r,t={}){if(s=bi(s),(t=this._getRequestOptionsWithSliceId(t)).requestRawData)return this._fetchPixels(s,e,r,t);const i=be(s.spatialReference),n=Ce(s);if($(i)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(s,e,r,t);if(n>=3)return{extent:s,pixelBlock:null};const a=[],{xmin:o,xmax:l}=s,c=Math.round(i/(l-o)*e),u=c-Math.round((i/2-o)/(l-o)*e);let h=0;const f=[];for(let m=0;m<=n;m++){const y=new G({xmin:m===0?o:-i/2,xmax:m===n?l-i*m:i/2,ymin:s.ymin,ymax:s.ymax,spatialReference:s.spatialReference}),x=m===0?c-u:m===n?e-h:c;h+=x,f.push(x);const I=t.disableWrapAround&&m>0?null:this._fetchPixels(y,x,r,t);a.push(I)}const d=(await Promise.all(a)).map(m=>m==null?void 0:m.pixelBlock);let p=null;const g={width:e,height:r};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},t)).pixelBlock:p=ke(d,g,{blockWidths:f}),{extent:s,srcExtent:Fe(s,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:p}}async fetchRawPixels(s,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const i=await this._fetchRawTiles(s,e,r,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**s,c=a.x*l,u=a.y*l,h=new G({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-u*(e.y+r.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!i)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:d}=i;if(f.length===1&&k(f[0])&&f[0].width===r.width&&f[0].height===r.height)return{extent:h,srcExtent:h,pixelBlock:i.pixelBlocks[0]};const p=s>0?o.pyramidBlockWidth:o.blockWidth,g=s>0?o.pyramidBlockHeight:o.blockHeight,m={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:d,destDimension:r,clipOffset:m,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=ke(f,d,{clipOffset:m,clipSize:r}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(s,e,r,t){throw new M("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(s){return Fe(this.rasterInfo.extent,s)}decodePixelBlock(s,e){return!this.rasterJobHandler||e.useCanvas?Zt(s,e):this.rasterJobHandler.decode({data:s,options:e})}async request(s,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:i,query:n,headers:a}=e;r=r??e.retryCount??this.ioConfig.retryCount;const o=i?{Range:`bytes=${i.from}-${i.to}`}:null;try{return await rt(s,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(r>0)return r--,this.request(s,e,r);throw l}}getSliceIndex(s){const{multidimensionalInfo:e}=this.rasterInfo;return $(e)||$(s)||s.length===0?null:Ht(s,e)}getTileExtentFromTileInfo(s,e,r,t){const i=mt(t.lodAt(s));return this.getTileExtent({x:i.resolution,y:i.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:s,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo;if(!s.tileInfo){const i=[],n=s.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)i.push(new nt({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new W({x:r.xmin,y:r.ymax,spatialReference:e});s.tileInfo=new ye({origin:l,size:[s.blockWidth,s.blockHeight],spatialReference:e,lods:i}),s.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(s,e=512,r=512,t){const{width:i,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=s,c=new W({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);s.storageInfo=new ge({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(s,e={}){return 0}computeBlockBoundary(s,e,r,t,i,n=0,a=2){if(i.length===1&&n>0){i=[...i];let{x:u,y:h}=i[0];for(let f=0;f<n;f++)u*=a,h*=a,i.push({x:u,y:h})}const o=[],{x:l,y:c}=t;for(let u=0;u<i.length;u++){const{x:h,y:f}=i[u];o.push({minCol:Math.floor((s.xmin-l+.1*h)/e/h),maxCol:Math.floor((s.xmax-l-.1*h)/e/h),minRow:Math.floor((c-s.ymax+.1*f)/r/f),maxRow:Math.floor((c-s.ymin-.1*f)/r/f)})}return o}getPyramidPixelSize(s){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(s===0)return e;if(k(r)&&r.length)return r[s-1];const i=t**s;return{x:e.x*i,y:e.y*i}}identifyPixelLocation(s,e,r,t){const{spatialReference:i,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=t&&k(c)?c.tileSize[0]:a.blockWidth,h=t&&k(c)?c.tileSize[1]:a.blockHeight,f=Ue(s,i,r);if(!n.intersects(f)||e<0||e>o)return null;const d=this.getPyramidPixelSize(e),{x:p,y:g}=d,m=(l.y-f.y)/g/h,y=(f.x-l.x)/p/u,x=Math.min(h-1,Math.floor((m-Math.floor(m))*h)),I=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(y),rowOffset:x,colOffset:I,blockWidth:u,srcLocation:f}}getTileExtent(s,e,r,t,i,n){const[a,o]=n,l=t.x+r*a*s.x,c=l+a*s.x,u=t.y-e*o*s.y,h=u-o*s.y;return new G({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:i})}getBlockWidthHeight(s){return{blockWidth:s>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:s>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(s,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[s];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}async _fetchPixels(s,e,r,t={}){let i=Ce(s);if(i>=2)return{extent:s,pixelBlock:null};const n=this._getSourceDataInfo(s,e,r,t),{pyramidLevel:a,pyramidResolution:o,srcResolution:l,srcExtent:c,srcWidth:u,srcHeight:h}=n;if(u===0||h===0)return{extent:s,srcExtent:c,pixelBlock:null};const f=X(this.rasterInfo.transform),d=(f==null?void 0:f.type)==="gcs-shift",p=k(be(s.spatialReference));!d&&p||(i=Ce(n.srcExtent,d));const g=this.rasterInfo.storageInfo,m={x:Math.floor((c.xmin-g.origin.x)/o.x+.1),y:Math.floor((g.origin.y-c.ymax)/o.y+.1)},y=await this._fetchRawTiles(a,m,{width:u,height:h,wrapCount:i},t);if(!y)return{extent:s,srcExtent:c,pixelBlock:null};const x=a>0?g.pyramidBlockWidth:g.blockWidth,I=a>0?g.pyramidBlockHeight:g.blockHeight,v=x===u&&I===h&&m.x%x==0&&m.y%I==0,C=new W({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference}),_=!s.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:F}=t;if(!_&&v&&y.pixelBlocks.length===1&&x===e&&I===r&&l.x===C.x&&l.y===C.y)return{extent:s,srcExtent:c,pixelBlock:y.pixelBlocks[0]};const T=p&&k(be(c.spatialReference)),R=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");R&&!this.rasterJobHandler&&await Ge();const b=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:y.extent,pixelSize:C.toJSON(),datumTransformation:F,rasterTransform:f,hasWrapAround:i>0||T,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:R},t):Si({projectedExtent:s,srcBufferExtent:y.extent,pixelSize:C,datumTransformation:F,rasterTransform:f,hasWrapAround:i>0||T,isAdaptive:!1,includeGCSGrid:R});let P;const D=!t.requestRawData,H={rows:b.spacing[0],cols:b.spacing[1]},B=X(this._getRasterTileAlignmentInfo(a,y.extent.xmin)),{pixelBlocks:O,mosaicSize:N,isPartiallyFilled:L}=y;let j=null;if(this.rasterJobHandler)({pixelBlock:P,localNorthDirections:j}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:N,destDimension:D?{width:e,height:r}:null,coefs:D?b.coefficients:null,sampleSpacing:D?H:null,projectDirections:R,gcsGrid:R?b.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:B,blockWidths:null},t));else{const J=ke(O,N,{alignmentInfo:B});P=D?ei(J,{width:e,height:r},b.coefficients,H,t.interpolation):J,R&&b.gcsGrid&&(j=ti({width:e,height:r},b.gcsGrid),P=ii(P,this.rasterInfo.dataType,j))}return t.requestRawData||R?{srcExtent:c,pixelBlock:P,transformGrid:b,localNorthDirections:j,extent:s,isPartiallyFilled:L}:{srcExtent:c,extent:s,pixelBlock:P}}async _fetchRawTiles(s,e,r,t){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(s);let{x:l,y:c}=e,{width:u,height:h,wrapCount:f}=r;const d=this._getRasterTileAlignmentInfo(s,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let p=0,g=0,m=0;f&&k(d)&&({worldColumnCountFromOrigin:g,originColumnOffset:m,rightPadding:p}=d,g*d.blockWidth-p>=l+u&&(p=0));const y=Math.floor(l/a),x=Math.floor(c/o),I=Math.floor((l+u+p-1)/a),v=Math.floor((c+h+p-1)/o),C=n[s];if(!C)return null;const{minRow:_,minCol:F,maxCol:T,maxRow:R}=C;if(f===0&&(v<_||I<F||x>R||y>T))return null;const b=new Array;let P=!1;const D=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let J=x;J<=v;J++)for(let z=y;z<=I;z++){let Z=z;if(!t.disableWrapAround&&f&&k(d)&&g<=z&&(Z=z-g-m),J>=_&&Z>=F&&R>=J&&T>=Z){const Ie=this._fetchRawTile(s,J,Z,t);D?b.push(new Promise(ce=>{Ie.then(ue=>ce(ue)).catch(()=>{P=!0,ce(null)})})):b.push(Ie)}else b.push(Promise.resolve(null))}if(b.length===0)return null;const H=await Promise.all(b),B={height:(v-x+1)*o,width:(I-y+1)*a},{spatialReference:O}=this.rasterInfo,N=this.getPyramidPixelSize(s),{x:L,y:j}=N;return{extent:new G({xmin:i.x+y*a*L,xmax:i.x+(I+1)*a*L,ymin:i.y-(v+1)*o*j,ymax:i.y-x*o*j,spatialReference:O}),pixelBlocks:H,mosaicSize:B,isPartiallyFilled:P}}_fetchRawTile(s,e,r,t){const i=this.rasterInfo.storageInfo.blockBoundary[s];if(!i)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=i;if(e<n||r<a||e>l||r>o)return Promise.resolve(null);const c=Xe(this.url,t.sliceId),u=`${s}/${e}/${r}`;let h=Ye(c,t.registryId,u);if($(h)){const f=new AbortController;h=this.fetchRawTile(s,e,r,{...t,signal:f.signal}),Ke(c,t.registryId,u,h,f),h.catch(()=>Di(c,t.registryId,u))}return t.signal&&pt(t,()=>{$i(c,t.registryId,u)}),h}_computeMagDirValues(s){var l;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(s==null?void 0:s.length)!==2||!((l=s[0])!=null&&l.length))return null;const t=s[0].length;if(r==="vector-magdir"){const c=s[1].map(u=>(u+360)%360);return[s[0],c]}const[i,n]=s,a=[],o=[];for(let c=0;c<t;c++){const[u,h]=si([i[c],n[c]]);a.push(u),o.push(h)}return[a,o]}_getRasterTileAlignmentInfo(s,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Ri(this.rasterInfo)),$(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[s]}}_getSourceDataInfo(s,e,r,t={}){const i={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};t.srcResolution&&(i.srcResolution=t.srcResolution,this._updateSourceDataInfo(s,i));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=i,c=a/e,u=o/r,h=l<n&&c*u>=16,f=l===n&&this._requireTooManySrcTiles(a,o,e,r);if(h||f||a===0||o===0){const d=new W({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference});let p=vi(d,this.rasterInfo.spatialReference,s,i.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&g){const m=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-l+3>=m){const y=2**m;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(i.srcResolution=p,this._updateSourceDataInfo(s,i))}return this._requireTooManySrcTiles(i.srcWidth,i.srcHeight,e,r)&&(i.srcWidth=0,i.srcHeight=0),i}_requireTooManySrcTiles(s,e,r,t){const{tileInfo:i}=this.rasterInfo.storageInfo;return Math.ceil(s/i.size[0])*Math.ceil(e/i.size[1])>=Oi||s/r>Qe||e/t>Qe}_updateSourceDataInfo(s,e){e.srcWidth=0,e.srcHeight=0;const r=this.rasterInfo.spatialReference,{srcResolution:t,datumTransformation:i}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:o}=Ve(t,this.rasterInfo,this.ioConfig.sampling);if(o)return;let l=e.srcExtent||Fe(s,r,i);if(l==null)return;const c=X(this.rasterInfo.transform);c&&(l=c.inverseTransform(l)),e.srcExtent=l;const u=Math.ceil((l.xmax-l.xmin)/a.x-.1),h=Math.ceil((l.ymax-l.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(s){return k(this.rasterInfo.multidimensionalInfo)&&s.sliceId==null&&(s={...s,sliceId:this.getSliceIndex(s.multidimensionalDefinition)}),s}_processIdentifyResult(s,e){const{srcLocation:r,position:t,pyramidLevel:i,useTransposedTile:n}=e,a=s.pixels[0].length/s.width/s.height;if(!(!s.mask||s.mask[t]))return{location:r,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if($(o)||!n){const m=s.pixels.map(I=>I[t]),y={location:r,value:m,pyramidLevel:i},x=this._computeMagDirValues(m.map(I=>[I]));return x!=null&&x.length&&(y.magdirValue=x.map(I=>I[0])),y}let l=s.pixels.map(m=>m.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Lt(o,h.transposedVariableName);if(u){const m=At(f,X(h.multidimensionalDefinition),X(h.timeExtent));l=l.map(y=>m.map(x=>y[x])),c=c==null?void 0:c.map(y=>m.map(x=>y[x])),f=m.map(y=>f[y])}const d=s.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:s.pixelType};let g;return k(d)&&(ri(p,d),g=p.mask),{location:r,value:null,dataSeries:f.map((m,y)=>{const x={value:(g==null?void 0:g[y])===0?null:l.map(I=>I[y]),multidimensionalDefinition:m.multidimensionalDefinition.map(I=>new ut({...I,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:i}}};w([S()],U.prototype,"_rasterTileAlighmentInfo",void 0),w([S({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),w([S(at)],U.prototype,"url",null),w([S({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),w([S({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),w([S()],U.prototype,"hasUniqueSourceStorageInfo",void 0),w([S()],U.prototype,"rasterInfo",void 0),w([S()],U.prototype,"ioConfig",void 0),w([S()],U.prototype,"sourceJSON",void 0),U=w([Q("esri.layers.support.rasterDatasets.BaseRaster")],U);const ae=U;let ie=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){var c,u;await this.init();const{rasterFunction:r}=this;(u=(c=this.primaryRasters)==null?void 0:c.rasters)!=null&&u.length?r.sourceRasters=this.primaryRasters.rasters:this.primaryRasters=r.getPrimaryRasters();const{rasters:t,rasterIds:i}=this.primaryRasters,n=t.map(h=>h.rasterInfo?void 0:h.open(e));await Promise.all(n);const a=t.map(({rasterInfo:h})=>h),o=r.bind({rasterInfos:a,rasterIds:i});if(!o.success||a.length===0)throw new M("raster-function:open",`cannot bind the function: ${o.error??""}`);await this.syncJobHandler();const l=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(h=>this._hasSameStorageInfo(h,l)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",r.rasterInfo)}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,r,t,i={}){var f;const{rasters:n,rasterIds:a}=this.primaryRasters,o=n.map(d=>d.fetchPixels(e,r,t,i)),l=await Promise.all(o),c=l.map(d=>d.pixelBlock);if(i.skipRasterFunction||c.every(d=>$(d)))return l[0];const u=((f=l.find(d=>k(d.pixelBlock)))==null?void 0:f.extent)??e,h=this.rasterJobHandler?await this.rasterJobHandler.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:a}):this.rasterFunction.process({extent:u,primaryPixelBlocks:c,primaryRasterIds:a});return{...l[0],pixelBlock:h}}_hasSameStorageInfo(e,r){const{storageInfo:t,pixelSize:i,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:u}=r;return i.x===l.x&&i.y===l.y&&n.equals(c)&&a.equals(u)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};w([S({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),w([S()],ie.prototype,"tileType",void 0),w([S()],ie.prototype,"rasterFunction",void 0),w([S()],ie.prototype,"primaryRasters",void 0),ie=w([Q("esri.layers.support.rasterDatasets.FunctionRaster")],ie);const Be=ie,Ze=ze.getLogger("esri.layers.mixins.ImageryTileMixin"),Bi=s=>{let e=class extends s{constructor(...t){var i,n;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(i=t[0])==null?void 0:i.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.rasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}get tileInfo(){var t;return(t=this.rasterInfo)==null?void 0:t.storageInfo.tileInfo}set url(t){this._set("url",it(t,Ze))}set renderer(t){this._set("renderer",t),this.updateRenderer()}async convertVectorFieldData(t,i){if($(t)||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},i):ni(t,a)}async createFlowMesh(t,i){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,i):ai(t.meshType,t.simulationSettings,t.flowData,k(i.signal)?i.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var o,l;const{multidimensionalInfo:i}=this.rasterInfo??{};if($(i))return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;!$(n)&&n.length||(n=He(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(k(n)&&k(a)&&(k(a.start)||k(a.end))){n=n.map(y=>y.clone());const c=(l=(o=i.variables.find(({name:y})=>y===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:y})=>y==="StdTime"),u=n.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...t,multidimensionalDefinition:null};const{start:h,end:f}=a,d=$(h)?null:h.getTime(),p=$(f)?null:f.getTime(),g=d??p,m=p??d;if(k(c.values)){const y=c.values.filter(x=>{if(Array.isArray(x)){if(g===m)return x[0]<=g&&x[1]>=g;const I=x[0]<=g&&x[1]>g||x[0]<m&&x[1]>=m,v=x[0]>=g&&x[1]<=m||x[0]<g&&x[1]>m;return I||v}return g===m?x===g:x>=g&&x<=m});if(y.length){const x=y.sort((I,v)=>g===m?(I[0]??I)-(v[0]??v):Math.abs((I[1]??I)-m)-Math.abs((v[1]??v)-m))[0];u.values=[x]}else n=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;g>x||m<y?n=null:u.values=g===m?[g]:[Math.max(y,g),Math.min(x,m)]}}return k(n)&&qt(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){var u,h;if(this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",De.fromJSON(f)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let t,i=this.raster,n=!1;i.datasetFormat==="Function"?(t=i.primaryRasters.rasters,i=t[0],n=!0):t=[i];const{rasterFunction:a}=this;if(a){const f={raster:i};t.length>1&&t.forEach(g=>f[g.url]=g);const d=Oe(a.rasterFunctionDefinition??a.toJSON(),f),p=new Be({rasterFunction:d});p.rasterJobHandler=this._rasterJobHandler.instance,await p.open(),this._cachedRasterFunctionJson=(h=this.rasterFunction)==null?void 0:h.toJSON(),this.raster=p}else this.raster=i,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(f=>f>=l):l>=3;o&&(c||this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){var c;const{loaded:t,symbolizer:i}=this;if(!t||!i)return;const{rasterInfo:n}=this.raster,a=(c=Le(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name,o=Ae({...this.renderer.toJSON(),variableName:a});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const l=this._rasterJobHandler.instance;l&&(i.rasterInfo=We(n,a),i.rendererJSON=o,i.bind(),await l.updateSymbolizer(i),this._cachedRendererJson=o)}async applyRenderer(t,i){const n=t&&t.pixelBlock;if(!(k(n)&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:i,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:i,bandIds:l}),a}getTileUrl(t,i,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${i}/${n}`:""}getCompatibleTileInfo(t,i,n=!1){if(!this.loaded||$(i))return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=gt(t);return ye.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:i.xmin,y:i.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,i,n,a={}){if(r(this),a.requestAsImageElement){const l=this.getTileUrl(t,i,n);return rt(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(c=>c.data)}const{rasterInfo:o}=this;if(k(o.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),$(a.multidimensionalDefinition))){const l=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,i,n,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,i,n,a)}async fetchPixels(t,i,n,a={}){return k(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),$(a.multidimensionalDefinition))?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(t,i,n,a))}async identify(t,i={}){var l;const{raster:n,rasterInfo:a}=this;if(k(a.multidimensionalInfo)&&!(a.hasMultidimensionalTranspose&&(ct(i.multidimensionalDefinition)||i.transposedVariableName||i.timeExtent))&&(i=this.normalizeRasterFetchOptions(i),$(i.multidimensionalDefinition)))return{location:t,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(t))throw new M("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,i)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,o,l;const t=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if($(t)||((o=this.rasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const i=this.multidimensionalDefinition,n=(l=i==null?void 0:i[0])==null?void 0:l.variableName;return t.variables.some(c=>c.name===n&&(!(i!=null&&i[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var n;const i=t??((n=this.rasterInfo)==null?void 0:n.multidimensionalInfo);return jt(this.multidimensionalSubset,i)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=He(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Vt;return this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){r(this);const{raster:i}=this,n=Gt(i.rasterInfo,i.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){var c,u,h,f,d;r(this);const{rasterInfo:i}=this.raster;!this.bandIds&&i.bandCount>1&&(this.bandIds=Ut(i));const n=(c=Le(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name;if(!this.renderer||t==="override"){const p=qe(i,{bandIds:this.bandIds,variableName:n});this.raster.datasetFormat==="WCSServer"&&p.type==="raster-stretch"&&((((u=i.statistics)==null?void 0:u[0].max)??0)>1e24||(((h=i.statistics)==null?void 0:h[0].min)??0)<-1e24)&&(p.dynamicRangeAdjustment=!0,p.statistics=null,p.stretchType==="none"&&(p.stretchType="min-max")),this.renderer=p}const a=Ae({...this.renderer.toJSON(),variableName:n}),o=We(i,n);this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=o):this.symbolizer=new oi({rendererJSON:a,rasterInfo:o});const l=this.symbolizer.bind();if(l.success){if(t==="auto"){const{colormap:p}=this.raster.rasterInfo,g=this.renderer;if(k(p))if(g.type!=="raster-colormap")this._configDefaultRenderer("override");else{const m=qe(this.raster.rasterInfo);JSON.stringify(m)!==JSON.stringify(g)&&this._configDefaultRenderer("override")}else if(g.type==="raster-stretch"){const m=(f=this.bandIds)==null?void 0:f.length,y=(d=g.statistics)==null?void 0:d.length;!g.dynamicRangeAdjustment&&y&&m&&y!==m&&this._configDefaultRenderer("override")}}}else Ze.warn("imagery-tile-mixin",l.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.rasterInfo)throw new M("imagery-tile","no raster")}return w([S()],e.prototype,"_cachedRendererJson",void 0),w([S()],e.prototype,"_cachedRasterFunctionJson",void 0),w([S()],e.prototype,"_compatibleFullExtent",void 0),w([S()],e.prototype,"_isConstructedFromFunctionRaster",void 0),w([S()],e.prototype,"_rasterJobHandler",void 0),w([S()],e.prototype,"bandIds",void 0),w([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),w([S({json:{read:!1}})],e.prototype,"fullExtent",null),w([S()],e.prototype,"interpolation",void 0),w([S()],e.prototype,"ioConfig",void 0),w([S({type:[ut],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),w([S({type:Wt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),w([S()],e.prototype,"raster",void 0),w([S({type:De})],e.prototype,"rasterFunction",void 0),w([S()],e.prototype,"rasterInfo",void 0),w([S()],e.prototype,"sourceJSON",void 0),w([S({readOnly:!0,type:q,json:{read:!1}})],e.prototype,"spatialReference",void 0),w([S({json:{read:!1}})],e.prototype,"tileInfo",null),w([S(at)],e.prototype,"url",null),w([S({types:ht})],e.prototype,"renderer",null),w([S()],e.prototype,"symbolizer",void 0),e=w([Q("esri.layers.ImageryTileMixin")],e),e};function zi(s){const e=s.fields,r=s.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",i=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=i.map(c=>c.name),a=[];let o=0,l=0;return r.forEach(c=>{const u={};for(u[t]=o++,l=1;l<n.length;l++)u[n[l]]=c[l-1];a.push({attributes:u})}),{displayFieldName:"",fields:i,features:a}}class ft{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const i=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),o={version:t,recordCount:i,headerByteCount:n,recordByteCount:a};let l=32;const c=[],u=[];let h;if(t===3){for(;r.getUint8(l)!==13;)h=String.fromCharCode(r.getUint8(l+11)).trim(),c.push({name:je(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:r.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<i&&e.byteLength-l>a;){const f=[];r.getUint8(l)===32?(l+=1,c.forEach(d=>{if(d.type==="C")f.push(je(new Uint8Array(e,l,d.length)).trim());else if(d.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim(),10));else if(d.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim()));else if(d.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=d.length}),u.push(f)):l+=a}}return{header:o,fields:c,records:u,recordSet:zi({fields:c,records:u})}}}const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const et=8;let fe=class extends ae{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(r))throw new M("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:i}=this._parseHeader(r);if(i.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();i.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,r,t,i={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,r,t,i.multidimensionalDefinition,a),u=this._getIndexRecordFromBundle(r,t,o),h=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!h)return null;const f=new Uint8Array(h.data),d=this._getTileEndAndContentType(f,u);if(d.recordSize===0)return null;const p=await this.request(c,{range:{from:d.position,to:d.position+d.recordSize},responseType:"array-buffer",signal:i.signal});if(!p)return null;const[g,m]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:g,height:m,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const r=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!r.some(t=>!e[t])}_parseHeader(e){var J;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:i,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map(z=>({min:z.min,max:z.max,avg:z.mean,stddev:z.standardDeviation,median:z.median,mode:z.mode})),h=e.extent.spatialReference,f=(J=e.geodataXform)==null?void 0:J.spatialReference,d=new q(h!=null&&h.wkid||h!=null&&h.wkt?h:f);let p=new G({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:d});const g=new W({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:d}),m=Math.round((p.xmax-p.xmin)/g.x),y=Math.round((p.ymax-p.ymin)/g.y),x=this._parseTransform(e.geodataXform),I=x?p:null;x&&(p=x.forwardTransform(p),g.x=(p.xmax-p.xmin)/m,g.y=(p.ymax-p.ymin)/y);const v=e.properties??{},C=e.format.toLowerCase().replace("cache/",""),_=new W(e.origin.x,e.origin.y,d);let F,T,R,b;if(n&&n.colors)for(F=[],T=0;T<n.colors.length;T++)R=n.colors[T],b=n.values?n.values[T]:T,F.push([b,255&R,R<<16>>>24,R<<8>>>24,R>>>24]);const P=e.LODInfos,D=[];for(T=0;T<P.levels.length;T++)D.push(new nt({level:P.levels[T],resolution:P.resolutions[T],scale:96/.0254*P.resolutions[T]}));const H=new ye({dpi:96,lods:D,format:C,origin:_,size:[a,o],spatialReference:d}),B={recordSize:et,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*et+64},O=[{maxCol:Math.ceil(m/a)-1,maxRow:Math.ceil(y/o)-1,minCol:0,minRow:0}];let N=2;if(c>0)for(T=0;T<c;T++)O.push({maxCol:Math.ceil(m/N/a)-1,maxRow:Math.ceil(y/N/o)-1,minCol:0,minRow:0}),N*=2;const L=e.mdInfo;let j=null;if(L&&v._yxs){const z=v._yxs;j={packetSize:z.PacketSize,tileSize:[z.TileXSize,z.TileYSize]}}return{storageInfo:B,rasterInfo:new xe({width:m,height:y,pixelType:r,bandCount:t,extent:p,nativeExtent:I,transform:x,spatialReference:d,pixelSize:g,keyProperties:v,statistics:u,histograms:i,multidimensionalInfo:L,colormap:F,storageInfo:new ge({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:_,tileInfo:H,transposeInfo:j,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:O})})}}_parseTransform(e){var t,i;if(!Ti(e))throw new M("cloudraster:open","the data contains unsupported geodata transform types");const r=_i(e);if(r.type==="identity")return null;if(r.type!=="polynomial"||!((t=r.forwardCoefficients)!=null&&t.length)||!((i=r.inverseCoefficients)!=null&&i.length))throw new M("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const r=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),i=await Promise.all([r,t]);let n;if(i[0]){let a=i[0].fields;const o=i[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":se.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&i[1]&&(n=ft.parse(i[1]).recordSet),ot.fromJSON(n)}_buildCacheFilePath(e,r,t,i,n){const a=this._getPackageSize(!!n),o=Math.floor(r/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,f=i==null?void 0:i[0];if($(h)||!f)return`${this.url}/_alllayers/${u}/${c}.bundle`;let d="_yxs";if(!n){d=h.variables.find(m=>m.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const g=4-d.length;for(let m=0;m<g;m++)d="0"+d;d="S"+d}const p=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${p}/${d}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:r}=this.rasterInfo.storageInfo;return e&&k(r)?r.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:r}=this.rasterInfo,{transposeInfo:t}=r;return e&&k(t)?t.tileSize:r.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,r,t=!1){const i=this._getPackageSize(t),n=i*(e%i)+r%i;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,r){const t=e.subarray(r,r+8);let i,n=0;for(i=0;i<5;i++)n|=(255&t[i])<<8*i;const a=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&t[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let r=e.toString(16);if(r.length!==4){let t=4-r.length;for(;t-- >0;)r="0"+r}return r}};w([S({readOnly:!0})],fe.prototype,"storageInfo",void 0),w([S({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),fe=w([Q("esri.layers.support.rasterDatasets.CloudRaster")],fe);const Ei=fe;let de=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(s){await this.init();const e=this.data,{pixelBlock:r,statistics:t,histograms:i,name:n,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=r,f=e.extent??new G({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new q({wkid:3857})}),d=e.isPseudoSpatialReference??!e.extent,p={x:f.width/c,y:f.height/u},g=new xe({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:r.pixels.length,keyProperties:a||{},statistics:t,isPseudoSpatialReference:d,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},s),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(s,e,r,t={}){const i=this._pixelBlockTiles.get(`${s}/${e}/${r}`);return Promise.resolve(i)}async _buildInMemoryRaster(s,e,r){var c,u;const t=this.rasterInfo.storageInfo.maximumPyramidLevel,i=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:s,tileSize:e,maximumPyramidLevel:t},r):Promise.resolve(li(s,e,t)),n=k(this.rasterInfo.statistics),a=k(this.rasterInfo.histograms),o=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:s},r):Promise.resolve(ci(s)),l=await lt([i,o]);if(!l[0].value&&l[1].value)throw new M("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=l[0].value,n||(this.rasterInfo.statistics=(c=l[1].value)==null?void 0:c.statistics),a||(this.rasterInfo.histograms=(u=l[1].value)==null?void 0:u.histograms)}};w([S({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),w([S()],de.prototype,"data",void 0),de=w([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const Ji=de;function le(s,e){if(!s||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=le(s,r);for(let a=0;a<n.length;a++)le(n[a],e).forEach(o=>t.push(o));return t}const i=s.getElementsByTagNameNS("*",r);if(!i||i.length===0)return[];for(let n=0;n<i.length;n++)t.push(i[n]||i.item[n]);return t}function V(s,e){if(!s||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=le(s,r);return t.length>0?e?V(t[0],e):t[0]:null}function K(s,e=null){const r=e?V(s,e):s;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function Ni(s,e){const r=le(s,e),t=[];let i;for(let n=0;n<r.length;n++)i=r[n].textContent||r[n].nodeValue,i&&(i=i.trim(),i!==""&&t.push(i));return t}function Se(s,e){return Ni(s,e).map(r=>Number(r))}function ne(s,e){const r=K(s,e);return Number(r)}function Pe(s,e){var i;const r=(i=s==null?void 0:s.nodeName)==null?void 0:i.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function tt(s,e){if(!s||!e)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(e[t]);return r}function Hi(s){const e=V(s,"GeodataXform"),r=_e(ne(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=ne(e,"PolynomialOrder")??1,i=Se(e,"CoeffX/Double"),n=Se(e,"CoeffY/Double"),a=Se(e,"InverseCoeffX/Double"),o=Se(e,"InverseCoeffY/Double"),l=tt(i,n),c=tt(a,o);return{spatialReference:r,transform:l&&c&&l.length&&c.length?new Je({spatialReference:r,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Li(s){var f;const e=ne(s,"NoDataValue"),r=V(s,"Histograms/HistItem"),t=ne(r,"HistMin"),i=ne(r,"HistMax"),n=ne(r,"BucketCount"),a=(f=K(r,"HistCounts"))==null?void 0:f.split("|").map(d=>Number(d));let o,l,c,u;le(s,"Metadata/MDI").forEach(d=>{const p=Number(d.textContent??d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":u=p}});const h=ne(s,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&i!=null?{min:t,max:i,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function _e(s){if(!s)return null;let e=Number(s);if(!isNaN(e)&&e!==0)return new q({wkid:e});if((s=String(s)).startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const r=s.indexOf("VERTCS"),t=s.indexOf("PROJCS"),i=t>-1?t:s.indexOf("GEOGCS");if(i===-1)return null;const n=s.slice(i,s.lastIndexOf("]",r)+1).trim(),a=s.slice(r,s.lastIndexOf("]")).trim();e=Me(n);const o=new q(e?{wkid:e}:{wkt:n}),l=Me(a);return l&&(o.vcsWkid=l),o}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(e=Me(s),new q(e!==0?{wkid:e}:{wkt:s})):null}function Me(s){var i;const e=s.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),r=e[e.length-1].split(","),t=(i=r[0])==null?void 0:i.toLowerCase();if((t==="epsg"||t==="esri")&&s.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Ne(s){var t;if(((t=s==null?void 0:s.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach(i=>{if(i.nodeType===1){if(Pe(i,"SRS")){if(!e.spatialReference){const n=K(i);e.spatialReference=_e(n)}}else if(Pe(i,"Metadata"))if(i.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Hi(i);e.transform=a,e.spatialReference||(e.spatialReference=n)}else le(i,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Pe(i,"PAMRasterBand")){const n=Li(i);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const r=e.rasterBands;if(r.length){const i=!!r[0].statistics;e.statistics=i?r.map(a=>a.statistics).filter(k):null;const n=!!r[0].histogram;e.histograms=n?r.map(a=>a.histogram).filter(k):null}return e}let ve=class extends ae{async open(s){await this.init();const e=await this._fetchData(s);let{spatialReference:r,statistics:t,histograms:i,transform:n}=await this._fetchAuxiliaryData(s);const a=!r;a&&(r=new q({wkid:3857})),i!=null&&i.length&&t==null&&(t=Ee(i));const{width:o,height:l}=e;let c=new G({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const d=n.forwardCoefficients;h=d&&d[1]===0&&d[2]===0,h&&(n=null,c=u)}const f=new Ji({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(s,e,r,t={}){return this._inMemoryRaster.fetchRawTile(s,e,r,t)}async _fetchData(s){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=ui(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new M("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),i=t==="gif"||t==="bmp"||!xt("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:i,hasNoZlibMask:!0});if(n==null)throw new M("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(s){var c;const e=X(s==null?void 0:s.signal),r=this.ioConfig.skipExtensions??[],t=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n=i==="JPG"?"jgw":i==="PNG"?"pgw":i==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await lt([t,a]);if(e!=null&&e.aborted)throw It();const l=Ne((c=o[0].value)==null?void 0:c.data);if(!l.transform){const u=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(h=>Number(h)):null;l.transform=(u==null?void 0:u.length)===6?new Je({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return l}};w([S({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=w([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],ve);const Re=ve;let me=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var T,R;await this.init();const r=e&&e.signal,t=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=t.data;if(this.sourceJSON=i,!i)throw new M("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new M("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(n.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((T=i.name)==null?void 0:T.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:r});if($(a))throw new M("image-server-raster:open","cannot initialize image service");const o=this.tileType==="Map"?Fi(i.tileInfo,i):ye.fromJSON(i.tileInfo);wt(o);const[l,c]=this._computeMinMaxLOD(a,o),{extent:u,pixelSize:h}=a,f=.5/a.width*h.x,d=Math.max(h.x,h.y),{lods:p}=o;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(h.x-h.y)>f||!p.some(b=>Math.abs(b.resolution-d)<f))&&(h.x=h.y=l.resolution,a.width=Math.ceil((u.xmax-u.xmin)/h.x-.1),a.height=Math.ceil((u.ymax-u.ymin)/h.y-.1));const g=l.level-c.level,[m,y]=o.size,x=[],I=[];p.forEach((b,P)=>{b.level>=c.level&&b.level<=l.level&&x.push({x:b.resolution,y:b.resolution}),P<p.length-1&&I.push(Math.round(10*b.resolution/p[P+1].resolution)/10)}),x.sort((b,P)=>b.x-P.x);const v=this.computeBlockBoundary(u,m,y,o.origin,x,g),C=x.length>1?x.slice(1):null;let _;i.transposeInfo&&(_={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((R=a.keyProperties)==null?void 0:R._yxs.PacketSize)??0});const F=I.length<=1||I.length>=3&&I.slice(0,I.length-1).every(b=>b===I[0])?I[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/g))/10;if(a.storageInfo=new ge({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:C,pyramidScalingFactor:F,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:_,blockBoundary:v}),this._fixGCSShift(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:a.storageInfo.tileInfo,parsedUrl:bt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Pi({layer:b})}}async fetchRawTile(e,r,t,i={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:o}=n,l=k(o)&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${r}/${t}`,h=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:f}=await this.request(u,{query:h,responseType:"array-buffer",signal:i.signal});if(!f)return null;const d=l?o.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(f,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:X(this.rasterInfo.noDataValue)});if(p==null)return null;const g=n.blockBoundary[e];if(n.compression!=="jpg"||t>g.minCol&&t<g.maxCol&&r>g.minRow&&r<g.maxRow)return p;const{origin:m,blockWidth:y,blockHeight:x}=n,{x:I,y:v}=this.getPyramidPixelSize(e),C=Math.round((a.xmin-m.x)/I)%y,_=Math.round((a.xmax-m.x)/I)%y||y,F=Math.round((m.y-a.ymax)/v)%x,T=Math.round((m.y-a.ymin)/v)%x||x,R=t===g.minCol?C:0,b=r===g.minRow?F:0,P=t===g.maxCol?_:y,D=r===g.maxRow?T:x;return hi(p,{x:R,y:b},{width:P-R,height:D-b}),p}getSliceIndex(e){if(!this._slices||$(e)||e.length===0)return null;const r=e;for(let t=0;t<this._slices.length;t++){const i=this._slices[t].multidimensionalDefinition;if(i.length===r.length&&!i.some(n=>{const a=r.find(o=>n.variableName===o.variableName&&o.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return t}return null}async fetchVariableStatisticsHistograms(e,r){const t=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.statistics}),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.histograms}),n=await Promise.all([t,i]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,r={}){if(!this._tilemapCache)return 0;let t=this.identifyPixelLocation(e,0,X(r.datumTransformation));if(t===null)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-i+this._levelOffset;const o=t.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,t.row,t.col,r)==="available")break}catch{}if(a--,i++,t=this.identifyPixelLocation(o,i,X(r.datumTransformation)),t===null)return null}return a===-1||t==null?null:i}async _fetchRasterInfo(e){const r=this.sourceJSON;if(this.tileType==="Map"){const o=r.fullExtent||r.extent,l=Math.ceil((o.xmax-o.xmin)/r.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/r.pixelSizeY-.1),u=q.fromJSON(r.spatialReference||o.spatialReference),h=new W({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:u});return new xe({width:l,height:c,bandCount:3,extent:G.fromJSON(o),spatialReference:u,pixelSize:h,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=e,i=Xt(this.url,this.sourceJSON,{signal:t,query:this.ioConfig.customFetchParameters}),n=r.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data&&o.data.slices).catch(()=>null):null,a=await Promise.all([i,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:r,spatialReference:t}=e;r.xmin>-1&&r.xmax>181&&(t!=null&&t.wkid)&&t.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ki,e.extent=e.transform.forwardTransform(r))}_computeMinMaxLOD(e,r){const{pixelSize:t}=e,i=.5/e.width*t.x,{lods:n}=r,a=r.lodAt(Math.max.apply(null,n.map(d=>d.level))),o=r.lodAt(Math.min.apply(null,n.map(d=>d.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=n[0].level,[a,o];if(l==="Raster")return[n.find(d=>d.resolution===t.x)??a,o];const{minScale:c,maxScale:u}=this.sourceJSON;let h=a;u>0&&(h=n.find(d=>Math.abs(d.scale-u)<i),h||(h=n.filter(d=>d.scale>u).sort((d,p)=>d.scale>p.scale?1:-1)[0]??a));let f=o;return c>0&&(f=n.find(d=>Math.abs(d.scale-c)<i)??o,this._levelOffset=f.level-o.level),[h,f]}};w([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),w([S()],me.prototype,"tileType",void 0),me=w([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const Ai=me,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let oe=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(s){var g;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=s?X(s.signal):null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:i}=this._parseHeader(r.data);if(((g=this.ioConfig.skipExtensions)==null?void 0:g.indexOf("aux.xml"))===-1){const m=await this._fetchAuxiliaryData(s);m!=null&&(t.statistics=m.statistics??t.statistics,t.histograms=m.histograms,m.histograms&&$(t.statistics)&&(t.statistics=Ee(m.histograms)))}this._set("rasterInfo",t),this._files=i;const n=await this.request(i.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const m=Math.ceil(c/a/l**p)-1,y=Math.ceil(u/o/l**p)-1;d+=(m+1)*(y+1)*f*4,h.push({maxRow:y,maxCol:m,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){const{blockWidth:i,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[s];if(!o||o.maxRow<e||o.maxCol<r||o.minRow>e||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(s,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const R=new Uint8Array(i*n);return new fi({width:i,height:n,pixels:null,mask:R,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let m=0;for(m=0;m<p;m++)(!d||d.indexOf[m]>-1)&&g.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(R=>R.data.byteLength).reduce((R,b)=>R+b),I=new Uint8Array(x);let v=0;for(m=0;m<p;m++)I.set(new Uint8Array(y[m].data),v),v+=y[m].data.byteLength;const C=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(I.buffer,{width:i,height:n,format:C,planes:(d==null?void 0:d.length)||l,pixelType:c});if(_==null)return null;if(k(this.rasterInfo.noDataValue)&&C!=="lerc"&&!_.mask){const R=this.rasterInfo.noDataValue[0];if(R!=null){const b=_.width*_.height,P=new Uint8Array(b);if(Math.abs(R)>1e24)for(m=0;m<b;m++)Math.abs((_.pixels[0][m]-R)/R)>1e-6&&(P[m]=1);else for(m=0;m<b;m++)_.pixels[0][m]!==R&&(P[m]=1);_.mask=P}}let F=0,T=0;if(h!==i||f!==n){let R=_.mask;if(R)for(m=0;m<n;m++)if(T=m*i,m<f)for(F=h;F<i;F++)R[T+F]=0;else for(F=0;F<i;F++)R[T+F]=0;else for(R=new Uint8Array(i*n),_.mask=R,m=0;m<f;m++)for(T=m*i,F=0;F<h;F++)R[T+F]=1}return _}_parseIndex(s){if(s.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,i,n,a;if(di){for(r=new Uint8Array(s),i=new ArrayBuffer(s.byteLength),t=new Uint8Array(i),n=0;n<s.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=r[4*n+3-a];e=new Uint32Array(i)}else e=new Uint32Array(s);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(s,e,r){const{blockWidth:t,blockHeight:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<s;h++)d=n**h,c=Math.ceil(a/t/d),u=Math.ceil(o/i/d),f+=c*u;d=n**s,c=Math.ceil(a/t/d),u=Math.ceil(o/i/d),f+=e*c+r,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let g=0,m=0;const y=[];for(let x=0;x<l;x++)g=p[4*x+0]*2**32+p[4*x+1],m=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:m});return{ranges:y,actualTileWidth:r<c-1?t:Math.ceil(a/d)-t*(c-1),actualTileHeight:e<u-1?i:Math.ceil(o/d)-i*(u-1)}}_parseHeader(s){const e=V(s,"MRF_META/Raster");if(!e)throw new M("mrf:open","not a valid MRF format");const r=V(e,"Size"),t=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new M("mrf:open","currently does not support compression "+a);const o=K(e,"DataType")||"UInt8",l=Y.get(o);if(l==null)throw new M("mrf:open","currently does not support pixel type "+o);const c=V(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=V(e,"DataValues");let d,p;if(f&&(p=f.getAttribute("NoData"),p!=null&&(d=p.trim().split(" ").map(P=>parseFloat(P)))),V(s,"MRF_META/CachedSource"))throw new M("mrf:open","currently does not support MRF referencing other data files");const g=V(s,"MRF_META/GeoTags"),m=V(g,"BoundingBox");let y,x=!1;if(m!=null){const P=parseFloat(m.getAttribute("minx")),D=parseFloat(m.getAttribute("miny")),H=parseFloat(m.getAttribute("maxx")),B=parseFloat(m.getAttribute("maxy")),O=K(g,"Projection")||"";let N=q.WGS84;if(O!=="LOCAL_CS[]")if(O.toLowerCase().startsWith("epsg:")){const L=Number(O.slice(5));isNaN(L)||L===0||(N=new q({wkid:L}))}else N=_e(O)??q.WGS84;else x=!0,N=new q({wkid:3857});y=new G(P,D,H,B),y.spatialReference=N}else x=!0,y=new G({xmin:-.5,ymin:.5-i,xmax:t-.5,ymax:.5,spatialReference:new q({wkid:3857})});const I=V(s,"MRF_META/Rsets"),v=parseInt(I&&I.getAttribute("scale")||"2",10),C=y.spatialReference,_=new ge({origin:new W({x:y.xmin,y:y.ymax,spatialReference:C}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:v}),F=new W({x:y.width/t,y:y.height/i,spatialReference:C}),T=new xe({width:t,height:i,extent:y,isPseudoSpatialReference:x,spatialReference:C,bandCount:n,pixelType:l,pixelSize:F,noDataValue:d,storageInfo:_}),R=K(s,"datafile"),b=K(s,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:b||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return Ne(e)}catch{return null}}};w([S()],oe.prototype,"_files",void 0),w([S()],oe.prototype,"_storageIndex",void 0),w([S({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=w([Q("esri.layers.support.rasterIO.MRFRaster")],oe);const Wi=oe,$e=(s,e)=>{var r;return(r=s.get(e))==null?void 0:r.values},he=(s,e)=>{var r,t;return(t=(r=s.get(e))==null?void 0:r.values)==null?void 0:t[0]};let re=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(s){await this.init();const e=s?X(s.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new M("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:i,isBigTiff:n}=mi(r),a=[];await this._readIFDs(a,r,t,i,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=pi(a),u=yi(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new M("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new M("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const f=await this._fetchAuxiliaryMetaData(s);f!=null&&this._processPAMInfo(f,l)}h.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(s),k(l.attributeTable)&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(s,e,r))return null;const i=await this._fetchRawTiffTile(s,e,r,!1,t);if(k(i)&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(s,e,r,!0,t);k(a)&&a.pixels[0]instanceof Uint8Array&&(i.mask=a.pixels[0])}return i}_parseIFDs(s){var D,H;const e=gi(s),{width:r,height:t,tileWidth:i,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,tileBoundary:d,affine:p,metadata:g}=e,m=((D=e.extent.spatialReference)==null?void 0:D.wkt)||((H=e.extent.spatialReference)==null?void 0:H.wkid);let y=_e(m),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new q({wkid:3857}));const I=new G({...e.extent,spatialReference:y}),v=new W(I?{x:I.xmin,y:I.ymax,spatialReference:y}:{x:0,y:0}),C=new ge({blockWidth:i,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:v,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:d}),_=new W({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/t,spatialReference:y}),F=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let T=null;const R=he(s[0],"PHOTOMETRICINTERPRETATION"),b=$e(s[0],"COLORMAP");if(R<=3&&(b==null?void 0:b.length)>3&&b.length%3==0){T=[];const B=b.length/3;for(let O=0;O<B;O++)T.push([O,b[O]>>>8,b[O+B]>>>8,b[O+2*B]>>>8])}const P=new xe({width:r,height:t,bandCount:a,pixelType:o,pixelSize:_,storageInfo:C,spatialReference:y,isPseudoSpatialReference:x,keyProperties:F,extent:I,colormap:T,statistics:g?g.statistics:null});return p!=null&&p.length&&(P.nativeExtent=new G({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:y}),P.transform=new Je({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new W({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/t,spatialReference:y}),C.origin.x=-.5,C.origin.y=.5),{imageInfo:e,rasterInfo:P}}_processPAMInfo(s,e){if(e.statistics=s.statistics??e.statistics,e.histograms=s.histograms,s.histograms&&$(e.statistics)&&(e.statistics=Ee(s.histograms)),s.transform&&$(e.transform)){e.transform=s.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&s.spatialReference&&(e.spatialReference=s.spatialReference)}async _readIFDs(s,e,r,t,i,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+i,to:t+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=t+i,t=0);const o=await this._readIFD(e,r,t,i,we.TIFF_TAGS,n,a);if(s.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(s,e,r,o.nextIFD-i,i,n,a)}async _readIFD(s,e,r,t,i=we.TIFF_TAGS,n=4,a){var l,c;if(!s)return null;const o=xi(s,e,r,t,i,n);if(o.success){const u=[];if((l=o.ifd)==null||l.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(d=>d.offlineOffsetSize).filter(k),f=Math.min.apply(null,h.map(d=>d[0]));if(Math.min.apply(null,h.map(d=>d[0]+d[1]))-f<=this._bufferSize){const{data:d}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:a});s=d,t=f,u.forEach(p=>Ii(s,e,p,t))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=o.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const d=f[0]+"."+f[1]+"."+f[2],p=await this._readIFD(s,e,h.valueOffset+6-t,t,we.GEO_KEYS,2,a);h.data=p.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==s.byteLength)return(s=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(s,e,0,t,we.TIFF_TAGS,4,a)}async _fetchRawTiffTile(s,e,r,t,i={}){const n=this._getTileLocation(s,e,r,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,u=a.map(_=>this.request(this.url,{range:_,responseType:"array-buffer",signal:i.signal})),h=await Promise.all(u),f=h.map(_=>_.data.byteLength).reduce((_,F)=>_+F),d=h.length===1?h[0].data:new ArrayBuffer(f),p=[0],g=[0];if(h.length>1){const _=new Uint8Array(d);for(let F=0,T=0;F<h.length;F++){const R=h[F].data;_.set(new Uint8Array(R),T),p[F]=T,T+=R.byteLength,g[F]=R.byteLength}}const{blockWidth:m,blockHeight:y}=this.getBlockWidthHeight(s),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:m,height:y,planes:null,pixelType:null});if(x==null)return null;let I,v,C;if(o!==m||l!==y){let _=x.mask;if(_)for(I=0;I<y;I++)if(C=I*m,I<l)for(v=o;v<m;v++)_[C+v]=0;else for(v=0;v<m;v++)_[C+v]=0;else for(_=new Uint8Array(m*y),x.mask=_,I=0;I<l;I++)for(C=I*m,v=0;v<o;v++)_[C+v]=1}return x}_getTileLocation(s,e,r,t=!1){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,a=s===0?0:s-(i-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=wi(l,o),u=$e(l,"TILEOFFSETS");if(u===void 0)return null;const h=$e(l,"TILEBYTECOUNTS"),{minRow:f,minCol:d,maxRow:p,maxCol:g}=n[a];if(e>p||r>g||e<f||r<d)return null;const m=he(l,"IMAGEWIDTH"),y=he(l,"IMAGELENGTH"),x=he(l,"TILEWIDTH"),I=he(l,"TILELENGTH"),v=c?this.rasterInfo.bandCount:1,C=v*e*(g+1)+r,_=[{from:u[C],to:u[C+v-1]+h[C+v-1]-1}];if(c){let R=!0;for(let b=0;b<v;b++)if(u[C+b]+h[C+b]!==u[C+b+1]){R=!1;break}if(!R)for(let b=0;b<v;b++)_[b]={from:u[C+b],to:u[C+b]+h[C+b]-1}}const F=u[C],T=h[C];return F==null||T==null?null:{ranges:_,ifd:l,actualTileWidth:r===g&&m%x||x,actualTileHeight:e===p&&y%I||I}}async _fetchAuxiliaryMetaData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return Ne(e)}catch{return null}}async _fetchAuxiliaryTable(s){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=ft.parse(e);return r!=null&&r.recordSet?ot.fromJSON(r.recordSet):null}catch{return null}}};w([S()],re.prototype,"_files",void 0),w([S()],re.prototype,"_headerInfo",void 0),w([S()],re.prototype,"_bufferSize",void 0),w([S({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),re=w([Q("esri.layers.support.rasterDatasets.TIFFRaster")],re);const qi=re,A=new Map;A.set("CRF",{desc:"Cloud Raster Format",constructor:Ei}),A.set("MRF",{desc:"Meta Raster Format",constructor:Wi}),A.set("TIFF",{desc:"GeoTIFF",constructor:qi}),A.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Ai}),A.set("JPG",{desc:"JPG Raster Format",constructor:Re}),A.set("PNG",{desc:"PNG Raster Format",constructor:Re}),A.set("GIF",{desc:"GIF Raster Format",constructor:Re}),A.set("BMP",{desc:"BMP Raster Format",constructor:Re});class ji{static get supportedFormats(){const e=new Set;return A.forEach((r,t)=>e.add(t)),e}static async open(e){const{url:r,ioConfig:t,sourceJSON:i}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:i,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(t!=null&&t.enableCRF))throw new M("rasterfactory:open",`cannot open raster: ${r}`);return o=A.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new M("rasterfactory:open","not a supported format "+n);const c=Array.from(A.keys());let u=0;const h=()=>(n=c[u++],n&&(n!=="CRF"||t!=null&&t.enableCRF)?(o=A.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null);return h()}static register(e,r,t){A.has(e.toUpperCase())||A.set(e.toUpperCase(),{desc:r,constructor:t})}}let E=class extends St(Rt(vt(Tt(_t(Bi(kt(Ct(Ft(Pt(Nt)))))))))){constructor(...s){super(...s),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(s,e){return typeof s=="string"?{url:s,...e}:s}load(s){const e=k(s)?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(Mt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o;let s=[new pe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,r=e==null?void 0:e.attributeTable,t=k(r)?r.fields:null,i="Raster.";if(t){const l=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const u=c.clone();return u.name=i+c.name,u});s=s.concat(l)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&k(a)){const l=(o=a.variables[0].unit)==null?void 0:o.trim(),c="Magnitude"+(l?` (${l})`:"");s.push(new pe({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),s.push(new pe({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return s}set renderer(s){this._set("renderer",s),this.updateRenderer()}readRenderer(s,e,r){const t=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,i=Yt(t,r)||void 0;if(i!=null)return i}createPopupTemplate(s){return $t({fields:this.rasterFields,title:this.title},s)}async generateRasterInfo(s,e){if(!(s=st(De,s)))return this._primaryRasters[0].rasterInfo;try{const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const t=Oe(s.toJSON(),r),i=new Be({rasterFunction:t});return await i.open(e),i.rasterInfo}catch{return null}}write(s,e){const{raster:r}=this;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(s,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new M("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(s){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,i=[this.url];t&&Ci(t.toJSON(),i);const n=await Promise.all(i.map(o=>ji.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),a=n.findIndex(o=>o==null);if(a>-1)throw new M("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);if(this._primaryRasters=n,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>o[u.url]=u);const l=Oe(t.rasterFunctionDefinition??t.toJSON(),o),c=new Be({rasterFunction:l});try{await c.open(),this.raster=c}catch(u){const h=ze.getLogger(this.declaredClass);u instanceof M&&h.error("imagery-tile-layer:open",u.message),h.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const r=this.raster.rasterInfo;if(!r)throw new M("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Dt(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};w([S()],E.prototype,"_primaryRasters",void 0),w([S({type:[Ot],json:{write:{overridePolicy(){var s;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((s=this.bandIds)==null?void 0:s.join(","))!=="0,1,2"}}}}})],E.prototype,"bandIds",void 0),w([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Bt(Kt)],E.prototype,"interpolation",void 0),w([S(zt)],E.prototype,"legendEnabled",void 0),w([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),w([S({type:["show","hide"]})],E.prototype,"listMode",void 0),w([S({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),w([S()],E.prototype,"sourceJSON",void 0),w([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),w([S({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),w([S({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),w([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(s,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(s,e,r){e[r]=!s}}}})],E.prototype,"popupEnabled",void 0),w([S({type:Et,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],E.prototype,"popupTemplate",void 0),w([S({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),w([S({readOnly:!0,type:[pe]})],E.prototype,"fields",void 0),w([S({readOnly:!0,type:[pe]})],E.prototype,"rasterFields",null),w([S({types:ht,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const s=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!s}}},origins:{"web-scene":{types:Qt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:s=>({enabled:s&&s.type!=="vector-field"&&s.type!=="flow"})}}}}})],E.prototype,"renderer",null),w([Jt("renderer")],E.prototype,"readRenderer",null),E=w([Q("esri.layers.ImageryTileLayer")],E);const rs=E;export{rs as default};
