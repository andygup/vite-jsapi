import{e as a,y as o,n as v,m as T}from"./cast-daef7652.js";import{g as f}from"./Graphic-cf98a91a.js";import{j as $}from"./Collection-e2259e32.js";import{l as g,w as _,U as V}from"./reactiveUtils-3c1b281e.js";import{r as b,t as E,e as I}from"./typedArrayUtil-2bcf3cee.js";import"./ensureType-fa162cfc.js";import{i as U}from"./GraphicsCollection-e2a7679b.js";import{y as z,d as A}from"./RasterVFDisplayObject-7a90d21c.js";import{y as M,u as O}from"./LayerView-8f28f320.js";import{o as j}from"./BaseGraphicContainer-996bdb9a.js";import{n as N}from"./HighlightGraphicContainer-bbf13cab.js";import{s as P,a as S}from"./Error-bd05b442.js";import{j as R,x as J}from"./promiseUtils-29120e0a.js";import{A as L}from"./pixelUtils-5f39bd45.js";import{a as G}from"./BitmapContainer-2d0c98d2.js";import{i as H}from"./utils-6c2afd8b.js";import{i as W}from"./Bitmap-7ed1290a.js";import{v as K}from"./ExportStrategy-b5737806.js";import{U as Q}from"./request-c2b0ab45.js";import{d as X}from"./HandleOwner-78d35324.js";import{a as k,w as q}from"./Extent-7f29a1bb.js";import{J as Y}from"./rasterProjectionHelper-0bcfa8ae.js";import{x as Z,d as tt}from"./dataUtils-0f7e9d2b.js";import{o as et,d as it}from"./WGLContainer-db0ff963.js";import{I as D}from"./enums-4ca4641f.js";import{g as rt}from"./OperationalLayer-7b681a2a.js";import{x as st}from"./Query-e996b56b.js";import{s as at}from"./popupUtils-5aeaeb48.js";import{i as ot}from"./RefreshableLayerView-1be6c989.js";import"./string-3d0ebcd3.js";import"./nextTick-3ee5a785.js";import"./geometry-4b789d90.js";import"./Polyline-c56eca9b.js";import"./typeUtils-d7b057b5.js";import"./jsonMap-a9c94baf.js";import"./PopupTemplate-343851b8.js";import"./Clonable-f249bc0f.js";import"./fieldUtils-021fea8a.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-87969052.js";import"./enumeration-e46f3fd4.js";import"./number-53937715.js";import"./locale-30120714.js";import"./Identifiable-e3a09883.js";import"./symbols-fce921a6.js";import"./CIMSymbol-d0e12b74.js";import"./Symbol-f45dc441.js";import"./Color-2245b966.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-94fd2faa.js";import"./aaBoundingBox-6fbd5972.js";import"./persistableUrlUtils-7e525def.js";import"./collectionUtils-09289d8f.js";import"./Portal-ac0dca24.js";import"./Loadable-7c89bd10.js";import"./Promise-088a0e17.js";import"./PortalGroup-f3dee6d8.js";import"./PortalUser-cdb4116b.js";import"./jsonUtils-8bd548d9.js";import"./Evented-d8fc77f0.js";import"./SimpleObservable-7c382d01.js";import"./VertexArrayObject-8a5c7580.js";import"./Texture-6f3336a0.js";import"./context-util-cb6895d7.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./mat3-45e3f2eb.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./Utils-c2939f8d.js";import"./enums-8bf08d0c.js";import"./ExpandedCIM-f5d9de07.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-45a7fe45.js";import"./MaterialKey-b4e71fc3.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-72167b00.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-ae16ab2d.js";import"./normalizeUtils-d322ac85.js";import"./projectionSupport-1035a977.js";import"./projection-33a6cba9.js";import"./unitUtils-43365914.js";import"./mat4-62d5e6a4.js";import"./assets-4cb15247.js";import"./zscale-a508c8e5.js";import"./json-48e3ea08.js";import"./labelingInfo-f1d3ed98.js";import"./labelUtils-4072dca9.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-f34afef9.js";import"./FeatureContainer-7a24e5ff.js";import"./TileContainer-e69647a1.js";import"./TileKey-ab325718.js";import"./Queue-e839cb6a.js";import"./visualVariablesUtils-7af1d739.js";import"./visualVariablesUtils-b572c1c3.js";import"./lengthUtils-5215af35.js";import"./capabilities-320386e9.js";import"./Matcher-41d9c6c0.js";import"./TileStrategy-a62d1e84.js";import"./TileStore-4c0c3140.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./tileUtils-d9c533ae.js";import"./TileClipper-eed3813b.js";import"./Geometry-daada628.js";import"./GeometryUtils-c093d234.js";import"./featureConversionUtils-7c9ea581.js";import"./OptimizedFeature-9345d11b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./earcut-58237617.js";import"./LRUCache-36379339.js";import"./MemCache-5bd66e9c.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-84c98663.js";import"./schemaUtils-24d4fed0.js";import"./LayerFloorInfo-689deffc.js";import"./diffUtils-58fbd195.js";import"./createSymbolSchema-deb469a5.js";import"./rendererUtils-2abcd901.js";import"./FeatureReductionLayer-d7ad3b5e.js";import"./BlendLayer-1b58b599.js";import"./parser-e6166e34.js";import"./TimeExtent-84882adb.js";import"./UniqueValueRenderer-83bbe8b7.js";import"./LegendOptions-54bbb61a.js";import"./colorRamps-3439e132.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-06ced1a6.js";import"./jsonUtils-9c255ec7.js";import"./DictionaryLoader-d07ab55e.js";import"./deprecate-99da8bee.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./util-7859c103.js";import"./ComputedAttributeStorage-1f3c802c.js";import"./FeatureSetReader-22887d5b.js";import"./centroid-de776b3b.js";import"./FieldsIndex-394de0a1.js";import"./vec3f32-4322908d.js";import"./TileInfo-2e5a94dc.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-66c62c24.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./ElevationInfo-4e7fad68.js";import"./Field-0ac3c9d2.js";import"./fieldType-4ec45634.js";let l=class extends T{constructor(){super(...arguments),this.attached=!1,this.container=new H,this.updateRequested=!1,this.type="imagery",this._bitmapView=new G}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{R(e)||P.getLogger(this.declaredClass).error(e)})}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new K({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{if(t.source instanceof HTMLImageElement)return;const e=await this.layer.applyRenderer({extent:t.source.extent,pixelBlock:t.source.originalPixelBlock??t.source.pixelBlock}),i=t.source;i.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...e,extent:i.extent}}).catch(t=>{R(t)||P.getLogger(this.declaredClass).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=L(i,e);return b(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(t,e,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(t,e,i,r).then(s=>s.imageOrCanvasElement?s.imageOrCanvasElement:this.layer.applyRenderer(s.pixelData,{signal:r.signal}).then(n=>{const p=new W(n.pixelBlock,n.extent.clone(),s.pixelData.pixelBlock);return p.filter=u=>this.layer.applyFilter(u),p}))}};a([o()],l.prototype,"attached",void 0),a([o()],l.prototype,"container",void 0),a([o()],l.prototype,"layer",void 0),a([o()],l.prototype,"strategy",void 0),a([o()],l.prototype,"timeExtent",void 0),a([o()],l.prototype,"view",void 0),a([o()],l.prototype,"updateRequested",void 0),a([o()],l.prototype,"updating",null),a([o()],l.prototype,"type",void 0),l=a([v("esri.views.2d.layers.imagery.ImageryView2D")],l);const nt=l;class pt extends et{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[it],target:()=>this.children,drawPhase:D.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends T{constructor(t){super(t),this.update=J((e,i)=>this._update(e,i).catch(r=>{R(r)||P.getLogger(this.declaredClass).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,n=new k({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[p,u]=t.state.size;this._loading=this.fetchPixels(n,p,u,i);const h=await this._loading;this._addToDisplay(h,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(E(t.pixelBlock))return this.container.children.forEach(p=>p.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,n=new z(s);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=s.width*e.symbolTileSize,n.height=s.height*e.symbolTileSize,this.container.children.forEach(p=>p.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};a([o()],y.prototype,"fetchPixels",void 0),a([o()],y.prototype,"container",void 0),a([o()],y.prototype,"_loading",void 0),a([o()],y.prototype,"updating",null),y=a([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const lt=y;let m=class extends X{constructor(){super(...arguments),this.attached=!1,this.container=new pt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:p,width:u,height:h}=Z(t,e,i,n,s);if(b(s)&&!s.intersects(t))return{extent:p,pixelBlock:null};const d={bbox:`${p.xmin}, ${p.ymin}, ${p.xmax}, ${p.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(d)){const c=this.getPixelData();if(b(c)&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===d.bbox)return c}const{pixelData:w}=await this.layer.fetchImage(p,u,h,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=d,E(w.pixelBlock)?{extent:p,pixelBlock:null}:{extent:p,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?I(tt(w.pixelBlock,"vector-uv")):w.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new lt({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(g(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),_),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:t,pixelBlock:e}=this.container.children[0].rawPixelData;return{extent:t,pixelBlock:e}}hitTest(t){return new f({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return await Y(this.layer.fullExtent,t)}catch{try{const i=(await Q(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?k.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([o()],m.prototype,"attached",void 0),a([o()],m.prototype,"container",void 0),a([o()],m.prototype,"layer",void 0),a([o()],m.prototype,"timeExtent",void 0),a([o()],m.prototype,"type",void 0),a([o()],m.prototype,"view",void 0),a([o()],m.prototype,"updating",null),m=a([v("esri.views.2d.layers.imagery.VectorFieldView2D")],m);const mt=m,ht=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(i,r){const{layer:s}=this;if(!i)throw new S("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:n}=s,p=at(s,r);if(!n||E(p))throw new S("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:p});const u=await p.getRequiredFields(),h=new st;h.timeExtent=this.timeExtent,h.geometry=i,h.outFields=u,h.outSpatialReference=i.spatialReference;const d=this.view.resolution,w=this.view.type==="2d"?new q(d,d,this.view.spatialReference):new q(.5*d,.5*d,this.view.spatialReference),{returnTopmostRaster:c,showNoDataRecords:B}=p.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},C={returnDomainValues:!0,returnTopmostRaster:c,pixelSize:w,showNoDataRecords:B,signal:b(r)?r.signal:null};return s.queryVisibleRasters(h,C).then(F=>F)}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return a([o()],e.prototype,"layer",void 0),a([o()],e.prototype,"suspended",void 0),a([o(rt)],e.prototype,"timeExtent",void 0),a([o()],e.prototype,"view",void 0),e=a([v("esri.views.layers.ImageryLayerView")],e),e};let x=class extends ht(ot(M(O))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new U,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}async hitTest(t,e){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(t),layer:this.layer,mapPoint:t}]:null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new j({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new N(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([g(()=>this.layer.blendMode??"normal",t=>this.subview.container.blendMode=t,_),g(()=>this.layer.effect??null,t=>this.subview.container.effect=t,_),g(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},V),g(()=>this.timeExtent,t=>{this.subview.timeExtent=t,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()},V),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),g(()=>this.layer.renderer,()=>this._setSubView())],"imagerylayerview-update")}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:$.isCollection(t)?t.getItemAt(0):t)instanceof f))return{remove:()=>{}};let i=[];return Array.isArray(t)||$.isCollection(t)?i=t.map(r=>r.clone()):t instanceof f&&(i=[t.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:s}=this.subview;if(s===e)return this._attachSubview(this.subview),void(s==="flow"?this.subview.redrawOrRefetch():s==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new nt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new mt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new A({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0),t.container.blendMode=this.layer.blendMode,t.container.effect=this.layer.effect)}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([o()],x.prototype,"pixelData",null),a([o()],x.prototype,"subview",void 0),x=a([v("esri.views.2d.layers.ImageryLayerView2D")],x);const ar=x;export{ar as default};
