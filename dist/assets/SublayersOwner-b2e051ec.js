import{ae as a,af as n,bJ as S,bj as Q,bx as H,ai as q,L as W,dz as z,c as X,au as Y,aM as Z,s as g,eW as y,id as ee,m as te,eb as re,J as E,eu as ie,V as R,bB as se,dG as P,_ as ae,cJ as T,eI as N,e0 as M,bK as w,bf as oe,bI as J,ag as le,e_ as F,ev as ne,cf as pe,D as ye,b1 as ue,e$ as de}from"./index-65afe59f.js";import{r as ce}from"./Version-aebc6820.js";import{v as fe,p as he}from"./commonProperties-605b6017.js";import"./UniqueValueRenderer-c45fa812.js";import{b as be,n as me}from"./jsonUtils-cf75a5b6.js";import{O as ge}from"./MultiOriginJSONSupport-94ddedfa.js";import{n as Se}from"./sql-c4c85944.js";import{x as Ie}from"./QueryTask-2b11ffcf.js";import{n as ve}from"./FeatureType-cefa53ac.js";import{y as we}from"./Field-f17f32a3.js";import{r as Ee}from"./FieldsIndex-6df00c0a.js";import{c as Le,C as xe}from"./labelingInfo-a25619a7.js";import{n as Oe,p as De}from"./serviceCapabilitiesUtils-722c1e48.js";import{c as $,b as Te,K as U}from"./Query-380d10a1.js";import{c as _e}from"./AttachmentQuery-02a78654.js";import{p as Pe}from"./popupUtils-15651f00.js";import{o as Ae}from"./sublayerUtils-d3893455.js";const Ye=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesPromise=null,this._allLayersAndTablesMap=null}readCapabilities(t,i){const s=i.capabilities&&i.capabilities.split(",").map(K=>K.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,p=o!=="tile"&&!!i.supportsDynamicLayers,u=s.includes("query"),c=s.includes("map"),m=!!i.exportTilesAllowed,h=s.includes("tilemap"),I=s.includes("data"),L=o!=="tile"&&(!i.tileInfo||p),x=o!=="tile"&&(!i.tileInfo||p),d=o!=="tile",f=i.cimVersion&&ce.parse(i.cimVersion),O=(f==null?void 0:f.since(1,4))??!1,D=(f==null?void 0:f.since(2,0))??!1;return{operations:{supportsExportMap:c,supportsExportTiles:m,supportsIdentify:u,supportsQuery:I,supportsTileMap:h},exportMap:c?{supportsArcadeExpressionForLabeling:O,supportsSublayersChanges:d,supportsDynamicLayers:p,supportsSublayerVisibility:L,supportsSublayerDefinitionExpression:x,supportsCIMSymbols:D}:null,exportTiles:m?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(t,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchSublayerInfo(t,i){var s;try{return await this.fetchAllLayersAndTables(i),(s=this._allLayersAndTablesMap)==null?void 0:s.get(t)}catch{return}}async fetchAllLayersAndTables(t){await this.load(t),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=W(z(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(s=>{this._allLayersAndTablesMap=new Map;for(const o of s.data.layers)this._allLayersAndTablesMap.set(o.id,o);return{result:s.data}},s=>({error:s})));const i=await this._allLayersAndTablesPromise;if(X(t),"result"in i)return i.result;throw i.error}};return a([n({readOnly:!0})],r.prototype,"capabilities",void 0),a([S("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),a([n({type:Q})],r.prototype,"fullExtent",void 0),a([n(fe)],r.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),a([n(he)],r.prototype,"popupEnabled",void 0),a([n({type:H})],r.prototype,"spatialReference",void 0),a([n({readOnly:!0})],r.prototype,"version",void 0),a([S("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=a([q("esri.layers.mixins.ArcGISMapService")],r),r};var A;function V(e){return e!=null&&e.type==="esriSMS"}function j(e,r,t){var s;const i=this.originIdOf(r)>=F(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&((s=t.layer)==null?void 0:s.type)==="map-image"&&(t.writeSublayerStructure||i)}}function B(e,r,t){var i;return{enabled:!!t&&((i=t.layer)==null?void 0:i.type)==="tile"&&this._isOverridden(r)}}function b(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function _(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=F(t.origin))}}let Fe=0;const v=new Set;v.add("layer"),v.add("parent"),v.add("loaded"),v.add("loadStatus"),v.add("loadError"),v.add("loadWarnings");let l=A=class extends Y(ge(Z(ne))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,source:t,url:i}=this;if(!r&&!i)throw new g("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let s=null;if(!r||this.originIdOf("url")>y.SERVICE||(t==null?void 0:t.type)==="data-layer")s=(await W(i,{responseType:"json",query:{f:"json"},...e})).data;else{let o=this.id;(t==null?void 0:t.type)==="map-layer"&&(o=t.mapLayerId),s=await r.fetchSublayerInfo(o,e)}s&&(this.sourceJSON=s,this.read({layerDefinition:s},{origin:"service"}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:s},data:{supportsAttachment:o}}=Oe(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:o},query:{supportsFormatPBF:s}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new Ee(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeGlobalID")return t.name}}get id(){return this._get("id")??Fe++}set id(e){var r,t,i;this._get("id")!==e&&(((i=(t=(r=this.layer)==null?void 0:r.capabilities)==null?void 0:t.exportMap)==null?void 0:i.supportsDynamicLayers)!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(s=>s.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeOID")return t.name}}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){var i;const t=r.layerDefinition;return 1-.01*(((t==null?void 0:t.transparency)!=null?t.transparency:(i=t==null?void 0:t.drawingInfo)==null?void 0:i.transparency)??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=ee(this.parent.id):r.parentLayerId=-1}get queryTask(){var p;if(!this.layer)return null;const{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,s=te("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF),o=((p=t==null?void 0:t.operations)==null?void 0:p.supportsQueryAttachments)??!1;return new Ie({url:this.url,pbfSupported:s,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:o})}set renderer(e){if(e){for(const r of e.getSymbols())if(re(r)){E.getLogger(this.declaredClass).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new $({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ie(R.ofType(A),e)}writeSublayers(e,r,t){var i;(i=this.sublayers)!=null&&i.length&&(r[t]=this.sublayers.map(s=>s.id).toArray().reverse())}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const i=r.fields.find(s=>s.name.toLowerCase()===t);i&&(t=i.name)}return t}get url(){var i;const e=((i=this.layer)==null?void 0:i.parsedUrl)??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,(r==null?void 0:r.type)==="map-layer")return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${se(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=P(this),r=new A;return P(r).store=e.clone(v),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return Pe(this,e)}createQuery(){return new Te({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var i;if(this.hasOwnProperty("sublayers"))return null;const{layer:e}=this,r=e==null?void 0:e.parsedUrl,t=new(await ae(()=>import("./FeatureLayer-d29725e7.js"),["assets/FeatureLayer-d29725e7.js","assets/index-65afe59f.js","assets/index-001d3307.css","assets/UniqueValueRenderer-c45fa812.js","assets/LegendOptions-d5bf6b73.js","assets/diffUtils-0f0e8cfe.js","assets/SizeVariable-e7f3c0e2.js","assets/colorRamps-08b57831.js","assets/sizeVariableUtils-d4870b0d.js","assets/lengthUtils-00939dab.js","assets/ColorStop-03954883.js","assets/jsonUtils-15c906c8.js","assets/styleUtils-00c8d6d5.js","assets/featureFlags-acda3469.js","assets/jsonUtils-cf75a5b6.js","assets/DictionaryLoader-b3115f22.js","assets/LRUCache-fba88a6d.js","assets/MemCache-b8f96232.js","assets/FieldsIndex-6df00c0a.js","assets/heatmapUtils-1ed1bbca.js","assets/vec4f64-aa64c7e9.js","assets/MultiOriginJSONSupport-94ddedfa.js","assets/sql-c4c85944.js","assets/FeatureLayerBase-6ded2ba8.js","assets/Field-f17f32a3.js","assets/fieldType-d8edb871.js","assets/commonProperties-605b6017.js","assets/ElevationInfo-926fbbdf.js","assets/AttachmentQuery-02a78654.js","assets/Query-380d10a1.js","assets/RelationshipQuery-8b36d96a.js","assets/serviceCapabilitiesUtils-722c1e48.js","assets/editsZScale-c8ac5d3c.js","assets/queryZScale-2ed7be3c.js","assets/FeatureSet-725ad5ad.js","assets/APIKeyMixin-a73b4a94.js","assets/ArcGISService-d205da9a.js","assets/BlendLayer-bf12370f.js","assets/jsonUtils-7e0542f0.js","assets/parser-8554880e.js","assets/CustomParametersMixin-c6bdaa0b.js","assets/EditBusLayer-418a86f7.js","assets/FeatureReductionLayer-3b76ad31.js","assets/FeatureEffect-8de6067b.js","assets/clusterUtils-a342a95a.js","assets/labelingInfo-a25619a7.js","assets/labelUtils-ec59d2a3.js","assets/defaultsJSON-b087dd4d.js","assets/OperationalLayer-87798fca.js","assets/OrderedLayer-73c6bf5c.js","assets/PortalLayer-22d5b96f.js","assets/portalItemUtils-44900d59.js","assets/RefreshableLayer-25a5ecc8.js","assets/ScaleRangeLayer-bcba2562.js","assets/TemporalLayer-2faea16c.js","assets/FeatureTemplate-e720f0c6.js","assets/FeatureType-cefa53ac.js","assets/fieldProperties-776bdeb8.js","assets/versionUtils-87e003f4.js","assets/styleUtils-c510b82d.js","assets/TopFeaturesQuery-a106986f.js","assets/popupUtils-15651f00.js"])).default({url:r==null?void 0:r.path});return r&&this.source&&(this.source.type==="map-layer"?t.layerId=this.source.mapLayerId:t.dynamicDataSource=this.source),(e==null?void 0:e.refreshInterval)!=null&&(t.refreshInterval=e.refreshInterval),this.definitionExpression&&(t.definitionExpression=this.definitionExpression),this.floorInfo&&(t.floorInfo=T(this.floorInfo)),this.originIdOf("labelingInfo")>y.SERVICE&&(t.labelingInfo=T(this.labelingInfo)),this.originIdOf("labelsVisible")>y.DEFAULTS&&(t.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>y.DEFAULTS&&(t.legendEnabled=this.legendEnabled),this.originIdOf("visible")>y.DEFAULTS&&(t.visible=this.visible),this.originIdOf("minScale")>y.DEFAULTS&&(t.minScale=this.minScale),this.originIdOf("maxScale")>y.DEFAULTS&&(t.maxScale=this.maxScale),this.originIdOf("opacity")>y.DEFAULTS&&(t.opacity=this.opacity),this.originIdOf("popupTemplate")>y.DEFAULTS&&(t.popupTemplate=T(this.popupTemplate)),this.originIdOf("renderer")>y.SERVICE&&(t.renderer=T(this.renderer)),((i=this.source)==null?void 0:i.type)==="data-layer"&&(t.dynamicDataSource=this.source.clone()),this.originIdOf("title")>y.DEFAULTS&&(t.title=this.title),(e==null?void 0:e.type)==="map-image"&&e.originIdOf("customParameters")>y.DEFAULTS&&(t.customParameters=e.customParameters),(e==null?void 0:e.type)==="tile"&&e.originIdOf("customParameters")>y.DEFAULTS&&(t.customParameters=e.customParameters),t}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(i==null)return null;let s=null;return t==null||t.some(o=>{const{id:p}=o;return p!=null&&(p.toString()===i.toString()&&(s=o),!!s)}),s}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const s=i.domains&&i.domains[e];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(e)}async queryAttachments(e,r){var h,I;await this.load(),e=_e.from(e);const t=this.capabilities;if(!((h=t==null?void 0:t.data)!=null&&h.supportsAttachment))throw new g("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:o,num:p,size:u,start:c,where:m}=e;if(!((I=t==null?void 0:t.operations)!=null&&I.supportsQueryAttachments)&&((i==null?void 0:i.length)>0||(o==null?void 0:o.length)>0||(u==null?void 0:u.length)>0||p||c||m))throw new g("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s!=null&&s.length||o!=null&&o.length||m))throw new g("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(e=this.createQuery(),r){var i,s;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new g("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new g("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...(i=this.layer)==null?void 0:i.customParameters,token:(s=this.layer)==null?void 0:s.apiKey}});if(t!=null&&t.features)for(const o of t.features)o.sourceLayer=this;return t}toExportImageJSON(e){var o;const r={id:this.id,source:((o=this.source)==null?void 0:o.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},t=Se(e,this.definitionExpression);t!=null&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((p,u)=>(p[u]=this.originIdOf(u),p),{});if(Object.keys(i).some(p=>i[p]>y.SERVICE)){const p=r.drawingInfo={};if(i.renderer>y.SERVICE&&(p.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>y.SERVICE&&(p.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>y.SERVICE){!this.loaded&&this.labelingInfo.some(c=>!c.labelPlacement)&&E.getLogger(this.declaredClass).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let u=this.labelingInfo;this.geometryType!=null&&(u=Le(this.labelingInfo,N.toJSON(this.geometryType))),p.labelingInfo=u.filter(c=>c.labelPlacement).map(c=>c.toJSON({origin:"service",layer:this.layer})),p.showLabels=!0}i.opacity>y.SERVICE&&(p.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(p.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,r=>{r.color||r.style!=="esriSMSX"&&r.style!=="esriSMSCross"||(r.outline&&r.outline.color?r.color=r.outline.color:r.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of t)V(i.symbol)&&r(i.symbol);"symbol"in e&&V(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&V(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){var u,c,m,h;const t=this.layer,i=this._get(e);let s,o;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",o="supportsModification"}const p=P(this).getDefaultOrigin();if(p!=="service"){if(s&&((m=(c=(u=this.layer)==null?void 0:u.capabilities)==null?void 0:c.exportMap)==null?void 0:m[s])===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(o&&((h=this.capabilities)==null?void 0:h.exportMap[o])===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,r),p!=="service"&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach(t=>{t.parent=null,t.layer=null}),this.handles.removeAll()),e&&(e.forEach(t=>{t.parent=this,t.layer=this.layer}),this.handles.add([e.on("after-add",({item:t})=>{t.parent=this,t.layer=this.layer}),e.on("after-remove",({item:t})=>{t.parent=null,t.layer=null}),e.on("before-changes",t=>{var s,o,p;const i=(p=(o=(s=this.layer)==null?void 0:s.capabilities)==null?void 0:o.exportMap)==null?void 0:p.supportsSublayersChanges;i==null||i||(E.getLogger(this.declaredClass).error(new g("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),t.preventDefault())})]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;E.getLogger(i).error(new g("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t==null?void 0:t.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};l.test={isMapImageLayerOverridePolicy:e=>e===b||e===j,isTileImageLayerOverridePolicy:e=>e===B},a([n({readOnly:!0})],l.prototype,"capabilities",void 0),a([S("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),a([n()],l.prototype,"defaultPopupTemplate",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:j}}})],l.prototype,"definitionExpression",null),a([n({type:[we],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),a([n({readOnly:!0})],l.prototype,"fieldsIndex",null),a([n({type:De,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:j},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),a([n({type:Q,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),a([n({type:N.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:N.read}}}}})],l.prototype,"geometryType",void 0),a([n({type:String})],l.prototype,"globalIdField",void 0),a([S("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),a([n({type:M,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),a([n({value:null,type:[xe],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:b}}})],l.prototype,"labelingInfo",null),a([w("labelingInfo")],l.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:b}}})],l.prototype,"labelsVisible",null),a([n({value:null})],l.prototype,"layer",null),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:_}}})],l.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:b}}})],l.prototype,"minScale",null),a([S("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:b}}})],l.prototype,"maxScale",null),a([S("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),a([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),a([n({type:String})],l.prototype,"objectIdField",void 0),a([S("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:b}}})],l.prototype,"opacity",null),a([S("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),a([w("opacity")],l.prototype,"writeOpacity",null),a([n({json:{type:M,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:b}}})],l.prototype,"parent",void 0),a([w("parent")],l.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:_,writer(e,r,t){r[t]=!e}}}})],l.prototype,"popupEnabled",void 0),a([n({type:oe,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:_}}})],l.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],l.prototype,"queryTask",null),a([n({types:be,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:b},origins:{"web-scene":{types:me,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:b}}}}})],l.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":U,"map-layer":$}},cast(e){if(e){if("mapLayerId"in e)return J($,e);if("dataSource"in e)return J(U,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:b}}})],l.prototype,"source",null),a([n()],l.prototype,"sourceJSON",void 0),a([n({value:null,json:{type:[M],write:{target:"subLayerIds",allowNull:!0,overridePolicy:b}}})],l.prototype,"sublayers",null),a([le("sublayers")],l.prototype,"castSublayers",null),a([w("sublayers")],l.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:_}}})],l.prototype,"title",void 0),a([n({type:String})],l.prototype,"typeIdField",void 0),a([S("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),a([n({type:[ve],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),a([n({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:B}}})],l.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:b}}})],l.prototype,"visible",null),a([w("visible")],l.prototype,"writeVisible",null),l=A=a([q("esri.layers.support.Sublayer")],l);const k=l,Me=E.getLogger("esri.layers.TileLayer");function Ve(e,r){const t=[],i={};return e&&e.forEach(s=>{const o=new k;if(o.read(s,r),i[o.id]=o,s.parentLayerId!=null&&s.parentLayerId!==-1){const p=i[s.parentLayerId];p.sublayers||(p.sublayers=[]),p.sublayers.unshift(o)}else t.unshift(o)}),t}const C=R.ofType(k);function G(e,r){e&&e.forEach(t=>{r(t),t.sublayers&&t.sublayers.length&&G(t.sublayers,r)})}const Ze=e=>{let r=class extends e{constructor(...t){super(...t),this.allSublayers=new pe({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={[y.SERVICE]:{},[y.PORTAL_ITEM]:{},[y.WEB_SCENE]:{},[y.WEB_MAP]:{}},this.addHandles(ye(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),ue))}destroy(){this.allSublayers.destroy()}readSublayers(t,i){if(!i||!t)return;const{sublayersSourceJSON:s}=this,o=F(i.origin);if(o<y.SERVICE||(s[o]={context:i,visibleLayers:t.visibleLayers||s[o].visibleLayers,layers:t.layers||s[o].layers},o>y.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:p,origin:u}=this.createSublayersForOrigin("web-document"),c=P(this);c.setDefaultOrigin(u),this._set("sublayers",new C(p)),c.setDefaultOrigin("user")}findSublayerById(t){return this.allSublayers.find(i=>i.id===t)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(t){const i=F(t==="web-document"?"web-map":t);let s=y.SERVICE,o=this.sublayersSourceJSON[y.SERVICE].layers,p=this.sublayersSourceJSON[y.SERVICE].context,u=null;const c=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d<=i);for(const d of c){const f=this.sublayersSourceJSON[d];Ae(f.layers)&&(s=d,o=f.layers,p=f.context,f.visibleLayers&&(u={visibleLayers:f.visibleLayers,context:f.context}))}const m=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d>s&&d<=i);let h=null;for(const d of m){const{layers:f,visibleLayers:O,context:D}=this.sublayersSourceJSON[d];f&&(h={layers:f,context:D}),O&&(u={visibleLayers:O,context:D})}const I=Ve(o,p),L=new Map,x=new Set;if(h)for(const d of h.layers)L.set(d.id,d);if(u!=null&&u.visibleLayers)for(const d of u.visibleLayers)x.add(d);return G(I,d=>{h&&d.read(L.get(d.id),h.context),u&&d.read({defaultVisibility:x.has(d.id)},u.context)}),{origin:de(s),sublayers:new C({items:I})}}read(t,i){super.read(t,i),this.readSublayers(t,i)}_handleSublayersChange(t,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),t&&(t.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([t.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),t.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(t.on("before-changes",s=>{Me.error(new g("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],r.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:R.ofType(k)})],r.prototype,"serviceSublayers",void 0),a([n({value:null,type:C,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),a([n({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=a([q("esri.layers.mixins.SublayersOwner")],r),r};export{Ze as E,k as Y,Ye as y};
