import{av as w,$,e$ as b,eX as f,L as g,bf as I,bC as O,hR as T,a as v,d as E,af as s,ag as p,f3 as x,bF as R,bG as M,aj as L,a$ as F,e9 as P}from"./index-989909ce.js";import{O as j}from"./MultiOriginJSONSupport-35c06c89.js";import{i as N}from"./scaleUtils-367accca.js";import{i as J}from"./APIKeyMixin-a5f40f2f.js";import{E as q,f as U,Y as k}from"./SublayersOwner-bf17f5f1.js";import{l as A}from"./ArcGISService-26e21a6b.js";import{a as _}from"./BlendLayer-a546812d.js";import{o as V}from"./CustomParametersMixin-f84f0782.js";import{c as z}from"./OperationalLayer-2d14fe8e.js";import{j as C}from"./PortalLayer-61da00e6.js";import{p as G}from"./RefreshableLayer-bb04281c.js";import{t as B}from"./ScaleRangeLayer-ca70e7f0.js";import{a as D}from"./TemporalLayer-2f769b9e.js";import{f as H}from"./commonProperties-33a052da.js";import{m as K}from"./ExportImageParameters-ec2ea076.js";import{t as W}from"./imageBitmapUtils-d1878683.js";import{e as S}from"./sublayerUtils-e7c468cf.js";import{e as X}from"./versionUtils-c5796d81.js";import"./Version-f874365f.js";import"./portalItemUtils-f1e38b30.js";import"./UniqueValueRenderer-069d3511.js";import"./LegendOptions-3ac5ff0b.js";import"./diffUtils-a4f61c8a.js";import"./SizeVariable-3a3f0b31.js";import"./colorRamps-c86b1339.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-32b5157c.js";import"./ColorStop-f2a5e65b.js";import"./featureFlags-8ed38c32.js";import"./styleUtils-ee1316c2.js";import"./jsonUtils-f27d3f31.js";import"./DictionaryLoader-e10e08a4.js";import"./LRUCache-a1ffc3d4.js";import"./FieldsIndex-958df084.js";import"./heatmapUtils-8adef46d.js";import"./vec4f64-aa64c7e9.js";import"./sql-926e6229.js";import"./QueryTask-4526fe2a.js";import"./infoFor3D-5881142c.js";import"./Query-a7c50b34.js";import"./Field-52715ac0.js";import"./fieldType-72d6c895.js";import"./executeForIds-92a2436e.js";import"./query-2f065ff9.js";import"./normalizeUtils-938fb227.js";import"./normalizeUtilsCommon-8a86e794.js";import"./pbfQueryUtils-c6f5ba7a.js";import"./pbf-f1321473.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-08f2f3b3.js";import"./executeQueryJSON-59a5d802.js";import"./FeatureSet-8fc9b923.js";import"./featureConversionUtils-b1362163.js";import"./FeatureType-f0d92d4c.js";import"./FeatureTemplate-40bf8c68.js";import"./labelingInfo-3941dab0.js";import"./labelUtils-f745c070.js";import"./defaultsJSON-b087dd4d.js";import"./serviceCapabilitiesUtils-4e64b5df.js";import"./AttachmentQuery-dba1791e.js";import"./popupUtils-30873e72.js";import"./jsonUtils-9353bf48.js";import"./parser-39b32429.js";import"./ElevationInfo-4676a5da.js";import"./floorFilterUtils-080a7cd2.js";let i=class extends _(D(B(q(U(A(z(C(j(G(J(V(w(F))))))))))))){constructor(...e){super(...e),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch($).then(()=>this._fetchService(o))),Promise.resolve(this)}readImageFormat(e,o){const n=o.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(e,o,n,t){var h;if(!this.loaded||!e)return;const a=e.slice().reverse().flatten(({sublayers:r})=>r&&r.toArray().reverse()).toArray();let m=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&((h=this.capabilities.exportMap)!=null&&h.supportsDynamicLayers)){const r=b(t.origin);if(r===f.PORTAL_ITEM){const c=this.createSublayersForOrigin("service").sublayers;m=S(a,c,f.SERVICE)}else if(r>f.PORTAL_ITEM){const c=this.createSublayersForOrigin("portal-item");m=S(a,c.sublayers,b(c.origin))}}const l=[],d={writeSublayerStructure:m,...t};let y=m;a.forEach(r=>{const c=r.write({},d);l.push(c),y=y||r.originOf("visible")==="user"}),l.some(r=>Object.keys(r).length>1)&&(o.layers=l),y&&(o.visibleLayers=a.filter(r=>r.visible).map(r=>r.id))}createExportImageParameters(e,o,n,t){const a=t&&t.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const m=new K({layer:this,floors:t==null?void 0:t.floors,scale:N({extent:e,width:o})*a}),l=m.toJSON();m.destroy();const d=!t||!t.rotation||this.version<10.3?{}:{rotation:-t.rotation},y=e&&e.spatialReference,h=y.wkid||JSON.stringify(y.toJSON());l.dpi*=a;const r={};if(t!=null&&t.timeExtent){const{start:c,end:u}=t.timeExtent.toJSON();r.time=c&&u&&c===u?""+c:`${c??"null"},${u??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(r.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:h,imageSR:h,size:o+","+n,...l,...d,...r}}async fetchImage(e,o,n,t){const{data:a}=await this._fetchImage("image",e,o,n,t);return a}async fetchImageBitmap(e,o,n,t){const{data:a,url:m}=await this._fetchImage("blob",e,o,n,t);return W(a,m,t==null?void 0:t.signal)}async fetchRecomputedExtents(e={}){const o={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,o),{extent:t,fullExtent:a,timeExtent:m}=n,l=t||a;return{fullExtent:l&&I.fromJSON(l),timeExtent:m&&O.fromJSON({start:m[0],end:m[1]})}}loadAll(){return T(this,e=>{e(this.allSublayers)})}serviceSupportsSpatialReference(e){return X(this,e)}async _fetchImage(e,o,n,t,a){var d,y,h;const m={responseType:e,signal:(a==null?void 0:a.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(o,n,t,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(((d=m.query)==null?void 0:d.dynamicLayers)!=null&&!((h=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&h.supportsDynamicLayers))throw new v("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:m.query});try{const{data:r}=await g(l,m);return{data:r,url:l}}catch(r){throw E(r)?r:new v("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:r})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:o,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=o,this.read(o,{origin:"service",url:this.parsedUrl})}};s([p({type:x})],i.prototype,"dateFieldsTimeReference",void 0),s([p({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),s([p()],i.prototype,"dpi",void 0),s([p()],i.prototype,"gdbVersion",void 0),s([p()],i.prototype,"imageFormat",void 0),s([R("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),s([p({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),s([p({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),s([p()],i.prototype,"imageTransparency",void 0),s([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([p({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),s([p({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([p({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([p({type:x})],i.prototype,"preferredTimeReference",void 0),s([p()],i.prototype,"sourceJSON",void 0),s([p({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),s([M("sublayers",{layers:{type:[k]},visibleLayers:{type:[P]}})],i.prototype,"writeSublayers",null),s([p({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([p({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),s([p(H)],i.prototype,"url",void 0),i=s([L("esri.layers.MapImageLayer")],i);const nt=i;export{nt as default};
