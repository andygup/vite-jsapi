import{ae as t,af as i,bF as r,bt as p,ai as s}from"./index-3e52b35c.js";import{r as n,z as c}from"./TilemapCache-502c373f.js";const y=o=>{let e=class extends o{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(l,a){return a.minLOD!=null&&a.maxLOD!=null?l:0}readMaxScale(l,a){return a.minLOD!=null&&a.maxLOD!=null?l:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(l,a){return a.capabilities&&a.capabilities.includes("Tilemap")?new c({layer:this}):null}destroy(){var l;(l=this.tilemapCache)==null||l.destroy()}};return t([i({json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0),t([i()],e.prototype,"minScale",void 0),t([r("service","minScale")],e.prototype,"readMinScale",null),t([i()],e.prototype,"maxScale",void 0),t([r("service","maxScale")],e.prototype,"readMaxScale",null),t([i({type:p})],e.prototype,"spatialReference",void 0),t([i({readOnly:!0})],e.prototype,"supportsBlankTile",null),t([i(n)],e.prototype,"tileInfo",void 0),t([i()],e.prototype,"tilemapCache",void 0),t([r("service","tilemapCache",["capabilities"])],e.prototype,"readTilemapCache",null),t([i()],e.prototype,"version",void 0),e=t([s("esri.layers.mixins.ArcGISCachedService")],e),e};export{y as a};
