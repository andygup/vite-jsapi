import{N as m,_ as y,je as h,a as p,a7 as w,aa as v,aB as b,a5 as x}from"./index-989909ce.js";import{x as _,_ as E}from"./labelUtils-f745c070.js";const d=m.getLogger("esri.layers.support.labelFormatUtils"),g={type:"simple",evaluate:()=>null},F={getAttribute:(t,n)=>t.field(n)};async function L(t,n,e){if(!t||!t.symbol||!n)return g;const l=t.where,u=_(t),i=l?await y(()=>import("./WhereClause-89ac4fc8.js").then(r=>r.W),["assets/WhereClause-89ac4fc8.js","assets/index-989909ce.js","assets/index-0492b785.css","assets/executionError-c92d3b85.js"]):null;let s;if(u.type==="arcade"){const r=await h(u.expression,e,n);if(r==null)return g;s={type:"arcade",evaluate(o){try{const a=r.evaluate({$feature:"attributes"in o?r.repurposeFeature(o):o});if(a!=null)return a.toString()}catch{d.error(new p("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:o,expression:u}))}return null},needsHydrationToEvaluate:()=>E(u.expression)==null}}else s={type:"simple",evaluate:r=>u.expression.replaceAll(/{[^}]*}/g,o=>{const a=o.slice(1,-1),c=n.get(a);if(!c)return o;let f=null;return"attributes"in r?r&&r.attributes&&(f=r.attributes[c.name]):f=r.field(c.name),f==null?"":V(f,c)})};if(l){let r;try{r=i.WhereClause.create(l,n)}catch(a){return d.error(new p("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:l,error:a})),g}const o=s.evaluate;s.evaluate=a=>{const c="attributes"in a?void 0:F;try{if(r.testFeature(a,c))return o(a)}catch(f){d.error(new p("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:l,feature:a,error:f}))}return null}}return s}function V(t,n){if(t==null)return"";const e=n.domain;if(e){if(e.type==="codedValue"||e.type==="coded-value"){const u=t;for(const i of e.codedValues)if(i.code===u)return i.name}else if(e.type==="range"){const u=+t,i="range"in e?e.range[0]:e.minValue,s="range"in e?e.range[1]:e.maxValue;if(i<=u&&u<=s)return e.name}}let l=t;return n.type==="date"||n.type==="esriFieldTypeDate"?l=w(l,v("short-date")):b(n)&&(l=x(+l)),l||""}export{L as createLabelFunction,V as formatField};
