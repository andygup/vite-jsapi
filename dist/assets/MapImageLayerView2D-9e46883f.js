import{ab as o,ac as a,as as g,ad as m,a5 as l,d,J as u,D as c}from"./index-e1d30004.js";import{a as y}from"./BitmapContainer-62c4392b.js";import{f,d as x}from"./LayerView-b379b6c2.js";import{o as w}from"./GraphicsView2D-21f7d1fa.js";import{n as v}from"./HighlightGraphicContainer-31138a64.js";import{v as _}from"./ExportStrategy-9f98bbd8.js";import{m as H}from"./ExportImageParameters-d0da0c55.js";import{i as I}from"./RefreshableLayerView-d63f27d3.js";import{P,r as V}from"./drapedUtils-146712bd.js";import"./WGLContainer-4b22933a.js";import"./definitions-43101aab.js";import"./VertexArrayObject-36a67124.js";import"./Texture-a64c7d5d.js";import"./enums-10aa9b05.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-a87af45a.js";import"./enums-55085e26.js";import"./ProgramTemplate-99344654.js";import"./MaterialKey-1143b332.js";import"./utils-98382753.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-3b957f51.js";import"./earcut-61f7b102.js";import"./ExpandedCIM-0ff0446e.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-9a3641a9.js";import"./floatRGBA-3bf773ec.js";import"./normalizeUtilsSync-a9493313.js";import"./projectionSupport-fc16ea24.js";import"./json-48e3ea08.js";import"./AttributeStoreView-22c4864f.js";import"./TiledDisplayObject-71eee758.js";import"./visualVariablesUtils-d59cfcd9.js";import"./visualVariablesUtils-4856a557.js";import"./Matcher-32ed4360.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-57bbf99c.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-fba4c809.js";import"./util-483ccdfc.js";import"./ComputedAttributeStorage-b498a8b2.js";import"./arcadeTimeUtils-151d71ab.js";import"./executionError-fb3f283a.js";import"./centroid-8e8cfa47.js";import"./BaseGraphicContainer-a6c7ffcb.js";import"./FeatureContainer-4a18ad46.js";import"./TileContainer-70b13c29.js";import"./Bitmap-d5c988db.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-c2957bfd.js";import"./popupUtils-eafff42c.js";const U=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return o([a()],e.prototype,"exportImageParameters",void 0),o([a({readOnly:!0})],e.prototype,"floors",null),o([a({readOnly:!0})],e.prototype,"exportImageVersion",null),o([a()],e.prototype,"layer",void 0),o([a()],e.prototype,"suspended",void 0),o([a(g)],e.prototype,"timeExtent",void 0),e=o([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends U(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(r=>{d(r)||u.getLogger(this.declaredClass).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:r}=this.layer,i=r>=10.3,n=r>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:i,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,i){return this.layer.fetchImage(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}fetchImageBitmap(t,e,r,i){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,floors:this.floors,...i})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([a()],s.prototype,"strategy",void 0),o([a()],s.prototype,"updating",void 0),s=o([m("esri.views.2d.layers.MapImageLayerView2D")],s);const $t=s;export{$t as default};
