import{aH as l,e,y as t,a as f,bB as v,bD as u,K as c}from"./index-0b6846a6.js";import h from"./FeatureLayer-e1476ade.js";import"./UniqueValueRenderer-69f2a261.js";import"./ColorStop-a9d5adf5.js";import"./diffUtils-c77d4e09.js";import"./colorRamps-c287f076.js";import"./jsonUtils-bda577f9.js";import"./DictionaryLoader-8b55e325.js";import"./LRUCache-b7b1b5e3.js";import"./FieldsIndex-26e3776b.js";import"./heatmapUtils-377e78a9.js";import"./MultiOriginJSONSupport-8c956d71.js";import"./sql-6bd3f59b.js";import"./FeatureLayerBase-cc72e59c.js";import"./commonProperties-b6e563c7.js";import"./ElevationInfo-c6327af8.js";import"./AttachmentQuery-47883d84.js";import"./Query-a5cf26eb.js";import"./RelationshipQuery-5b060696.js";import"./serviceCapabilitiesUtils-252a978f.js";import"./editsZScale-15ffeeb8.js";import"./queryZScale-b668e568.js";import"./FeatureSet-201dc83e.js";import"./APIKeyMixin-76a780e2.js";import"./ArcGISService-8aa080ff.js";import"./BlendLayer-42ebc769.js";import"./jsonUtils-899e4bfe.js";import"./CustomParametersMixin-1742fbf5.js";import"./EditBusLayer-4a4aa0e5.js";import"./FeatureReductionLayer-2345a008.js";import"./FeatureEffect-fa4ce35d.js";import"./FeatureFilter-603a6725.js";import"./labelingInfo-c79c2a2e.js";import"./defaults-48071f90.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-fa982da8.js";import"./OrderedLayer-483eb253.js";import"./PortalLayer-3fdb37ec.js";import"./portalItemUtils-224c29e2.js";import"./ScaleRangeLayer-a3d27153.js";import"./TemporalLayer-bc87d9c2.js";import"./FeatureTemplate-5dd055c6.js";import"./FeatureType-e02b487d.js";import"./fieldProperties-d14b1553.js";import"./versionUtils-f955b0e0.js";import"./styleUtils-bbc955cf.js";import"./TopFeaturesQuery-dc1d0f1c.js";import"./popupUtils-30e2b710.js";let r=class extends l(v){constructor(s){super(s)}read(s,p){const y={};for(const d in s)y[d.toLowerCase()]=s[d];super.read(y,p)}};e([t({json:{name:"dempathprefix"}})],r.prototype,"demPathPrefix",void 0),e([t({json:{name:"dempathsuffix"}})],r.prototype,"demPathSuffix",void 0),e([t({json:{name:"imagepathprefix"}})],r.prototype,"imagePathPrefix",void 0),e([t({json:{name:"imagepathsuffix"}})],r.prototype,"imagePathSuffix",void 0),e([t({json:{name:"depthimagepathprefix"}})],r.prototype,"depthImagePathPrefix",void 0),e([t({json:{name:"depthimagepathsuffix"}})],r.prototype,"depthImagePathSuffix",void 0),e([t({json:{name:"localimagepathprefix"}})],r.prototype,"localImagePathPrefix",void 0),e([t({json:{name:"localimagepathsuffix"}})],r.prototype,"localImagePathSuffix",void 0),e([t({json:{name:"videopathprefix"}})],r.prototype,"videoPathPrefix",void 0),e([t({json:{name:"videopathsuffix"}})],r.prototype,"videoPathSuffix",void 0),r=e([f("esri.layers.orientedImagery.core.Affixes")],r);const g=r;let i=class extends v{constructor(n){super(n)}};e([t({type:Number,json:{write:!0}})],i.prototype,"averageHeightAboveGround",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraHeading",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraPitch",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraRoll",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"farDistance",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"horizontalFieldOfView",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"nearDistance",void 0),e([t({json:{write:!0}})],i.prototype,"orientedImageryType",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"verticalFieldOfView",void 0),i=e([f("esri.layers.orientedImagery.core.CameraProperties")],i);const x=i;let o=class extends h{constructor(){super(...arguments),this.affixes=null,this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery",this.elevationSource=null}readElevationSource(n,s){var y;let p=(y=n.url)==null?void 0:y.trim();if(p){const{affixes:d}=this;if(d){const{demPathSuffix:a,demPathPrefix:m}=d;m!=null&&m.trim()&&(p=(m==null?void 0:m.trim())+"/"+p),a!=null&&a.trim()&&(p=p+"/"+(a==null?void 0:a.trim()))}}return{...n,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new c("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({type:g,json:{write:!0}})],o.prototype,"affixes",void 0),e([t({type:x,json:{write:!0}})],o.prototype,"cameraProperties",void 0),e([t({json:{write:!0}})],o.prototype,"coverage",void 0),e([t({json:{write:!0}})],o.prototype,"coveragePercent",void 0),e([t({json:{write:!0}})],o.prototype,"defaultSearchLocation",void 0),e([t({json:{write:!0}})],o.prototype,"depthImage",void 0),e([t({json:{write:!0}})],o.prototype,"geometryType",void 0),e([t()],o.prototype,"imageProperties",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maximumDistance",void 0),e([t({type:["OrientedImageryLayer"]})],o.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],o.prototype,"type",void 0),e([t({json:{write:!0},dependsOn:["affixes"]})],o.prototype,"elevationSource",void 0),e([u("portal-item","elevationSource",["elevationSource"])],o.prototype,"readElevationSource",null),o=e([f("esri.layers.OrientedImageryLayer")],o);const ue=o;export{ue as default};
