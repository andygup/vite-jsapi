import{B as p,ai as o,V as a,aC as m,af as s,ag as g,aj as l}from"./index-6eb28d6b.js";import{f as c,d as n}from"./LayerView-c98597b7.js";import{i as d}from"./GraphicContainer-78ef54a2.js";import{o as u}from"./GraphicsView2D-810c53e7.js";import"./Container-f222bf9e.js";import"./parser-aaaca3ad.js";import"./definitions-c7b3085f.js";import"./enums-b14466b3.js";import"./Texture-f1cb91e8.js";import"./color-9d59cb66.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-cba9834b.js";import"./FeatureContainer-7f595011.js";import"./AttributeStoreView-4c4912ed.js";import"./TiledDisplayObject-a824f619.js";import"./sql-1e6265ed.js";import"./diffUtils-e501908d.js";import"./labelingInfo-e90eb8c8.js";import"./labelUtils-01c8275b.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-825f837d.js";import"./WGLContainer-395f3f5a.js";import"./VertexArrayObject-90638f1e.js";import"./ProgramTemplate-420a33f9.js";import"./GeometryUtils-4f3e0e20.js";import"./heatmapUtils-b8fab62d.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-258eab41.js";import"./featureConversionUtils-98810c3c.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-3009bb43.js";import"./ExpandedCIM-a2bc62b4.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-0d2af824.js";import"./floatRGBA-052c02f6.js";import"./clusterUtils-f9477424.js";import"./SizeVariable-d56771ee.js";import"./colorRamps-991e13c0.js";import"./LegendOptions-8b5a4dff.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-d204db2e.js";import"./util-cf98aba5.js";import"./TileContainer-3bf7087b.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-1bb4e48e.js";import"./normalizeUtilsCommon-b44b6ad4.js";import"./normalizeUtilsSync-9691a80e.js";import"./projectionSupport-89fdbb4c.js";import"./json-48e3ea08.js";import"./Matcher-e7185c32.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-ac5156a1.js";import"./LRUCache-c5294c76.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-4cbc1c81.js";import"./webStyleSymbolUtils-d900e905.js";import"./ComputedAttributeStorage-65390d85.js";import"./FieldsIndex-b55fecf3.js";import"./arcadeTimeUtils-0b563317.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([g()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const bi=e;export{bi as default};
