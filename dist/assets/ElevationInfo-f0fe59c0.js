import{ae as r,af as n,bD as l,eG as h,ai as d,eD as y,cG as m,bF as v,bG as w,fn as b}from"./index-b4b3ae7d.js";import{m as x}from"./lengthUtils-ae3367a7.js";var a;let i=a=class extends l{constructor(e){super(e)}async collectRequiredFields(e,t){return h(e,t,this.expression)}clone(){return new a({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};r([n({type:String,json:{write:!0}})],i.prototype,"expression",void 0);r([n({type:String,json:{write:!0}})],i.prototype,"title",void 0);i=a=r([d("esri.layers.support.FeatureExpressionInfo")],i);const c=i;function q(o){return 1/(x[o]||1)}function g(){const o=Object.keys(x);return o.sort(),o}const F=g();var p;const u=y()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),f=new m({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let s=p=class extends l{constructor(e){super(e),this.offset=null}readFeatureExpressionInfo(e,t){if(e!=null)return e;if(t.featureExpression&&t.featureExpression.value===0)return{expression:"0"}}writeFeatureExpressionInfo(e,t,E,I){t[E]=e.write({},I),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new p({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&b(this.featureExpressionInfo,e.featureExpressionInfo)}};r([n({type:c,json:{write:!0}})],s.prototype,"featureExpressionInfo",void 0);r([v("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],s.prototype,"readFeatureExpressionInfo",null);r([w("featureExpressionInfo",{featureExpressionInfo:{type:c},"featureExpression.value":{type:[0]}})],s.prototype,"writeFeatureExpressionInfo",null);r([n({type:u.apiValues,nonNullable:!0,json:{type:u.jsonValues,read:u.read,write:{writer:u.write,isRequired:!0}}})],s.prototype,"mode",null);r([n({type:Number,json:{write:!0}})],s.prototype,"offset",void 0);r([n({type:F,json:{type:String,read:f.read,write:f.write}})],s.prototype,"unit",null);s=p=r([d("esri.layers.support.ElevationInfo")],s);const N=s;export{N as E,q as g};
