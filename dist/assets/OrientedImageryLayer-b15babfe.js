import{aH as l,e,y as t,a as f,bB as v,bD as u,K as c}from"./index-ebffac9a.js";import h from"./FeatureLayer-b3085822.js";import"./UniqueValueRenderer-1e273e84.js";import"./ColorStop-022cb10b.js";import"./diffUtils-070c5609.js";import"./colorRamps-252dbf2c.js";import"./jsonUtils-2e3cf42f.js";import"./DictionaryLoader-f7a481a0.js";import"./LRUCache-bcacffcf.js";import"./FieldsIndex-ed9267b4.js";import"./heatmapUtils-202eebb3.js";import"./MultiOriginJSONSupport-8564e0a9.js";import"./sql-2f93e553.js";import"./FeatureLayerBase-2ba92399.js";import"./commonProperties-50fc1190.js";import"./ElevationInfo-b2766669.js";import"./AttachmentQuery-8ea2465f.js";import"./Query-d081b67e.js";import"./RelationshipQuery-9d5cc95f.js";import"./serviceCapabilitiesUtils-5493bd8e.js";import"./editsZScale-9781b9a7.js";import"./queryZScale-29014927.js";import"./FeatureSet-4557a301.js";import"./APIKeyMixin-578bd2ec.js";import"./ArcGISService-d99bd511.js";import"./BlendLayer-3c1f048d.js";import"./jsonUtils-cb5066f8.js";import"./CustomParametersMixin-935b77ee.js";import"./EditBusLayer-6ecad90c.js";import"./FeatureReductionLayer-96052c96.js";import"./FeatureEffect-9ac45330.js";import"./FeatureFilter-bb432d61.js";import"./labelingInfo-b3e440ff.js";import"./defaults-2d143f10.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-6d575663.js";import"./OrderedLayer-16546086.js";import"./PortalLayer-9a9f290e.js";import"./portalItemUtils-a90a3682.js";import"./ScaleRangeLayer-a374a131.js";import"./TemporalLayer-e1ed1ea4.js";import"./FeatureTemplate-701c82ac.js";import"./FeatureType-24aebfe0.js";import"./fieldProperties-a40a4651.js";import"./versionUtils-14dabf66.js";import"./styleUtils-d9b8c11c.js";import"./TopFeaturesQuery-279b94aa.js";import"./popupUtils-d363b49e.js";let r=class extends l(v){constructor(s){super(s)}read(s,p){const y={};for(const d in s)y[d.toLowerCase()]=s[d];super.read(y,p)}};e([t({json:{name:"dempathprefix"}})],r.prototype,"demPathPrefix",void 0),e([t({json:{name:"dempathsuffix"}})],r.prototype,"demPathSuffix",void 0),e([t({json:{name:"imagepathprefix"}})],r.prototype,"imagePathPrefix",void 0),e([t({json:{name:"imagepathsuffix"}})],r.prototype,"imagePathSuffix",void 0),e([t({json:{name:"depthimagepathprefix"}})],r.prototype,"depthImagePathPrefix",void 0),e([t({json:{name:"depthimagepathsuffix"}})],r.prototype,"depthImagePathSuffix",void 0),e([t({json:{name:"localimagepathprefix"}})],r.prototype,"localImagePathPrefix",void 0),e([t({json:{name:"localimagepathsuffix"}})],r.prototype,"localImagePathSuffix",void 0),e([t({json:{name:"videopathprefix"}})],r.prototype,"videoPathPrefix",void 0),e([t({json:{name:"videopathsuffix"}})],r.prototype,"videoPathSuffix",void 0),r=e([f("esri.layers.orientedImagery.core.Affixes")],r);const g=r;let i=class extends v{constructor(n){super(n)}};e([t({type:Number,json:{write:!0}})],i.prototype,"averageHeightAboveGround",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraHeading",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraPitch",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraRoll",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"farDistance",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"horizontalFieldOfView",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"nearDistance",void 0),e([t({json:{write:!0}})],i.prototype,"orientedImageryType",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"verticalFieldOfView",void 0),i=e([f("esri.layers.orientedImagery.core.CameraProperties")],i);const x=i;let o=class extends h{constructor(){super(...arguments),this.affixes=null,this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery",this.elevationSource=null}readElevationSource(n,s){var y;let p=(y=n.url)==null?void 0:y.trim();if(p){const{affixes:d}=this;if(d){const{demPathSuffix:a,demPathPrefix:m}=d;m!=null&&m.trim()&&(p=(m==null?void 0:m.trim())+"/"+p),a!=null&&a.trim()&&(p=p+"/"+(a==null?void 0:a.trim()))}}return{...n,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new c("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({type:g,json:{write:!0}})],o.prototype,"affixes",void 0),e([t({type:x,json:{write:!0}})],o.prototype,"cameraProperties",void 0),e([t({json:{write:!0}})],o.prototype,"coverage",void 0),e([t({json:{write:!0}})],o.prototype,"coveragePercent",void 0),e([t({json:{write:!0}})],o.prototype,"defaultSearchLocation",void 0),e([t({json:{write:!0}})],o.prototype,"depthImage",void 0),e([t({json:{write:!0}})],o.prototype,"geometryType",void 0),e([t()],o.prototype,"imageProperties",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maximumDistance",void 0),e([t({type:["OrientedImageryLayer"]})],o.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],o.prototype,"type",void 0),e([t({json:{write:!0},dependsOn:["affixes"]})],o.prototype,"elevationSource",void 0),e([u("portal-item","elevationSource",["elevationSource"])],o.prototype,"readElevationSource",null),o=e([f("esri.layers.OrientedImageryLayer")],o);const ue=o;export{ue as default};
