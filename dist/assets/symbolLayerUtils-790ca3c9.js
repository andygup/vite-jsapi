import{a as n,L as v,_ as y,j6 as c,fI as p,j7 as w,e as l}from"./index-6eb28d6b.js";import{e as b}from"./LRUCache-c5294c76.js";let s=f();function f(){return new b(50)}function x(){s=f()}async function B(r,o){var i,t;if((i=r.resource)!=null&&i.href)return _(r.resource.href).then(e=>[e.width,e.height]);if((t=r.resource)!=null&&t.primitive)return o!=null?[o,o]:[256,256];throw new n("symbol3d:invalid-symbol-layer","symbol layers of type Icon must have either an href or a primitive resource")}function _(r){return v(r,{responseType:"image"}).then(o=>o.data)}async function I(r,o=null){var t;if(!r.isPrimitive){const e=r.resource.href;if(!e)throw new n("symbol:invalid-resource","The symbol does not have a valid resource");const a=s.get(e);if(a!==void 0)return a;const{fetch:h}=await y(()=>import("./objectResourceUtils-9aa487bf.js").then(d=>d.o),["assets/objectResourceUtils-9aa487bf.js","assets/devEnvironmentUtils-5002a058.js","assets/index-6eb28d6b.js","assets/index-0492b785.css","assets/mat3f64-221ce671.js","assets/mat4f64-1413b4a7.js","assets/BufferView-bd363d75.js","assets/vec32-259a42c6.js","assets/DefaultMaterial_COLOR_GAMMA-d19c2d61.js","assets/enums-b14466b3.js","assets/Version-fd75b892.js","assets/quat-f8e37ce2.js","assets/quatf64-3363c48e.js","assets/resourceUtils-1d112ccb.js","assets/basicInterfaces-4ab7cc6a.js","assets/Indices-40d92002.js","assets/byteSizeEstimations-7cf1c05d.js","assets/NestedMap-1b5db22e.js","assets/requestImageUtils-7cd94547.js","assets/InterleavedLayout-d72ff30e.js","assets/types-1305598a.js","assets/vec4f64-aa64c7e9.js","assets/sphere-fc1d3477.js","assets/ByteSizeUnit-d4757d40.js","assets/lineSegment-bcb5028d.js","assets/VertexAttribute-9f2e53ec.js","assets/Texture-f1cb91e8.js","assets/VertexArrayObject-90638f1e.js","assets/OrderIndependentTransparency-309a1bc3.js","assets/vec3f32-ad1dc57f.js","assets/doublePrecisionUtils-e3c3d0d8.js","assets/symbolColorUtils-88aff2da.js","assets/lengthUtils-d204db2e.js","assets/VertexElementDescriptor-2925c6af.js"]),m=await h(e,{disableTextures:!0}),u=c(m.referenceBoundingBox,l());return s.put(e,u),u}if(!((t=r.resource)!=null&&t.primitive))throw new n("symbol:invalid-resource","The symbol does not have a valid resource");const i=p(w(r.resource.primitive));if(o!=null)for(let e=0;e<i.length;e++)i[e]*=o;return c(i,l())}export{x as clearBoundingBoxCache,B as computeIconLayerResourceSize,I as computeObjectLayerResourceSize};
