import{e as f,n as w}from"./cast-daef7652.js";import{g as y}from"./Graphic-cf98a91a.js";import{j as _}from"./Collection-e2259e32.js";import{r as m,t as V}from"./typedArrayUtil-2bcf3cee.js";import{l as h,h as a,a as v}from"./reactiveUtils-3c1b281e.js";import"./Error-bd05b442.js";import"./ensureType-fa162cfc.js";import"./string-3d0ebcd3.js";import{i as C}from"./utils-6c2afd8b.js";import{r as b}from"./GroupContainer-7fa0a0f5.js";import{y as H,u as T}from"./LayerView-8f28f320.js";import{i as c}from"./GraphicContainer-98f52808.js";import{o as g}from"./BaseGraphicContainer-996bdb9a.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-29120e0a.js";import"./geometry-4b789d90.js";import"./Extent-7f29a1bb.js";import"./Polyline-c56eca9b.js";import"./typeUtils-d7b057b5.js";import"./jsonMap-a9c94baf.js";import"./PopupTemplate-343851b8.js";import"./Clonable-f249bc0f.js";import"./fieldUtils-021fea8a.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-87969052.js";import"./enumeration-e46f3fd4.js";import"./number-53937715.js";import"./locale-30120714.js";import"./Identifiable-e3a09883.js";import"./symbols-fce921a6.js";import"./CIMSymbol-d0e12b74.js";import"./Symbol-f45dc441.js";import"./Color-2245b966.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-94fd2faa.js";import"./aaBoundingBox-6fbd5972.js";import"./request-c2b0ab45.js";import"./persistableUrlUtils-7e525def.js";import"./collectionUtils-09289d8f.js";import"./Portal-ac0dca24.js";import"./Loadable-7c89bd10.js";import"./Promise-088a0e17.js";import"./PortalGroup-f3dee6d8.js";import"./PortalUser-cdb4116b.js";import"./jsonUtils-8bd548d9.js";import"./Evented-d8fc77f0.js";import"./SimpleObservable-7c382d01.js";import"./mat3f32-d3d088e8.js";import"./parser-e6166e34.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-b4e71fc3.js";import"./Utils-c2939f8d.js";import"./enums-8bf08d0c.js";import"./enums-64ab819c.js";import"./Texture-6f3336a0.js";import"./context-util-cb6895d7.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./WGLContainer-db0ff963.js";import"./mat3-45e3f2eb.js";import"./vec2f32-461e65a9.js";import"./pixelUtils-5f39bd45.js";import"./vec2f64-e0301652.js";import"./VertexArrayObject-8a5c7580.js";import"./ProgramTemplate-66c62c24.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./vec2-f978aef8.js";import"./featureConversionUtils-7c9ea581.js";import"./OptimizedFeature-9345d11b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./HandleOwner-78d35324.js";import"./ExpandedCIM-f5d9de07.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-45a7fe45.js";import"./mat2d-80bd93af.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-72167b00.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-ae16ab2d.js";import"./normalizeUtils-d322ac85.js";import"./projectionSupport-1035a977.js";import"./projection-33a6cba9.js";import"./unitUtils-43365914.js";import"./assets-4cb15247.js";import"./zscale-a508c8e5.js";import"./json-48e3ea08.js";import"./labelingInfo-f1d3ed98.js";import"./labelUtils-4072dca9.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-f34afef9.js";import"./FeatureContainer-7a24e5ff.js";import"./TileContainer-e69647a1.js";import"./TileKey-ab325718.js";import"./Queue-e839cb6a.js";import"./visualVariablesUtils-7af1d739.js";import"./visualVariablesUtils-b572c1c3.js";import"./lengthUtils-5215af35.js";import"./capabilities-320386e9.js";import"./Matcher-41d9c6c0.js";import"./TileStrategy-a62d1e84.js";import"./TileStore-4c0c3140.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-e996b56b.js";import"./TimeExtent-84882adb.js";import"./Field-0ac3c9d2.js";import"./fieldType-4ec45634.js";import"./tileUtils-d9c533ae.js";import"./TileClipper-eed3813b.js";import"./Geometry-daada628.js";import"./LRUCache-36379339.js";import"./MemCache-5bd66e9c.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-84c98663.js";import"./schemaUtils-24d4fed0.js";import"./LayerFloorInfo-689deffc.js";import"./diffUtils-58fbd195.js";import"./createSymbolSchema-deb469a5.js";import"./rendererUtils-2abcd901.js";import"./FeatureReductionLayer-d7ad3b5e.js";import"./BlendLayer-1b58b599.js";import"./UniqueValueRenderer-83bbe8b7.js";import"./LegendOptions-54bbb61a.js";import"./colorRamps-3439e132.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-06ced1a6.js";import"./jsonUtils-9c255ec7.js";import"./DictionaryLoader-d07ab55e.js";import"./deprecate-99da8bee.js";import"./OperationalLayer-7b681a2a.js";import"./ElevationInfo-4e7fad68.js";import"./util-7859c103.js";import"./ComputedAttributeStorage-1f3c802c.js";import"./FeatureSetReader-22887d5b.js";import"./centroid-de776b3b.js";import"./FieldsIndex-394de0a1.js";import"./vec3f32-4322908d.js";const d="sublayers",n="layerView",I=Object.freeze({remove(){},pause(){},resume(){}});let l=class extends H(T){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new b}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){m(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():m(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(m(this._graphicsViewsFeatureCollectionMap)){const p=this._graphicsViewsFeatureCollectionMap.get(r);for(const o of e)!o.popupTemplate&&p.popupTemplate&&(o.popupTemplate=p.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof y?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):_.isCollection(i)&&(t=i.map(r=>r&&r.uid).toArray()),t=t.filter(r=>r!=null),t.length?(this._addHighlight(t),{remove:()=>{this._removeHighlight(t)}}):I}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(m(r)&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const p=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:p});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.handles.add([h(()=>e.visible,s=>o.container.visible=s,a),h(()=>o.updating,()=>this.notifyChange("updating"),a)],n)}this._updateHighlight()}else m(this.layer.sublayers)&&this.handles.add(v(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(n);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),V(this.layer.sublayers))return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const p=new C,o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.handles.add([e.on("graphic-update",s.graphicUpdateHandler),h(()=>e.visible,u=>s.container.visible=u,a),h(()=>s.updating,()=>this.notifyChange("updating"),a)],n),p.addChild(s.container),this.container.addChild(p),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};l=f([w("esri.views.2d.layers.MapNotesLayerView2D")],l);const lr=l;export{lr as default};
