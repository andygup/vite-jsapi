import{bC as o,fe as a,eI as c,ff as y,bf as d,bt as w}from"./index-a9c4c008.js";import{E as g}from"./ElevationInfo-c5dc6698.js";function b(t){if(!t)return t;const{start:e,end:n}=t;return new o({start:e!=null?a(e,-e.getTimezoneOffset(),"minutes"):e,end:n!=null?a(n,-n.getTimezoneOffset(),"minutes"):n})}function v(t){if(!t)return t;const{start:e,end:n}=t;return new o({start:e!=null?a(e,e.getTimezoneOffset(),"minutes"):e,end:n!=null?a(n,n.getTimezoneOffset(),"minutes"):n})}const E={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:!0}},O={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader(t,e){return!e.disablePopup}},write:{enabled:!0,writer(t,e,n){e[n]=!t}}}},x={type:Boolean,value:!0,nonNullable:!0,json:{name:"showLabels",write:!0}},D={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:y}}},S={type:Boolean,value:!0,nonNullable:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}},T={value:null,type:g,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:!0}};function N(t){return{type:t,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const p={write:!0,read:!0},m={type:Number,json:{origins:{"web-document":p,"portal-item":{write:!0}}}},h={...m,json:{...m.json,origins:{"web-document":{...p,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader(t,e,n){if((!n||n.origin==="service")&&e.drawingInfo&&e.drawingInfo.transparency!==void 0)return c(e.drawingInfo.transparency);if(e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.transparency!==void 0)return c(e.layerDefinition.drawingInfo.transparency)}}}},z={type:o,readOnly:!0,get(){var f,u;if(!((f=this.layer)!=null&&f.timeInfo))return null;const{datesInUnknownTimezone:t,timeOffset:e,useViewTime:n}=this.layer,s=(u=this.view)==null?void 0:u.timeExtent;let i=this.layer.timeExtent;t&&(i=v(i));let r=n?s&&i?s.intersection(i):s||i:i;if(!r||r.isEmpty||r.isAllTime)return r;e&&(r=r.offset(-e.value,e.unit)),t&&(r=b(r));const l=this._get("timeExtent");return r.equals(l)?l:r}},R={type:d,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(t,e)=>{const n=d.fromJSON(t);return e.spatialReference!=null&&typeof e.spatialReference=="object"&&(n.spatialReference=w.fromJSON(e.spatialReference)),n}}}},read:!1}},L={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},P={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"}}},B={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}},$={json:{write:{ignoreOrigin:!0},origins:{"web-map":{read:!1,write:!1}}}};export{S as a,$ as b,z as c,B as d,T as e,m as f,R as g,L as i,x as l,P as m,h as o,O as p,N as r,E as s,D as u};
