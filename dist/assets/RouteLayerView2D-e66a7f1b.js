import{e as m,y as g,n as d}from"./cast-daef7652.js";import{j as n}from"./Collection-e2259e32.js";import{l as u}from"./CollectionFlattener-c6dafa4a.js";import{r as p,t as _}from"./typedArrayUtil-2bcf3cee.js";import{h as w,l as c}from"./reactiveUtils-3c1b281e.js";import"./ensureType-fa162cfc.js";import{b as y,h as f,O as k,g as v,f as M,a as I,D as V}from"./Stop-38392925.js";import{y as G,u as F}from"./LayerView-8f28f320.js";import{i as H}from"./GraphicContainer-98f52808.js";import{o as C}from"./BaseGraphicContainer-996bdb9a.js";import"./string-3d0ebcd3.js";import"./Error-bd05b442.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-29120e0a.js";import"./Evented-d8fc77f0.js";import"./SimpleObservable-7c382d01.js";import"./Graphic-cf98a91a.js";import"./geometry-4b789d90.js";import"./Extent-7f29a1bb.js";import"./Polyline-c56eca9b.js";import"./typeUtils-d7b057b5.js";import"./jsonMap-a9c94baf.js";import"./PopupTemplate-343851b8.js";import"./Clonable-f249bc0f.js";import"./fieldUtils-021fea8a.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-87969052.js";import"./enumeration-e46f3fd4.js";import"./number-53937715.js";import"./locale-30120714.js";import"./Identifiable-e3a09883.js";import"./symbols-fce921a6.js";import"./CIMSymbol-d0e12b74.js";import"./Symbol-f45dc441.js";import"./Color-2245b966.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-94fd2faa.js";import"./aaBoundingBox-6fbd5972.js";import"./request-c2b0ab45.js";import"./persistableUrlUtils-7e525def.js";import"./collectionUtils-09289d8f.js";import"./Portal-ac0dca24.js";import"./Loadable-7c89bd10.js";import"./Promise-088a0e17.js";import"./PortalGroup-f3dee6d8.js";import"./PortalUser-cdb4116b.js";import"./jsonUtils-8bd548d9.js";import"./utils-6c2afd8b.js";import"./mat3f32-d3d088e8.js";import"./parser-e6166e34.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-b4e71fc3.js";import"./Utils-c2939f8d.js";import"./enums-8bf08d0c.js";import"./enums-64ab819c.js";import"./Texture-6f3336a0.js";import"./context-util-cb6895d7.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./HandleOwner-78d35324.js";import"./ExpandedCIM-f5d9de07.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-45a7fe45.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./vec2f32-461e65a9.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-72167b00.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-ae16ab2d.js";import"./normalizeUtils-d322ac85.js";import"./projectionSupport-1035a977.js";import"./projection-33a6cba9.js";import"./unitUtils-43365914.js";import"./assets-4cb15247.js";import"./zscale-a508c8e5.js";import"./json-48e3ea08.js";import"./labelingInfo-f1d3ed98.js";import"./labelUtils-4072dca9.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-f34afef9.js";import"./VertexArrayObject-8a5c7580.js";import"./FeatureContainer-7a24e5ff.js";import"./mat3-45e3f2eb.js";import"./TileContainer-e69647a1.js";import"./TileKey-ab325718.js";import"./WGLContainer-db0ff963.js";import"./pixelUtils-5f39bd45.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-66c62c24.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./featureConversionUtils-7c9ea581.js";import"./OptimizedFeature-9345d11b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Queue-e839cb6a.js";import"./visualVariablesUtils-7af1d739.js";import"./visualVariablesUtils-b572c1c3.js";import"./lengthUtils-5215af35.js";import"./capabilities-320386e9.js";import"./Matcher-41d9c6c0.js";import"./TileStrategy-a62d1e84.js";import"./TileStore-4c0c3140.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-e996b56b.js";import"./TimeExtent-84882adb.js";import"./Field-0ac3c9d2.js";import"./fieldType-4ec45634.js";import"./tileUtils-d9c533ae.js";import"./TileClipper-eed3813b.js";import"./Geometry-daada628.js";import"./LRUCache-36379339.js";import"./MemCache-5bd66e9c.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-84c98663.js";import"./schemaUtils-24d4fed0.js";import"./LayerFloorInfo-689deffc.js";import"./diffUtils-58fbd195.js";import"./createSymbolSchema-deb469a5.js";import"./rendererUtils-2abcd901.js";import"./FeatureReductionLayer-d7ad3b5e.js";import"./BlendLayer-1b58b599.js";import"./UniqueValueRenderer-83bbe8b7.js";import"./LegendOptions-54bbb61a.js";import"./colorRamps-3439e132.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-06ced1a6.js";import"./jsonUtils-9c255ec7.js";import"./DictionaryLoader-d07ab55e.js";import"./deprecate-99da8bee.js";import"./OperationalLayer-7b681a2a.js";import"./ElevationInfo-4e7fad68.js";import"./util-7859c103.js";import"./ComputedAttributeStorage-1f3c802c.js";import"./FeatureSetReader-22887d5b.js";import"./centroid-de776b3b.js";import"./FieldsIndex-394de0a1.js";import"./vec3f32-4322908d.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof v||t instanceof M||t instanceof I||t instanceof V}function A(t){return n.isCollection(t)&&t.length&&l(t.getItemAt(0))}function $(t){return Array.isArray(t)&&t.length&&l(t[0])}let h=class extends G(F){constructor(){super(...arguments),this._graphics=new n,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>p(this.layer)&&!this.destroyed?[p(this.layer.routeInfo)?new n([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(e=>this._getNetworkFeatureUid(e)):A(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(p);return r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):b}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(p).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.handles.remove(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return _(r.symbol)?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(p));for(const i of t.added)this.handles.add([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};m([g()],h.prototype,"_graphics",void 0),m([g()],h.prototype,"_routeItems",null),h=m([d("esri.views.2d.layers.RouteLayerView2D")],h);const yr=h;export{yr as default};
