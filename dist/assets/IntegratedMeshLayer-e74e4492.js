import{ae as t,af as a,cc as w,bG as _,ai as f,bD as I,fr as T,ei as L,hK as N,cE as b,hz as R,J as A,du as J,r as P,H as D,an as j,dv as E,Z as K,E as d,bF as $,aZ as V,a$ as x}from"./index-0ea7d266.js";import{M as G}from"./MultiOriginJSONSupport-afa56182.js";import{p as h}from"./persistable-1ef7dee7.js";import{A as U}from"./APIKeyMixin-882c3a78.js";import{A as z}from"./ArcGISService-65ac5d7b.js";import{O as q}from"./OperationalLayer-fd7c639f.js";import{P as C}from"./PortalLayer-d0349a78.js";import{S as F}from"./ScaleRangeLayer-1e20ff33.js";import{S as H,a as v}from"./SceneService-60cb991b.js";import{e as W}from"./commonProperties-cee41848.js";import{I as Z,a as k,b as B,c as Q}from"./I3SLayerDefinitions-6929e466.js";import"./multiOriginJSONSupportUtils-ad07e08e.js";import"./resourceExtension-f98501ce.js";import"./portalItemUtils-c67149e6.js";import"./originUtils-dad1432b.js";import"./resourceUtils-2d5afb2c.js";import"./ElevationInfo-56c656df.js";import"./lengthUtils-bc57f38a.js";var m;let n=m=class extends I{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,i,r,o){if(o.layer&&o.layer.spatialReference&&!o.layer.spatialReference.equals(this.geometry.spatialReference)){if(!T(e.spatialReference,o.layer.spatialReference)){o&&o.messages&&o.messages.push(new L("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:o.layer.spatialReference,context:o}));return}const l=new w;N(e,l,o.layer.spatialReference),i[r]=l.toJSON(o)}else i[r]=e.toJSON(o);delete i[r].spatialReference}clone(){return new m({geometry:b(this.geometry),type:this.type})}};t([a({type:w}),h()],n.prototype,"geometry",void 0);t([_(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null);t([a({type:["clip","mask","replace"],nonNullable:!0}),h()],n.prototype,"type",void 0);n=m=t([f("esri.layers.support.SceneModification")],n);const c=n;var p;let y=p=class extends R(A.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(i=>i.toJSON(e)).filter(i=>!!i.geometry)}static fromJSON(e,i){const r=new p;for(const o of e)r.add(c.fromJSON(o,i));return r}static async fromUrl(e,i,r){const o={url:J(e),origin:"service"},l=await P(e,{responseType:"json",signal:r==null?void 0:r.signal}),O=i.toJSON(),S=[];for(const g of l.data)S.push(c.fromJSON({...g,geometry:{...g.geometry,spatialReference:O}},o));return new p({url:e,items:S})}};t([a({type:String})],y.prototype,"url",void 0);y=p=t([f("esri.layers.support.SceneModifications")],y);const M=y;let s=class extends H(z(q(C(F(G(U(x))))))){constructor(...e){super(...e),this._handles=new D,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(j(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,V))}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}readModifications(e,i,r){this._modificationsSource={url:E(e,r),context:r}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){K(r)}if(await this._fetchService(i),this._modificationsSource!=null){const r=await M.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,i){return this._debouncedSaveOperations(v.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(v.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};t([a({type:String,readOnly:!0})],s.prototype,"geometryType",void 0);t([a({type:["show","hide"]})],s.prototype,"listMode",void 0);t([a({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0);t([a({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0);t([a({type:Z,readOnly:!0})],s.prototype,"nodePages",void 0);t([a({type:[k],readOnly:!0})],s.prototype,"materialDefinitions",void 0);t([a({type:[B],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0);t([a({type:[Q],readOnly:!0})],s.prototype,"geometryDefinitions",void 0);t([a({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0);t([a({type:M}),h({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0);t([$(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null);t([a(W)],s.prototype,"elevationInfo",void 0);t([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0);s=t([f("esri.layers.IntegratedMeshLayer")],s);const ve=s;export{ve as default};
