import{P as d,E as N,eh as u}from"./index-0ea7d266.js";import{l as w}from"./lazyLayerLoader-c78c80ae.js";import{getNumLayersAndTables as f,preprocessFSItemData as C,getSubtypeGroupLayerIds as T,getFirstLayerOrTableId as v}from"./layersLoader-963df45b.js";import{h as l}from"./portalItemUtils-c67149e6.js";import{f as i}from"./fetchService-1c07a088.js";import"./jsonContext-ebb8c40d.js";import"./styleUtils-c13aa2aa.js";async function Q(e){e.portalItem&&!(e.portalItem instanceof d)&&(e={...e,portalItem:new d(e.portalItem)});const a=await g(e.portalItem),r=a.constructor;return new r({portalItem:e.portalItem,...a.properties})}async function g(e){await e.load();const a=await M(e);return I(a)}async function M(e){switch(e.type){case"Map Service":return h(e);case"Feature Service":return b(e);case"Feature Collection":return G(e);case"Scene Service":return F(e);case"Image Service":return k(e);case"Stream Service":return O();case"Vector Tile Service":return W();case"GeoJson":return V();case"CSV":return K();case"KML":return A();case"WFS":return D();case"WMTS":return j();case"WMS":return $();case"Feed":return J();default:throw new N("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function I(e){const a=e.className,r=w[a];return{constructor:await r(),properties:e.properties}}async function h(e){return await R(e)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function b(e){if(l(e,"Oriented Imagery Layer"))return P(e);const a=await S(e);if(typeof a=="object"){const r={};return a.id!=null&&(r.layerId=a.id),{className:a.className||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}async function F(e){var r;const a=await S(e);if(typeof a=="object"){const s={};let t;if(a.id!=null?(s.layerId=a.id,t=`${e.url}/layers/${a.id}`):t=e.url,(r=e.typeKeywords)!=null&&r.length){for(const c of Object.keys(u))if(e.typeKeywords.includes(c))return{className:u[c]}}const n=await i(t);return{className:u[n==null?void 0:n.layerType]||"SceneLayer",properties:s}}else if(a===!1){const s=await i(e.url);return(s==null?void 0:s.layerType)==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}return{className:"GroupLayer"}}async function G(e){await e.load();const a=l(e,"Map Notes"),r=l(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(l(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return f(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function k(e){var o,L,m;await e.load();const a=((o=e.typeKeywords)==null?void 0:o.map(p=>p.toLowerCase()))??[];if(a.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(a.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await e.fetchData(),s=r==null?void 0:r.layerType;if(s==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(s==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const t=await i(e.url),n=(L=t.cacheType)==null?void 0:L.toLowerCase(),c=(m=t.capabilities)==null?void 0:m.toLowerCase().includes("tilesonly");return n==="map"||c?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function O(){return{className:"StreamLayer"}}function W(){return{className:"VectorTileLayer"}}function V(){return{className:"GeoJSONLayer"}}function K(){return{className:"CSVLayer"}}function A(){return{className:"KMLLayer"}}function D(){return{className:"WFSLayer"}}function $(){return{className:"WMSLayer"}}function j(){return{className:"WMTSLayer"}}function J(){return{className:"StreamLayer"}}async function P(e){await e.load();const a=await e.fetchData();return a.coverage?{className:"GroupLayer"}:{className:"OrientedImageryLayer",properties:a}}async function R(e){return(await i(e.url)).tileInfo}async function S(e){const a=e.url;if(!a||a.match(/\/\d+$/))return{};await e.load();const r=await e.fetchData();if(e.type==="Feature Service"){const n=await C(r,a),c=y(n);if(typeof c=="object"){const o=T(r);c.className=c.id!=null&&o.includes(c.id)?"SubtypeGroupLayer":"FeatureLayer"}return c}if(f(r)>0)return y(r);const t=await i(a);return y(t)}function y(e){return f(e)===1?{id:v(e)}:!1}export{Q as fromItem,M as selectLayerClassPath};
