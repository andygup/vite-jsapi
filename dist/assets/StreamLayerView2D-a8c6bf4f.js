import{af as p,ag as m,aj as d,E as l,a as u,cu as h}from"./index-6eb28d6b.js";import{g as f}from"./FeatureSet-af928f6b.js";import v from"./FeatureLayerView2D-5f7a7418.js";import{e as g}from"./util-cf98aba5.js";import"./Field-3c7d8d62.js";import"./fieldType-df6f400c.js";import"./Container-f222bf9e.js";import"./parser-aaaca3ad.js";import"./definitions-c7b3085f.js";import"./enums-b14466b3.js";import"./Texture-f1cb91e8.js";import"./FeatureEffect-d27dd9c4.js";import"./jsonUtils-4e3a5483.js";import"./Query-2a94894d.js";import"./LayerView-c98597b7.js";import"./AttributeStoreView-4c4912ed.js";import"./TiledDisplayObject-a824f619.js";import"./sql-1e6265ed.js";import"./diffUtils-e501908d.js";import"./labelingInfo-e90eb8c8.js";import"./labelUtils-01c8275b.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-825f837d.js";import"./color-9d59cb66.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-395f3f5a.js";import"./VertexArrayObject-90638f1e.js";import"./ProgramTemplate-420a33f9.js";import"./GeometryUtils-4f3e0e20.js";import"./heatmapUtils-b8fab62d.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-258eab41.js";import"./featureConversionUtils-98810c3c.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-3009bb43.js";import"./ExpandedCIM-a2bc62b4.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-0d2af824.js";import"./floatRGBA-052c02f6.js";import"./clusterUtils-f9477424.js";import"./SizeVariable-d56771ee.js";import"./colorRamps-991e13c0.js";import"./LegendOptions-8b5a4dff.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-d204db2e.js";import"./BitmapTileContainer-7d908e62.js";import"./Bitmap-bfb1508c.js";import"./TileContainer-3bf7087b.js";import"./CircularArray-ef508845.js";import"./BufferPool-eb5f3ecf.js";import"./FeatureContainer-7f595011.js";import"./commonProperties-71c0550b.js";import"./ElevationInfo-6810683d.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-e4e0d5b4.js";import"./RefreshableLayerView-a189d9bc.js";function y(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let s=class extends v{constructor(){super(...arguments),this._enabledEventTypes=new Set,this._isUserPaused=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._isUserPaused||this._proxy.resumeStream()})],"constructor")}get connectionError(){if(this.errorString)return new u("stream-controller",this.errorString)}pause(){this._isUserPaused=!0,this._proxy.pauseStream()}resume(){this._isUserPaused=!1,this._proxy.resumeStream()}on(e,t){if(Array.isArray(e))return h(e.map(n=>this.on(n,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const o=super.on(e,t),i=this;return{remove(){o.remove(),r&&(i._proxy.closed||i.hasEventListener(e)||i._proxy.enableEvent(e,!1))}}}queryLatestObservations(e,t){var r,o,i;if(!((r=this.layer.timeInfo)!=null&&r.endField||(o=this.layer.timeInfo)!=null&&o.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(n=>{const a=f.fromJSON(n);return a.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),a})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(y(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(a=>a.toJSON()),o=g(e.geometryType),i=e.timeInfo&&e.timeInfo.toJSON()||null,n=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:o,objectIdField:t,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:y(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:n,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};p([m()],s.prototype,"errorString",void 0),p([m({readOnly:!0})],s.prototype,"connectionError",null),p([m()],s.prototype,"connectionStatus",void 0),s=p([d("esri.views.2d.layers.StreamLayerView2D")],s);const Ne=s;export{Ne as default};
