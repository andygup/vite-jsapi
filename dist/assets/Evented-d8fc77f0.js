import{e as c,r as u,n as m,m as _}from"./cast-daef7652.js";class a{constructor(){this._emitter=new a.EventEmitter(this)}emit(r,i){return this._emitter.emit(r,i)}on(r,i){return this._emitter.on(r,i)}once(r,i){return this._emitter.once(r,i)}hasEventListener(r){return this._emitter.hasEventListener(r)}}(function(l){class r{constructor(e=null){this._target=e,this._listenersMap=null}clear(){this._listenersMap&&this._listenersMap.clear(),this._listenersMap=null}emit(e,t){const s=this._listenersMap&&this._listenersMap.get(e);if(!s)return!1;const h=this._target||this;return[...s].forEach(o=>{o.call(h,t)}),s.length>0}on(e,t){if(Array.isArray(e)){const h=e.map(o=>this.on(o,t));return u(h)}if(e.includes(","))throw new TypeError("Evented.on() with a comma delimited string of event types is not supported");this._listenersMap||(this._listenersMap=new Map);const s=this._listenersMap.get(e)||[];return s.push(t),this._listenersMap.set(e,s),{remove:()=>{const h=this._listenersMap&&this._listenersMap.get(e)||[],o=h.indexOf(t);o>=0&&h.splice(o,1)}}}once(e,t){const s=this.on(e,h=>{s.remove(),t.call(null,h)});return s}hasEventListener(e){const t=this._listenersMap&&this._listenersMap.get(e);return t!=null&&t.length>0}}l.EventEmitter=r,l.EventedMixin=n=>{let e=class extends n{constructor(){super(...arguments),this._emitter=new r}destroy(){this._emitter.clear()}emit(t,s){return this._emitter.emit(t,s)}on(t,s){return this._emitter.on(t,s)}once(t,s){return this._emitter.once(t,s)}hasEventListener(t){return this._emitter.hasEventListener(t)}};return e=c([m("esri.core.Evented")],e),e};let i=class extends _{constructor(){super(...arguments),this._emitter=new a.EventEmitter(this)}destroy(){this._emitter.clear()}emit(n,e){return this._emitter.emit(n,e)}on(n,e){return this._emitter.on(n,e)}once(n,e){return this._emitter.once(n,e)}hasEventListener(n){return this._emitter.hasEventListener(n)}};i=c([m("esri.core.Evented")],i),l.EventedAccessor=i})(a||(a={}));const E=a;export{E as n};
