import{aM as ue,af as t,ag as i,bF as F,e9 as ce,aj as p,N as I,ew as Y,cX as ee,L as te,cB as he,a as x,ai as me,bf as fe,bt as re,bb as ge,en as ie,cP as ve,V as b,ep as be,hO as we,bD as f,cI as u,hP as Se,hQ as $e,cd as Oe,ez as Ie,$ as xe,hR as Fe,a$ as je}from"./index-989909ce.js";import{S as Le,O as Te}from"./MultiOriginJSONSupport-35c06c89.js";import"./UniqueValueRenderer-069d3511.js";import{n as Be}from"./jsonUtils-f27d3f31.js";import se from"./FeatureLayer-e1bd73c7.js";import{y as q,p as Ee,j as Ae,d as _e}from"./commonProperties-33a052da.js";import{t as qe,l as Ne,s as Pe}from"./FetchAssociatedFeatureLayer-0bb0a9b1.js";import{s as Re}from"./fieldProperties-2e263d2b.js";import{r as Me}from"./FieldsIndex-958df084.js";import{r as ke,N as Ce,K as H}from"./SceneService-3dcb9812.js";import{s as Qe,l as Ue,u as De,m as Ke}from"./I3SLayerDefinitions-4b092d67.js";import{b as Ve}from"./Query-a7c50b34.js";import{p as He}from"./popupUtils-30873e72.js";import{h as Je}from"./ElevationInfo-4676a5da.js";import{p as Ze,d as ze}from"./popupUtils-517eaedb.js";import{i as Ge}from"./APIKeyMixin-a5f40f2f.js";import{l as Xe}from"./ArcGISService-26e21a6b.js";import{c as We}from"./OperationalLayer-2d14fe8e.js";import{j as Ye}from"./PortalLayer-61da00e6.js";import{t as et}from"./ScaleRangeLayer-ca70e7f0.js";import"./LegendOptions-3ac5ff0b.js";import"./diffUtils-a4f61c8a.js";import"./SizeVariable-3a3f0b31.js";import"./colorRamps-c86b1339.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-32b5157c.js";import"./ColorStop-f2a5e65b.js";import"./featureFlags-8ed38c32.js";import"./styleUtils-ee1316c2.js";import"./DictionaryLoader-e10e08a4.js";import"./LRUCache-a1ffc3d4.js";import"./Version-f874365f.js";import"./heatmapUtils-8adef46d.js";import"./vec4f64-aa64c7e9.js";import"./sql-926e6229.js";import"./FeatureLayerBase-f98e5e92.js";import"./Field-52715ac0.js";import"./fieldType-72d6c895.js";import"./AttachmentQuery-dba1791e.js";import"./RelationshipQuery-a6e35139.js";import"./serviceCapabilitiesUtils-4e64b5df.js";import"./editsZScale-40cfbfd3.js";import"./queryZScale-08f2f3b3.js";import"./FeatureSet-8fc9b923.js";import"./BlendLayer-a546812d.js";import"./jsonUtils-9353bf48.js";import"./parser-39b32429.js";import"./CustomParametersMixin-f84f0782.js";import"./EditBusLayer-c15d1d59.js";import"./FeatureReductionLayer-b53d84aa.js";import"./FeatureEffect-9276c25f.js";import"./clusterUtils-34d60035.js";import"./labelingInfo-3941dab0.js";import"./labelUtils-f745c070.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-dd51a935.js";import"./RefreshableLayer-bb04281c.js";import"./TemporalLayer-2f769b9e.js";import"./FeatureTemplate-40bf8c68.js";import"./FeatureType-f0d92d4c.js";import"./versionUtils-c5796d81.js";import"./styleUtils-f548cfd1.js";import"./TopFeaturesQuery-2ea766ec.js";import"./portalItemUtils-f1e38b30.js";import"./mat3f64-221ce671.js";import"./mat4f64-1413b4a7.js";import"./quat-6714c1ef.js";import"./quatf64-3363c48e.js";import"./I3SBinaryReader-202d30d7.js";import"./VertexAttribute-9f2e53ec.js";import"./spatialReferenceEllipsoidUtils-dbdaf591.js";import"./symbolColorUtils-6b02c17b.js";import"./vec3f32-ad1dc57f.js";import"./plane-64b242ab.js";import"./sphere-7a1936d3.js";import"./ByteSizeUnit-d4757d40.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceUtils-4695f673.js";let y=class extends ue(Le){constructor(r){super(r),this.title="",this.id=-1,this.modelName=null,this.isEmpty=null,this.legendEnabled=!0,this.visible=!0,this.opacity=1}readTitle(r,s){return typeof s.alias=="string"?s.alias:typeof s.name=="string"?s.name:""}readIdOnlyOnce(r){return this.id!==-1?this.id:typeof r=="number"?r:-1}};t([i({type:String,json:{origins:{"web-scene":{write:!0},"portal-item":{write:!0}}}})],y.prototype,"title",void 0),t([F("service","title",["alias","name"])],y.prototype,"readTitle",null),t([i()],y.prototype,"layer",void 0),t([i({type:ce,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0}}})],y.prototype,"id",void 0),t([F("service","id")],y.prototype,"readIdOnlyOnce",null),t([i(q(String))],y.prototype,"modelName",void 0),t([i(q(Boolean))],y.prototype,"isEmpty",void 0),t([i({type:Boolean,nonNullable:!0})],y.prototype,"legendEnabled",void 0),t([i({type:Boolean,json:{name:"visibility",write:!0}})],y.prototype,"visible",void 0),t([i({type:Number,json:{write:!0}})],y.prototype,"opacity",void 0),y=t([p("esri.layers.buildingSublayers.BuildingSublayer")],y);const oe=y,ae="esri.layers.buildingSublayers.BuildingComponentSublayer",tt=I.getLogger(ae),J=Re();let a=class extends Y.LoadableMixin(ee(oe)){constructor(e){super(e),this.type="building-component",this.nodePages=null,this.materialDefinitions=[],this.textureSetDefinitions=[],this.geometryDefinitions=[],this.indexInfo=null,this.serviceUpdateTimeStamp=null,this.store=null,this.attributeStorageInfo=[],this.fields=[],this.associatedLayer=null,this.outFields=null,this.listMode="show",this.renderer=null,this.definitionExpression=null,this.popupEnabled=!0,this.popupTemplate=null,this.layerType="3d-object"}get parsedUrl(){var e,r;return this.layer?{path:`${(e=this.layer.parsedUrl)==null?void 0:e.path}/sublayers/${this.id}`,query:(r=this.layer.parsedUrl)==null?void 0:r.query}:{path:""}}get fieldsIndex(){return new Me(this.fields)}readAssociatedLayer(e,r){const s=this.layer.associatedFeatureServiceItem,o=r.associatedLayerID;return s!=null&&typeof o=="number"?new se({portalItem:s,layerId:o}):null}get objectIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="oid")return e.name}return null}get displayField(){return this.associatedLayer!=null?this.associatedLayer.displayField:void 0}get apiKey(){return this.layer.apiKey}get fullExtent(){return this.layer.fullExtent}get spatialReference(){return this.layer.spatialReference}get version(){return this.layer.version}get elevationInfo(){return this.layer.elevationInfo}get minScale(){return this.layer.minScale}get maxScale(){return this.layer.maxScale}get effectiveScaleRange(){return this.layer.effectiveScaleRange}get defaultPopupTemplate(){return this.createPopupTemplate()}load(e){const r=e!=null?e.signal:null,s=this._fetchService(r).then(()=>{this.indexInfo=ke(this.parsedUrl.path,this.rootNode,this.nodePages,this.apiKey,tt,r)});return this.addResolvingPromise(s),Promise.resolve(this)}createPopupTemplate(e){return He(this,e)}async _fetchService(e){const r=(await te(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(r,{origin:"service",url:this.parsedUrl})}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){var o,n,c;const s=(n=(o=this.getFeatureType(r==null?void 0:r.feature))==null?void 0:o.domains)==null?void 0:n[e];return s&&s.type!=="inherited"?s:((c=this.getField(e))==null?void 0:c.domain)??null}getFeatureType(e){return e&&this.associatedLayer!=null?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer!=null?this.associatedLayer.types??[]:[]}get typeIdField(){return this.associatedLayer!=null?this.associatedLayer.typeIdField:null}get geometryType(){return this.layerType==="3d-object"?"mesh":"point"}get profile(){return this.layerType==="3d-object"?"mesh-pyramids":"points"}get capabilities(){const e=this.associatedLayer!=null&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:qe,{query:r,data:{supportsZ:s,supportsM:o,isVersioned:n}}=e;return{query:r,data:{supportsZ:s,supportsM:o,isVersioned:n}}}createQuery(){const e=new Ve;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,r){return this._getAssociatedLayerForQuery().then(s=>s.queryExtent(e||this.createQuery(),r))}queryFeatureCount(e,r){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatureCount(e||this.createQuery(),r))}queryFeatures(e,r){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatures(e||this.createQuery(),r)).then(s=>{if(s!=null&&s.features)for(const o of s.features)o.layer=this.layer,o.sourceLayer=this;return s})}queryObjectIds(e,r){return this._getAssociatedLayerForQuery().then(s=>s.queryObjectIds(e||this.createQuery(),r))}async queryCachedAttributes(e,r){const s=he(this.fieldsIndex,await Ze(this,ze(this)));return Ne(this.parsedUrl.path,this.attributeStorageInfo,e,r,s)}async queryCachedFeature(e,r){const s=await this.queryCachedAttributes(e,[r]);if(!s||s.length===0)throw new x("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new me;return o.attributes=s[0],o.layer=this,o.sourceLayer=this,o}getFieldUsageInfo(e){return this.fieldsIndex.has(e)?{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}:{supportsLabelingInfo:!1,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:this.associatedLayer!=null}}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),this.associatedLayer==null)throw new x("buildingscenelayer:query-not-available","BuildingSceneLayer component layer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new x("buildingscenelayer:query-not-available","BuildingSceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}};t([i({readOnly:!0})],a.prototype,"parsedUrl",null),t([i({type:Qe,readOnly:!0})],a.prototype,"nodePages",void 0),t([i({type:[Ue],readOnly:!0})],a.prototype,"materialDefinitions",void 0),t([i({type:[De],readOnly:!0})],a.prototype,"textureSetDefinitions",void 0),t([i({type:[Ke],readOnly:!0})],a.prototype,"geometryDefinitions",void 0),t([i({readOnly:!0})],a.prototype,"serviceUpdateTimeStamp",void 0),t([i({readOnly:!0})],a.prototype,"store",void 0),t([i({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],a.prototype,"rootNode",void 0),t([i({readOnly:!0})],a.prototype,"attributeStorageInfo",void 0),t([i(J.fields)],a.prototype,"fields",void 0),t([i({readOnly:!0})],a.prototype,"fieldsIndex",null),t([i({readOnly:!0,type:se})],a.prototype,"associatedLayer",void 0),t([F("service","associatedLayer",["associatedLayerID"])],a.prototype,"readAssociatedLayer",null),t([i(J.outFields)],a.prototype,"outFields",void 0),t([i({type:String,readOnly:!0})],a.prototype,"objectIdField",null),t([i({readOnly:!0,type:String,json:{read:!1}})],a.prototype,"displayField",null),t([i({readOnly:!0,type:String})],a.prototype,"apiKey",null),t([i({readOnly:!0,type:fe})],a.prototype,"fullExtent",null),t([i({readOnly:!0,type:re})],a.prototype,"spatialReference",null),t([i({readOnly:!0})],a.prototype,"version",null),t([i({readOnly:!0,type:Je})],a.prototype,"elevationInfo",null),t([i({readOnly:!0,type:Number})],a.prototype,"minScale",null),t([i({readOnly:!0,type:Number})],a.prototype,"maxScale",null),t([i({readOnly:!0,type:Number})],a.prototype,"effectiveScaleRange",null),t([i({type:["hide","show"],json:{write:!0}})],a.prototype,"listMode",void 0),t([i({types:Be,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],a.prototype,"renderer",void 0),t([i({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],a.prototype,"definitionExpression",void 0),t([i(Ee)],a.prototype,"popupEnabled",void 0),t([i({type:ge,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],a.prototype,"popupTemplate",void 0),t([i({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],a.prototype,"normalReferenceFrame",void 0),t([i({readOnly:!0,json:{read:!1}})],a.prototype,"defaultPopupTemplate",null),t([i()],a.prototype,"types",null),t([i()],a.prototype,"typeIdField",null),t([i({json:{write:!1}}),ie(new ve({"3DObject":"3d-object",Point:"point"}))],a.prototype,"layerType",void 0),t([i()],a.prototype,"geometryType",null),t([i()],a.prototype,"profile",null),t([i({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",null),a=t([p(ae)],a);const N=a;var P;const Z={type:b,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:ne}}},read:!1}};function ne(e,r,s){if(e&&Array.isArray(e))return new b(e.map(o=>{const n=rt(o);if(n){const c=new n;return c.read(o,s),c}return s&&s.messages&&o&&s.messages.push(new be("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(o.type||"unknown")+"' are not supported",{definition:o,context:s})),null}))}let m=P=class extends oe{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return we(this,e=>P.forEachSublayer(this.sublayers,r=>{r.type!=="building-group"&&e(r)}))}};function rt(e){return e.layerType==="group"?m:N}t([i({type:["hide","show","hide-children"],json:{write:!0}})],m.prototype,"listMode",void 0),t([i(Z)],m.prototype,"sublayers",void 0),m=P=t([p("esri.layers.buildingSublayers.BuildingGroupSublayer")],m),function(e){function r(s,o){s.forEach(n=>{o(n),n.type==="building-group"&&r(n.sublayers,o)})}e.sublayersProperty=Z,e.readSublayers=ne,e.forEachSublayer=r}(m||(m={}));const g=m;let j=class extends f{constructor(){super(...arguments),this.type=null}};t([i({type:String,readOnly:!0,json:{write:!0}})],j.prototype,"type",void 0),j=t([p("esri.layers.support.BuildingFilterAuthoringInfo")],j);const le=j;var R;let w=R=class extends f{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new R({filterType:this.filterType,filterValues:u(this.filterValues)})}};t([i({type:String,json:{write:!0}})],w.prototype,"filterType",void 0),t([i({type:[String],json:{write:!0}})],w.prototype,"filterValues",void 0),w=R=t([p("esri.layers.support.BuildingFilterAuthoringInfoType")],w);const it=w;var M;const st=b.ofType(it);let L=M=class extends f{clone(){return new M({filterTypes:u(this.filterTypes)})}};t([i({type:st,json:{write:!0}})],L.prototype,"filterTypes",void 0),L=M=t([p("esri.layers.support.BuildingFilterAuthoringInfoBlock")],L);const ot=L;var k;const at=b.ofType(ot);let S=k=class extends le{constructor(){super(...arguments),this.type="checkbox"}clone(){return new k({filterBlocks:u(this.filterBlocks)})}};t([i({type:["checkbox"]})],S.prototype,"type",void 0),t([i({type:at,json:{write:!0}})],S.prototype,"filterBlocks",void 0),S=k=t([p("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],S);const z=S;let T=class extends f{};t([i({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=t([p("esri.layers.support.BuildingFilterMode")],T);const A=T;var C;let B=C=class extends A{constructor(){super(...arguments),this.type="solid"}clone(){return new C}};t([i({type:["solid"],readOnly:!0,json:{write:!0}})],B.prototype,"type",void 0),B=C=t([p("esri.layers.support.BuildingFilterModeSolid")],B);const Q=B;var U;let $=U=class extends A{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new U({edges:u(this.edges)})}};t([ie({wireFrame:"wire-frame"})],$.prototype,"type",void 0),t([i(Se)],$.prototype,"edges",void 0),$=U=t([p("esri.layers.support.BuildingFilterModeWireFrame")],$);const G=$;var D;let E=D=class extends A{constructor(){super(...arguments),this.type="x-ray"}clone(){return new D}};t([i({type:["x-ray"],readOnly:!0,json:{write:!0}})],E.prototype,"type",void 0),E=D=t([p("esri.layers.support.BuildingFilterModeXRay")],E);const X=E;var K;const nt={nonNullable:!0,types:{key:"type",base:A,typeMap:{solid:Q,"wire-frame":G,"x-ray":X}},json:{read:e=>{switch(e&&e.type){case"solid":return Q.fromJSON(e);case"wireFrame":return G.fromJSON(e);case"x-ray":return X.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let v=K=class extends f{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new Q,this.title=""}clone(){return new K({filterExpression:this.filterExpression,filterMode:u(this.filterMode),title:this.title})}};t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],v.prototype,"filterExpression",void 0),t([i(nt)],v.prototype,"filterMode",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],v.prototype,"title",void 0),v=K=t([p("esri.layers.support.BuildingFilterBlock")],v);const lt=v;var V;const pt=b.ofType(lt);let h=V=class extends f{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=$e(),this.name=null}clone(){return new V({description:this.description,filterBlocks:u(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:u(this.filterAuthoringInfo)})}};t([i({type:String,json:{write:!0}})],h.prototype,"description",void 0),t([i({type:pt,json:{write:{enabled:!0,isRequired:!0}}})],h.prototype,"filterBlocks",void 0),t([i({types:{key:"type",base:le,typeMap:{checkbox:z}},json:{read:e=>(e&&e.type)==="checkbox"?z.fromJSON(e):null,write:!0}})],h.prototype,"filterAuthoringInfo",void 0),t([i({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],h.prototype,"id",void 0),t([i({type:String,json:{write:{enabled:!0,isRequired:!0}}})],h.prototype,"name",void 0),h=V=t([p("esri.layers.support.BuildingFilter")],h);const yt=h;let d=class extends f{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};t([i({type:String})],d.prototype,"fieldName",void 0),t([i({type:String})],d.prototype,"modelName",void 0),t([i({type:String})],d.prototype,"label",void 0),t([i({type:Number})],d.prototype,"min",void 0),t([i({type:Number})],d.prototype,"max",void 0),t([i({json:{read:e=>Array.isArray(e)&&(e.every(r=>typeof r=="string")||e.every(r=>typeof r=="number"))?e.slice():null}})],d.prototype,"mostFrequentValues",void 0),t([i({type:[Number]})],d.prototype,"subLayerIds",void 0),d=t([p("esri.layers.support.BuildingFieldStatistics")],d);let O=class extends Y.LoadableMixin(ee(f)){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||this.loadStatus==="loading"?this._get("fields"):(I.getLogger(this.declaredClass).error("building summary statistics are not loaded"),null)}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this._fetchService(r)),Promise.resolve(this)}async _fetchService(e){const r=(await te(this.url,{query:{f:"json"},responseType:"json",signal:e})).data;this.read(r,{origin:"service"})}};t([i({constructOnly:!0,type:String})],O.prototype,"url",void 0),t([i({readOnly:!0,type:[d],json:{read:{source:"summary"}}})],O.prototype,"fields",null),O=t([p("esri.layers.support.BuildingSummaryStatistics")],O);const pe=O,ye=b.ofType(yt),de=u(g.sublayersProperty);var W;const _=(W=de.json)==null?void 0:W.origins;_&&(_["web-scene"]={type:[N],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},_["portal-item"]={type:[N],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}});let l=class extends Ce(Xe(We(Ye(et(Te(Ge(je))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new Oe({getCollections:()=>[this.sublayers],getChildrenFunction:r=>r.type==="building-group"?r.sublayers:null}),this.sublayers=null,this._sublayerOverrides=null,this.filters=new ye,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.type="building-scene"}normalizeCtorArgs(e){return typeof e=="string"?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,r,s){const o=g.readSublayers(e,r,s);return g.forEachSublayer(o,n=>n.layer=this),this._sublayerOverrides&&(this.applySublayerOverrides(o,this._sublayerOverrides),this._sublayerOverrides=null),o}applySublayerOverrides(e,{overrides:r,context:s}){g.forEachSublayer(e,o=>o.read(r.get(o.id),s))}readSublayerOverrides(e,r){var o;const s=new Map;for(const n of e)n!=null&&typeof n=="object"&&typeof n.id=="number"?s.set(n.id,n):(o=r.messages)==null||o.push(new x("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:n}));return{overrides:s,context:r}}writeSublayerOverrides(e,r,s){const o=[];g.forEachSublayer(this.sublayers,n=>{const c=n.write({},s);Object.keys(c).length>1&&o.push(c)}),o.length>0&&(r.sublayers=o)}writeUnappliedOverrides(e,r){r.sublayers=[],e.overrides.forEach(s=>{r.sublayers.push(u(s))})}write(e,r){return e=super.write(e,r),!r||r.origin!=="web-scene"&&r.origin!=="portal-item"||(this.sublayers?this.writeSublayerOverrides(this.sublayers,e,r):this._sublayerOverrides&&this.writeUnappliedOverrides(this._sublayerOverrides,e)),e}read(e,r){if(super.read(e,r),r&&(r.origin==="web-scene"||r.origin==="portal-item")&&e!=null&&Array.isArray(e.sublayers)){const s=this.readSublayerOverrides(e.sublayers,r);this.sublayers?this.applySublayerOverrides(this.sublayers,s):this._sublayerOverrides=s}}readSummaryStatistics(e,r){var s;if(typeof r.statisticsHRef=="string"){const o=Ie((s=this.parsedUrl)==null?void 0:s.path,r.statisticsHRef);return new pe({url:o})}return null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}load(e){const r=e!=null?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(xe).then(()=>this._fetchService(r)).then(()=>this._fetchAssociatedFeatureService(r));return this.addResolvingPromise(s),Promise.resolve(this)}loadAll(){return Fe(this,e=>{g.forEachSublayer(this.sublayers,r=>{r.type!=="building-group"&&e(r)}),this.summaryStatistics&&e(this.summaryStatistics)})}async saveAs(e,r){return this._debouncedSaveOperations(H.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(H.SAVE,e)}validateLayer(e){if(!e.layerType||e.layerType!=="Building")throw new x("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}_validateElevationInfo(){const e=this.elevationInfo;e&&(e.mode!=="absolute-height"&&I.getLogger(this.declaredClass).warn(".elevationInfo=","Building scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&I.getLogger(this.declaredClass).warn(".elevationInfo=","Building scene layers do not support featureExpressionInfo"))}async _fetchAssociatedFeatureService(e){const r=new Pe(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedFeatureServiceItem=await r.fetchPortalItem()}catch(s){I.getLogger(this.declaredClass).warn("Associated feature service item could not be loaded",s)}}};t([i({type:["BuildingSceneLayer"]})],l.prototype,"operationalLayerType",void 0),t([i({readOnly:!0})],l.prototype,"allSublayers",void 0),t([i(de)],l.prototype,"sublayers",void 0),t([F("service","sublayers")],l.prototype,"readSublayers",null),t([i({type:ye,nonNullable:!0,json:{write:!0}})],l.prototype,"filters",void 0),t([i({type:String,json:{write:!0}})],l.prototype,"activeFilterId",void 0),t([i({readOnly:!0,type:pe})],l.prototype,"summaryStatistics",void 0),t([F("summaryStatistics",["statisticsHRef"])],l.prototype,"readSummaryStatistics",null),t([i({type:[String],json:{read:!1}})],l.prototype,"outFields",void 0),t([i(Ae)],l.prototype,"fullExtent",void 0),t([i({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),t([i(q(re))],l.prototype,"spatialReference",void 0),t([i(_e)],l.prototype,"elevationInfo",null),t([i({json:{read:!1},readOnly:!0})],l.prototype,"type",void 0),t([i()],l.prototype,"associatedFeatureServiceItem",void 0),l=t([p("esri.layers.BuildingSceneLayer")],l);const Mr=l;export{Mr as default};
