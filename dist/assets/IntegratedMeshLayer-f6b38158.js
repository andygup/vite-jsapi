import{af as t,ag as a,cf as S,bG as T,aj as f,bD as _,fA as L,ep as x,i4 as N,cI as b,hV as I,V as R,dC as M,L as j,z as A,ao as D,dD as J,$ as V,a as d,bF as $,aZ as K,a$ as U}from"./index-989909ce.js";import{O as P}from"./MultiOriginJSONSupport-35c06c89.js";import{g as m}from"./persistable-dccef0a2.js";import{i as G}from"./APIKeyMixin-a5f40f2f.js";import{l as z}from"./ArcGISService-26e21a6b.js";import{c as C}from"./OperationalLayer-2d14fe8e.js";import{j as E}from"./PortalLayer-61da00e6.js";import{t as F}from"./ScaleRangeLayer-ca70e7f0.js";import{N as k,K as v}from"./SceneService-3dcb9812.js";import{d as q}from"./commonProperties-33a052da.js";import{s as Z,l as B,u as H,m as Q}from"./I3SLayerDefinitions-4b092d67.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-7687037d.js";import"./portalItemUtils-f1e38b30.js";import"./originUtils-1469eeaf.js";import"./resourceUtils-4695f673.js";import"./ElevationInfo-4676a5da.js";import"./lengthUtils-32b5157c.js";var h;let n=h=class extends _{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,i,o,r){if(r.layer&&r.layer.spatialReference&&!r.layer.spatialReference.equals(this.geometry.spatialReference)){if(!L(e.spatialReference,r.layer.spatialReference))return void(r&&r.messages&&r.messages.push(new x("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:r.layer.spatialReference,context:r})));const l=new S;N(e,l,r.layer.spatialReference),i[o]=l.toJSON(r)}else i[o]=e.toJSON(r);delete i[o].spatialReference}clone(){return new h({geometry:b(this.geometry),type:this.type})}};t([a({type:S}),m()],n.prototype,"geometry",void 0),t([T(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),t([a({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=h=t([f("esri.layers.support.SceneModification")],n);const c=n;var p;let y=p=class extends I(R.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(i=>i.toJSON(e)).filter(i=>!!i.geometry)}static fromJSON(e,i){const o=new p;for(const r of e)o.add(c.fromJSON(r,i));return o}static async fromUrl(e,i,o){const r={url:M(e),origin:"service"},l=await j(e,{responseType:"json",signal:o==null?void 0:o.signal}),O=i.toJSON(),u=[];for(const g of l.data)u.push(c.fromJSON({...g,geometry:{...g.geometry,spatialReference:O}},r));return new p({url:e,items:u})}};t([a({type:String})],y.prototype,"url",void 0),y=p=t([f("esri.layers.support.SceneModifications")],y);const w=y;let s=class extends k(z(C(E(F(P(G(U))))))){constructor(...e){super(...e),this._handles=new A,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(D(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,K))}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}readModifications(e,i,o){this._modificationsSource={url:J(e,o),context:o}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){V(o)}if(await this._fetchService(i),this._modificationsSource!=null){const o=await w.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,i){return this._debouncedSaveOperations(v.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(v.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};t([a({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),t([a({type:["show","hide"]})],s.prototype,"listMode",void 0),t([a({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),t([a({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),t([a({type:Z,readOnly:!0})],s.prototype,"nodePages",void 0),t([a({type:[B],readOnly:!0})],s.prototype,"materialDefinitions",void 0),t([a({type:[H],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),t([a({type:[Q],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),t([a({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),t([a({type:w}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),t([$(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),t([a(q)],s.prototype,"elevationInfo",void 0),t([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=t([f("esri.layers.IntegratedMeshLayer")],s);const fe=s;export{fe as default};
