import{e as i,y as o,a as s}from"./index-ebffac9a.js";import{z as a}from"./DynamicLayerView3D-abe3f021.js";import{b as m}from"./commonProperties-50fc1190.js";import{m as n}from"./ExportImageParameters-0472e4de.js";import{U as l}from"./MapServiceLayerViewHelper-e41f6e30.js";import{r as h}from"./drapedUtils-f48ca8e6.js";import"./LayerView3D-8a020d29.js";import"./projectExtentUtils-314a618e.js";import"./ImageMaterial-40ea376b.js";import"./LayerView-83293bbb.js";import"./RefreshableLayerView-78616cab.js";import"./ElevationInfo-b2766669.js";import"./sql-2f93e553.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-4168d3e2.js";import"./normalizeUtils-d72d23be.js";import"./normalizeUtilsCommon-bca31cde.js";import"./popupUtils-8718a4ab.js";const u=t=>{let e=class extends t{initialize(){this.exportImageParameters=new n({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return i([o()],e.prototype,"exportImageParameters",void 0),i([o({readOnly:!0})],e.prototype,"floors",null),i([o({readOnly:!0})],e.prototype,"exportImageVersion",null),i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"suspended",void 0),i([o(m)],e.prototype,"timeExtent",void 0),e=i([s("esri.views.layers.MapImageLayerView")],e),e};let p=class extends u(a){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this.updatingHandles.add(()=>this.exportImageVersion,()=>this.updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new l({createFetchPopupFeaturesQueryGeometry:(t,e)=>h(t,e,this.view),layerView:this,updatingHandles:this.updatingHandles})}destroy(){var t;(t=this._popupHighlightHelper)==null||t.destroy()}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}getFetchOptions(){return{timeExtent:this.timeExtent}}};p=i([s("esri.views.3d.layers.MapImageLayerView3D")],p);const D=p;export{D as default};
