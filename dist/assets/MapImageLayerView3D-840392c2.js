import{e as i,y as o,a as s}from"./index-d29f6b97.js";import{z as a}from"./DynamicLayerView3D-49117113.js";import{b as m}from"./commonProperties-4511a72e.js";import{m as n}from"./ExportImageParameters-a9b99bad.js";import{U as l}from"./MapServiceLayerViewHelper-fc30f6cf.js";import{r as h}from"./drapedUtils-9ea64187.js";import"./LayerView3D-93dbb0dd.js";import"./projectExtentUtils-7b3ec1cc.js";import"./ImageMaterial-be81a34f.js";import"./LayerView-923813e2.js";import"./RefreshableLayerView-a8bd5216.js";import"./ElevationInfo-568c6f07.js";import"./sql-6b2d38b4.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-3b57766e.js";import"./normalizeUtils-4068a3de.js";import"./normalizeUtilsCommon-6017271d.js";import"./popupUtils-af5ad903.js";const u=t=>{let e=class extends t{initialize(){this.exportImageParameters=new n({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return i([o()],e.prototype,"exportImageParameters",void 0),i([o({readOnly:!0})],e.prototype,"floors",null),i([o({readOnly:!0})],e.prototype,"exportImageVersion",null),i([o()],e.prototype,"layer",void 0),i([o()],e.prototype,"suspended",void 0),i([o(m)],e.prototype,"timeExtent",void 0),e=i([s("esri.views.layers.MapImageLayerView")],e),e};let p=class extends u(a){constructor(){super(...arguments),this.type="map-image-3d"}initialize(){this.updatingHandles.add(()=>this.exportImageVersion,()=>this.updatingHandles.addPromise(this.refreshDebounced())),this._popupHighlightHelper=new l({createFetchPopupFeaturesQueryGeometry:(t,e)=>h(t,e,this.view),layerView:this,updatingHandles:this.updatingHandles})}destroy(){var t;(t=this._popupHighlightHelper)==null||t.destroy()}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}getFetchOptions(){return{timeExtent:this.timeExtent}}};p=i([s("esri.views.3d.layers.MapImageLayerView3D")],p);const D=p;export{D as default};
