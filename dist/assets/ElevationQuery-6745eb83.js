import{J as N,K as d,R as E,P as R,Q as z,S as j,T as $,W as q,X as _,Y as b,G as Q,Z as P,$ as U,a0 as W,a1 as g,a2 as H,a3 as L,a4 as O}from"./index-ebffac9a.js";class V{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const s=e.extent;this._samplerData=new N(t,s)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}sample(e,t){if(this._samplerData==null)return;const{safeWidth:s,data:i,dx:l,dy:n,y1:o,x0:a}=this._samplerData,{width:r,values:c,noDataValue:p}=i,h=k(n*(o-t),0,s),u=k(l*(e-a),0,s),I=Math.floor(h),A=Math.floor(u),v=I*r+A,D=v+r,x=c[v],w=c[D],F=c[v+1],C=c[D+1];if(x!==p&&w!==p&&F!==p&&C!==p){const M=u-A,S=x+(F-x)*M;return S+(w+(C-w)*M-S)*(h-I)}}}function k(m,e,t){return m<e?e:m>t?t:m}class Y{async queryAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const i=y.fromGeometry(t);let l=!1;s&&s.returnSampleInfo||(l=!0);const n={...T,...s,returnSampleInfo:!0},o=await this.query(e[e.length-1],i,n),a=await this._queryAllContinue(e,o,n);return a.geometry=a.geometry.export(),l&&delete a.sampleInfo,a}async query(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const i={...T,...s},l=new J(e,t.spatialReference,i),n=i.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,t,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const i={...T,...s};return this._createSampler(e,t,i)}async createSamplerAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(n=>n.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const i={...T,...s,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],t,i);return this._createSamplerAllContinue(e,t,l,i)}async _createSampler(e,t,s,i){const l=s.signal;await e.load({signal:l});const n=t.spatialReference,o=e.tileInfo.spatialReference;n.equals(o)||(await E([{source:n,dest:o}],{signal:l}),t=R(t,o));const a=new K(e,t,s,i);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new z(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,s,i){if(e.pop(),!e.length)return s;const l=s.samplers.map(r=>j(r.extent)),n=await this._createSampler(e[e.length-1],t,i,l);if(n.samplers.length===0)return s;const o=s.samplers.concat(n.samplers),a=new z(o,i.noDataValue);return this._createSamplerAllContinue(e,t,a,i)}async _queryAllContinue(e,t,s){const i=e.pop(),l=t.geometry.coordinates,n=t.sampleInfo;$(n);const o=[],a=[];for(let h=0;h<l.length;h++){const u=n[h];u.demResolution>=0?u.source||(u.source=i):e.length&&(o.push(l[h]),a.push(h))}if(!e.length||o.length===0)return t;const r=t.geometry.clone(o),c=await this.query(e[e.length-1],r,s),p=c.sampleInfo;if(!p)throw new Error("no sampleInfo");return a.forEach((h,u)=>{l[h].z=c.geometry.coordinates[u].z,n[h].demResolution=p[u].demResolution}),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);$(s);const i={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(l=>{l.tile=null,l.elevationTile=null}),i}async _createGeometryDescriptor(e,t,s){let i;const l=e.layer.tileInfo.spatialReference;if(t instanceof y?i=await t.project(l,s):(await E([{source:t.spatialReference,dest:l}],{signal:s}),i=R(t,l)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=y.fromGeometry(i)}async _selectTiles(e,t){e.type==="geometry"&&this._preselectOutsideLayerExtent(e);const s=e.options.demResolution;if(typeof s=="number")this._selectTilesClosestResolution(e,s);else if(s==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(s!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(e.layer.fullExtent==null)return;const t=new V(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const s=e.layer.fullExtent;e.geometry.coordinates.forEach(i=>{const l=i.x,n=i.y;(l<s.xmin||l>s.xmax||n<s.ymin||n>s.ymax)&&(i.elevationTile=t)})}_selectTilesClosestResolution(e,t){const s=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(s,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const s=t/q(e.spatialReference);let i=e.lods[0],l=0;for(let n=1;n<e.lods.length;n++){const o=e.lods[n];Math.abs(o.resolution-s)<Math.abs(i.resolution-s)&&(i=o,l=n)}return l}async _selectTilesFinestContiguous(e,t){const s=G(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,s){const i=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=i.tilemapCache,n=e.getTilesToFetch();try{if(l)await _(Promise.all(n.map(o=>l.fetchAvailability(o.level,o.row,o.col,{signal:s}))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(o){b(o),await this._selectTilesFinestContiguousAt(e,t-1,s)}}async _populateElevationTiles(e,t){const s=e.getTilesToFetch(),i={},l=e.options.cache,n=e.options.noDataValue,o=s.map(async a=>{if(a.id==null)return;const r=`${e.layer.uid}:${a.id}:${n}`,c=l!=null?l.get(r):null,p=c??await e.layer.fetchTile(a.level,a.row,a.col,{noDataValue:n,signal:t});l!=null&&l.put(r,p),i[a.id]=new V(a,p)});await _(Q(o),t),e.populateElevationTiles(i)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const s=e.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(e,t);const i=e.getTilesToFetch(),l={},n=i.map(async o=>{const a=new P(null,0,0,0,U()),r=await W(s.fetchAvailabilityUpsample(o.level,o.row,o.col,a,{signal:t}));r.ok!==!1?o.id!=null&&(l[o.id]=a):b(r.error)});await _(Promise.all(n),t),e.remapTiles(l)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let s=0;const i={},l=a=>{a.id!=null&&(a.id in i?i[a.id]++:(i[a.id]=1,s++))},n=a=>{if(a.id==null)return;const r=i[a.id];r===1?(delete i[a.id],s--):i[a.id]=r-1};e.forEachTileToFetch(l,n);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch(a=>{s<=e.options.maximumAutoTileRequests||(n(a),t.upsampleTile(a)&&(o=!0),l(a))},n),o););}_selectTilesAutoFinest(e){const t=G(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const s=e.layer.tileInfo;await this._populateElevationTiles(e,t);let i=!1;e.forEachTileToFetch((l,n)=>{s.upsampleTile(l)?i=!0:n()}),i&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const s=t.elevationTile;let i=e.options.noDataValue;if(s){const l=s.sample(t.x,t.y);l!=null?i=l:t.elevationTile=null}t.z=i})}_extractSampleInfo(e){const t=e.layer.tileInfo,s=q(t.spatialReference);return e.geometry.coordinates.map(i=>{let l=-1;return i.elevationTile&&i.elevationTile!==e.outsideExtentTile&&(l=t.lodAt(i.elevationTile.tile.level).resolution*s),{demResolution:l}})}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(s=>s.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await E([{source:this.spatialReference,dest:e}],{signal:t});const s=new g({spatialReference:this.spatialReference,points:this.coordinates.map(o=>[o.x,o.y])}),i=R(s,e);if(!i)return null;const l=this.coordinates.map((o,a)=>{const r=o.clone(),c=i.points[a];return r.x=c[0],r.y=c[1],r}),n=this.clone(l);return n.spatialReference=e,n}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map(s=>s.clone()),t._exporter=(s,i)=>{const l=e.clone(s);return l.spatialReference=i,l};else switch(e.type){case"point":{const s=e,{hasZ:i,hasM:l}=s;t.coordinates=i&&l?[new f(s.x,s.y,s.z,s.m)]:i?[new f(s.x,s.y,s.z)]:l?[new f(s.x,s.y,null,s.m)]:[new f(s.x,s.y)],t._exporter=(n,o)=>e.hasM?new L(n[0].x,n[0].y,n[0].z,n[0].m,o):new L(n[0].x,n[0].y,n[0].z,o);break}case"multipoint":{const s=e,{hasZ:i,hasM:l}=s;t.coordinates=i&&l?s.points.map(n=>new f(n[0],n[1],n[2],n[3])):i?s.points.map(n=>new f(n[0],n[1],n[2])):l?s.points.map(n=>new f(n[0],n[1],null,n[2])):s.points.map(n=>new f(n[0],n[1])),t._exporter=(n,o)=>e.hasM?new g({points:n.map(a=>[a.x,a.y,a.z,a.m]),hasZ:!0,hasM:!0,spatiaReference:o}):new g(n.map(a=>[a.x,a.y,a.z]),o);break}case"polyline":{const s=e,i=[],l=[],{hasZ:n,hasM:o}=e;let a=0;for(const r of s.paths)if(l.push([a,a+r.length]),a+=r.length,n&&o)for(const c of r)i.push(new f(c[0],c[1],c[2],c[3]));else if(n)for(const c of r)i.push(new f(c[0],c[1],c[2]));else if(o)for(const c of r)i.push(new f(c[0],c[1],null,c[2]));else for(const c of r)i.push(new f(c[0],c[1]));t.coordinates=i,t._exporter=(r,c)=>{const p=e.hasM?r.map(u=>[u.x,u.y,u.z,u.m]):r.map(u=>[u.x,u.y,u.z]),h=l.map(u=>p.slice(u[0],u[1]));return new H({paths:h,hasM:e.hasM,hasZ:!0,spatialReference:c})};break}}return t}}class f{constructor(e,t,s=null,i=null,l=null,n=null){this.x=e,this.y=t,this.z=s,this.m=i,this.tile=l,this.elevationTile=n}clone(){return new f(this.x,this.y,this.z,this.m)}}class Z{constructor(e,t){this.layer=e,this.options=t}}class J extends Z{constructor(e,t,s){super(e,s),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const t=this.layer.tileInfo,s=t.lods[e].level;this.geometry.coordinates.forEach(i=>i.tile=t.tileAt(s,i.x,i.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const s of this.geometry.coordinates)!s.elevationTile&&((t=s.tile)!=null&&t.id)&&(s.elevationTile=e[s.tile.id])}remapTiles(e){var t;for(const s of this.geometry.coordinates){const i=(t=s.tile)==null?void 0:t.id;s.tile=i?e[i]:null}}getTilesToFetch(){var s;const e={},t=[];for(const i of this.geometry.coordinates){const l=i.tile;if(!l)continue;const n=(s=i.tile)==null?void 0:s.id;i.elevationTile||!n||e[n]||(e[n]=l,t.push(l))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class K extends Z{constructor(e,t,s,i){super(e,s),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=i}selectTilesAtLOD(e,t){const s=this._maximumLodForRequests(t),i=Math.min(s,e);i<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(i)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const s=this.extent;if(s==null)return-1;for(let i=t.lods.length-1;i>=0;i--){const l=t.lods[i],n=l.resolution*t.size[0],o=l.resolution*t.size[1];if(Math.ceil(s.width/n)*Math.ceil(s.height/o)<=e)return i}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const s=t.id&&e[t.id];s&&(this._fetchedCandidates.add(t),this.elevationTiles.push(s))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const s=this._candidateTiles;this._candidateTiles=[],s.forEach(i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let l=!1;e(i,()=>l=!0),l?t&&t(i):this._candidateTiles.push(i)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const s={},i=[];for(const n of e){const o=n.id;o&&!s[o]?(s[o]=n,i.push(n)):t&&t(n)}const l=i.sort((n,o)=>n.level-o.level);return l.filter((n,o)=>{for(let a=0;a<o;a++){const r=l[a].extent;if(r&&n.extent&&O(r,n.extent))return t&&t(n),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const s=this.layer.tileInfo,i=s.lods[e],l=s.tileAt(i.level,t.xmin,t.ymin),n=l.extent;if(n==null)return;const o=i.resolution*s.size[0],a=i.resolution*s.size[1],r=Math.ceil((t.xmax-n[0])/o),c=Math.ceil((t.ymax-n[1])/a);for(let p=0;p<c;p++)for(let h=0;h<r;h++){const u=new P(null,l.level,l.row-p,l.col+h);s.updateTileInfo(u),this._tileIsMasked(u)||this._candidateTiles.push(u)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&O(t,e.extent))}}function G(m,e=0){let t=m.lods.length-1;if(e>0){const s=e/q(m.spatialReference),i=m.lods.findIndex(l=>l.resolution<s);i===0?t=0:i>0&&(t=i-1)}return t}const T={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{Y as ElevationQuery,y as GeometryDescriptor,G as getFinestLodIndex};
