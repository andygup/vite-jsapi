import{N as O,c as R,p as G,cY as w,cZ as v,q as H,b as F,c_ as z}from"./index-6eb28d6b.js";import{d as L,u as N,b as M}from"./Texture-f1cb91e8.js";import{A as l,F as y,V as A,C as S,f as d,P as c,B as u,G as f,X as T,U as V,t as U,n as m,M as x}from"./enums-b14466b3.js";const b=O.getLogger("esri.views.webgl.BufferObject");let X=class B{static createIndex(e,t,i){return new B(e,l.ELEMENT_ARRAY_BUFFER,t,i)}static createVertex(e,t,i){return new B(e,l.ARRAY_BUFFER,t,i)}static createUniform(e,t,i){if(e.type!==R.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new B(e,l.UNIFORM_BUFFER,t,i)}static createPixelPack(e,t=y.STREAM_READ,i){if(e.type!==R.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const s=new B(e,l.PIXEL_PACK_BUFFER,t);return i&&s.setSize(i),s}static createPixelUnpack(e,t=y.STREAM_DRAW,i){if(e.type!==R.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new B(e,l.PIXEL_UNPACK_BUFFER,t,i)}constructor(e,t,i,s){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(A.BufferObject,this),this._glName=this._context.gl.createBuffer(),L(this._context.gl),s&&this.setData(s)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteLength(){return this.bufferType===l.ELEMENT_ARRAY_BUFFER?this._indexType===S.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===l.ELEMENT_ARRAY_BUFFER||this.bufferType===l.ARRAY_BUFFER}dispose(){var e;(e=this._context)!=null&&e.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(A.BufferObject,this),this._context=G(this._context)):this._glName&&b.warn("Leaked WebGL buffer object")}setSize(e,t=null){if(e<=0&&b.error("Buffer size needs to be positive!"),this.bufferType===l.ELEMENT_ARRAY_BUFFER&&t!=null)switch(this._indexType=t,t){case S.UNSIGNED_SHORT:e*=2;break;case S.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===l.ELEMENT_ARRAY_BUFFER&&(w(e)&&(t/=2,this._indexType=S.UNSIGNED_SHORT),v(e)&&(t/=4,this._indexType=S.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;t!=null?s.bufferData(this.bufferType,t,this.usage):s.bufferData(this.bufferType,e,this.usage),L(s),this._isVAOAware&&this._context.bindVAO(i)}setSubData(e,t,i,s){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.byteLength)&&b.error("offset is out of range!"),i>=s&&b.error("end must be bigger than start!"),(t+(s-i))*e.BYTES_PER_ELEMENT>this.byteLength&&b.error("An attempt to write beyond the end of the buffer!");const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const a=this._context.gl;if(this._context.type===R.WEBGL2)a.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,i,s-i);else{const o=i===0&&s===e.length?e:e.subarray(i,s);a.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,o)}L(a),this._isVAOAware&&this._context.bindVAO(n)}getSubData(e,t=0,i,s){if(this._context.type!==R.WEBGL2)return void b.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||s<0)return void b.error("Problem getting subdata: offset and length were less than zero!");const n=W(e)?e.BYTES_PER_ELEMENT:1;if(n*((i??0)+(s??0))>e.byteLength)return void b.error("Problem getting subdata: offset and length exceeded destination size!");t+n*(s??0)>this.byteLength&&b.warn("Potential problem getting subdata: requested data exceeds buffer size!");const a=this._context.gl;this._context.bindBuffer(this,l.COPY_READ_BUFFER),a.getBufferSubData(l.COPY_READ_BUFFER,t,e,i,s),this._context.unbindBuffer(l.COPY_READ_BUFFER)}async getSubDataAsync(e,t=0,i,s){this._context.type===R.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(e,t,i,s)):b.error("Get buffer subdata is supported in WebGL2 only!")}};function W(r){return H(r)}class Y{constructor(e,t){this._context=e,this._descriptor=t,this.type="renderbuffer",this._context.instanceCounter.increment(A.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:n,internalFormat:a,multisampled:o}=t;if(o){if(this._context.type!==R.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,a,s,n)}else i.renderbufferStorage(i.RENDERBUFFER,a,s,n)}get descriptor(){return this._descriptor}get samples(){const e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}resize(e,t){const i=this._descriptor;if(i.width===e&&i.height===t)return;i.width=e,i.height=t;const s=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?s.renderbufferStorageMultisample(s.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):s.renderbufferStorage(s.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(A.Renderbuffer,this),this._context=G(this._context))}}function te(r){const e=r.gl;switch(e.getError()){case e.NO_ERROR:return null;case e.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case e.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case e.INVALID_OPERATION:return"The specified command is not allowed for the current state";case e.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case e.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case e.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function j(r,e,t,i,s=0){const n=r.gl,a=r.capabilities.instancing;r.bindBuffer(t);for(const o of i){const h=e.get(o.name);h===void 0&&console.error(`There is no location for vertex attribute '${o.name}' defined.`);const E=s*o.stride;if(o.count<=4)n.vertexAttribPointer(h,o.count,o.type,o.normalized,o.stride,o.offset+E),n.enableVertexAttribArray(h),o.divisor>0&&a&&a.vertexAttribDivisor(h,o.divisor);else if(o.count===9)for(let _=0;_<3;_++)n.vertexAttribPointer(h+_,3,o.type,o.normalized,o.stride,o.offset+12*_+E),n.enableVertexAttribArray(h+_),o.divisor>0&&a&&a.vertexAttribDivisor(h+_,o.divisor);else if(o.count===16)for(let _=0;_<4;_++)n.vertexAttribPointer(h+_,4,o.type,o.normalized,o.stride,o.offset+16*_+E),n.enableVertexAttribArray(h+_),o.divisor>0&&a&&a.vertexAttribDivisor(h+_,o.divisor);else console.error("Unsupported vertex attribute element count: "+o.count)}}function $(r,e,t,i){const s=r.gl,n=r.capabilities.instancing;r.bindBuffer(t);for(const a of i){const o=e.get(a.name);if(a.count<=4)s.disableVertexAttribArray(o),a.divisor&&a.divisor>0&&n&&n.vertexAttribDivisor(o,0);else if(a.count===9)for(let h=0;h<3;h++)s.disableVertexAttribArray(o+h),a.divisor&&a.divisor>0&&n&&n.vertexAttribDivisor(o+h,0);else if(a.count===16)for(let h=0;h<4;h++)s.disableVertexAttribArray(o+h),a.divisor&&a.divisor>0&&n&&n.vertexAttribDivisor(o+h,0);else console.error("Unsupported vertex attribute element count: "+a.count)}r.unbindBuffer(l.ARRAY_BUFFER)}function k(r){switch(r){case f.ALPHA:case f.LUMINANCE:case f.RED:case f.RED_INTEGER:case c.R8:case c.R8I:case c.R8UI:case c.R8_SNORM:case u.STENCIL_INDEX8:return 1;case f.LUMINANCE_ALPHA:case f.RG:case f.RG_INTEGER:case c.RGBA4:case c.R16F:case c.R16I:case c.R16UI:case c.RG8:case c.RG8I:case c.RG8UI:case c.RG8_SNORM:case c.RGB565:case c.RGB5_A1:case u.DEPTH_COMPONENT16:return 2;case f.DEPTH_COMPONENT:case f.RGB:case f.RGB_INTEGER:case c.RGB8:case c.RGB8I:case c.RGB8UI:case c.RGB8_SNORM:case c.SRGB8:case u.DEPTH_COMPONENT24:return 3;case f.DEPTH_STENCIL:case f.DEPTH24_STENCIL8:case f.RGBA:case f.RGBA_INTEGER:case c.RGBA8:case c.R32F:case c.R11F_G11F_B10F:case c.RG16F:case c.R32I:case c.R32UI:case c.RG16I:case c.RG16UI:case c.RGBA8I:case c.RGBA8UI:case c.RGBA8_SNORM:case c.SRGB8_ALPHA8:case c.RGB9_E5:case c.RGB10_A2UI:case c.RGB10_A2:case u.DEPTH_STENCIL:case u.DEPTH_COMPONENT32F:case u.DEPTH24_STENCIL8:return 4;case u.DEPTH32F_STENCIL8:return 5;case c.RGB16F:case c.RGB16I:case c.RGB16UI:return 6;case c.RG32F:case c.RG32I:case c.RG32UI:case c.RGBA16F:case c.RGBA16I:case c.RGBA16UI:return 8;case c.RGB32F:case c.RGB32I:case c.RGB32UI:return 12;case c.RGBA32F:case c.RGBA32I:case c.RGBA32UI:return 16;case d.COMPRESSED_RGB_S3TC_DXT1_EXT:case d.COMPRESSED_RGBA_S3TC_DXT1_EXT:return .5;case d.COMPRESSED_RGBA_S3TC_DXT3_EXT:case d.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case d.COMPRESSED_R11_EAC:case d.COMPRESSED_SIGNED_R11_EAC:case d.COMPRESSED_RGB8_ETC2:case d.COMPRESSED_SRGB8_ETC2:case d.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case d.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return .5;case d.COMPRESSED_RG11_EAC:case d.COMPRESSED_SIGNED_RG11_EAC:case d.COMPRESSED_RGBA8_ETC2_EAC:case d.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function P(r){if(r==null)return 0;if("descriptor"in r)return r.glName?P(r.descriptor):0;const e=r.internalFormat||"pixelFormat"in r&&r.pixelFormat;if(!e)return 0;const t="hasMipmap"in r&&r.hasMipmap?1.3:1,i=r.width*r.height;return k(e)*i*t}const q=O.getLogger("esri.views.webgl.FramebufferObject");class p{constructor(e,t,i=null){this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthBuffer=null,this._stencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(A.FramebufferObject,this);const s=C(t)?t:new N(this._context,t);if(this._colorAttachments.set(T.COLOR_ATTACHMENT0,s),this._validateTextureDescriptor(s.descriptor),this._validateColorAttachmentPoint(T.COLOR_ATTACHMENT0),i!=null)if(Z(i))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=C(i)?i:new N(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const n=K(i)?i:new Y(this._context,i),a=n.descriptor;a.internalFormat===u.STENCIL_INDEX8?this._stencilBuffer=n:this._depthBuffer=n,this._validateRenderBufferDescriptor(a)}}dispose(){var t,i;if(this._colorAttachments.size===0&&!this._glName)return;const e=this._context.getBoundFramebufferObject();this._colorAttachments.forEach((s,n)=>{var a;return(a=this.detachColorTexture(n))==null?void 0:a.dispose()}),(t=this.detachDepthStencilBuffer())==null||t.dispose(),(i=this.detachDepthStencilTexture())==null||i.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(A.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(T.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthBuffer||this._stencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var t;const e=this._colorAttachments.get(T.COLOR_ATTACHMENT0);return((t=e==null?void 0:e.descriptor)==null?void 0:t.width)??0}get height(){var t;const e=this._colorAttachments.get(T.COLOR_ATTACHMENT0);return((t=e==null?void 0:e.descriptor)==null?void 0:t.height)??0}get gpuMemoryUsage(){return[...this._colorAttachments].reduce((e,[t,i])=>e+P(i),0)+P(this.depthStencilAttachment)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&C(t)?t:null}attachColorTexture(e,t=T.COLOR_ATTACHMENT0){var s;if(!e)return;this._validateColorAttachmentPoint(t);const i=e.descriptor;this._validateTextureDescriptor(i),(s=this.detachColorTexture(t))==null||s.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=T.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(t)return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e)),this._colorAttachments.delete(e),t}setColorTextureTarget(e,t=T.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(t);i&&this._framebufferTexture2D(i.glName,t,e)}attachDepthStencil(e){if(e)switch(e.type){case"texture":return this._attachDepthStencilTexture(e);case"renderbuffer":return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){var i;if(e==null)return;const t=e.descriptor;t.pixelFormat!==f.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==V.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,U)),(i=this._depthStencilTexture)==null||i.dispose(),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;return e&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,U)),this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){var i;if(e==null)return;const t=e.descriptor;if(t.internalFormat!==u.DEPTH_STENCIL&&t.internalFormat!==u.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),this._validateRenderBufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const s=this._context.gl,n=this._getGLAttachmentPoint(t);s.framebufferRenderbuffer(m.FRAMEBUFFER,n,s.RENDERBUFFER,e.glName)}(i=this._depthBuffer)==null||i.dispose(),this._depthBuffer=e}detachDepthStencilBuffer(){const e=this._depthBuffer;if(e&&this._initialized){this._context.bindFramebuffer(this);const t=this._context.gl,i=this._getGLAttachmentPoint(e.descriptor);t.framebufferRenderbuffer(m.FRAMEBUFFER,i,t.RENDERBUFFER,null),e.dispose()}return this._depthBuffer=null,e}copyToTexture(e,t,i,s,n,a,o){(e<0||t<0||n<0||a<0)&&console.error("Offsets cannot be negative!"),(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!");const h=o.descriptor;o.descriptor.target!==x.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),((h==null?void 0:h.width)==null||(h==null?void 0:h.height)==null||e+i>this.width||t+s>this.height||n+i>h.width||a+s>h.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const E=this._context,_=E.bindTexture(o,N.TEXTURE_UNIT_FOR_UPDATES);E.setActiveTexture(N.TEXTURE_UNIT_FOR_UPDATES),E.bindFramebuffer(this),E.gl.copyTexSubImage2D(x.TEXTURE_2D,0,n,a,e,t,i,s),E.bindTexture(_,N.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,i,s,n,a,o){(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,i,s,n,a,o)}async readPixelsAsync(e,t,i,s,n,a,o){if(this._context.type!==R.WEBGL2)return M()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(e,t,i,s,n,a,o);const h=this._context.gl,E=X.createPixelPack(this._context,y.STREAM_READ,o.byteLength);this._context.bindBuffer(E),this._context.bindFramebuffer(this),h.readPixels(e,t,i,s,n,a,0),this._context.unbindBuffer(l.PIXEL_PACK_BUFFER),await E.getSubDataAsync(o),E.dispose()}resize(e,t){var s,n,a;if(this.width===e&&this.height===t)return;const i={width:e,height:t};D(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach(o=>o.resize(i.width,i.height)),(s=this._depthStencilTexture)==null||s.resize(i.width,i.height),this._initialized&&(D(i,this._context.parameters.maxRenderbufferSize),(n=this._depthBuffer)==null||n.resize(i.width,i.height),(a=this._stencilBuffer)==null||a.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=m.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const i=t.createFramebuffer();t.bindFramebuffer(e,i),this._colorAttachments.forEach((n,a)=>this._framebufferTexture2D(n.glName,a,I(n),e));const s=this._depthBuffer||this._stencilBuffer;if(s){const n=this._getGLAttachmentPoint(s.descriptor);t.framebufferRenderbuffer(e,n,t.RENDERBUFFER,s.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,I(this._depthStencilTexture),e);M()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(e,t=T.COLOR_ATTACHMENT0,i=x.TEXTURE_2D,s=m.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(s,t,i,e,n)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthBuffer.descriptor);e.framebufferRenderbuffer(m.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthBuffer=F(this._depthBuffer)}this._stencilBuffer&&(this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(m.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,null)),this._stencilBuffer=F(this._stencilBuffer)),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=F(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==x.TEXTURE_2D&&e.target!==x.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),D(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderBufferDescriptor(e){D(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case u.DEPTH_COMPONENT16:case u.DEPTH_COMPONENT24:case u.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case u.DEPTH24_STENCIL8:case u.DEPTH32F_STENCIL8:case u.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case u.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(p._MAX_COLOR_ATTACHMENTS===-1){const i=this._context.capabilities.drawBuffers;if(i){const s=this._context.gl;p._MAX_COLOR_ATTACHMENTS=s.getParameter(i.MAX_COLOR_ATTACHMENTS)}else p._MAX_COLOR_ATTACHMENTS=1}const t=e-T.COLOR_ATTACHMENT0;t+1>p._MAX_COLOR_ATTACHMENTS&&O.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${p._MAX_COLOR_ATTACHMENTS} color attachments`)}}function C(r){return r!=null&&"type"in r&&r.type==="texture"}function K(r){return r!=null&&"type"in r&&r.type==="renderbuffer"}function Z(r){return C(r)||r!=null&&"pixelFormat"in r}function D(r,e){const t=Math.max(r.width,r.height);if(t>e){q.warn(`Resizing FBO attachment size ${r.width}x${r.height} to device limit ${e}`);const i=e/t;return r.width=Math.round(r.width*i),r.height=Math.round(r.height*i),!1}return!0}function I(r){return r.descriptor.target===x.TEXTURE_CUBE_MAP?x.TEXTURE_CUBE_MAP_POSITIVE_X:x.TEXTURE_2D}p._MAX_COLOR_ATTACHMENTS=-1;const g=O.getLogger("esri.views.webgl.VertexArrayObject");let ie=class{constructor(r,e,t,i,s=null){this._context=r,this._locations=e,this._layout=t,this._buffers=i,this._indexBuffer=s,this._glName=null,this._initialized=!1,r.instanceCounter.increment(A.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce((r,e)=>r+this._buffers[e].byteLength,this._indexBuffer!=null?this._indexBuffer.byteLength:0)}get layout(){return this._layout}get locations(){return this._locations}get memoryEstimate(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*z}dispose(){var r;if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const e in this._buffers)(r=this._buffers[e])==null||r.dispose(),delete this._buffers[e];this._indexBuffer=F(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&g.warn("Leaked WebGL VAO")}disposeVAOOnly(){var r,e;this._glName&&(((e=(r=this._context)==null?void 0:r.capabilities)==null?void 0:e.vao).deleteVertexArray(this._glName),this._glName=null),this._context.instanceCounter.decrement(A.VertexArrayObject,this),this._context=G(this._context)}initialize(){if(this._initialized)return;const r=this._context.capabilities.vao;if(r){const e=r.createVertexArray();r.bindVertexArray(e),this._bindLayout(),r.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const r=this._context.capabilities.vao;r?r.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:r,_layout:e,_indexBuffer:t}=this;r||g.error("Vertex buffer dictionary is empty!");const i=this._context.gl;for(const s in r){const n=r[s];n||g.error("Vertex buffer is uninitialized!");const a=e[s];a||g.error("Vertex element descriptor is empty!"),j(this._context,this._locations,n,a)}t!=null&&(this._context.capabilities.vao?i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.glName):this._context.bindBuffer(t))}unbind(){this.initialize();const r=this._context.capabilities.vao;r?r.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:r,_layout:e}=this;r||g.error("Vertex buffer dictionary is empty!");for(const t in r){const i=r[t];i||g.error("Vertex buffer is uninitialized!");const s=e[t];$(this._context,this._locations,i,s)}this._indexBuffer!=null&&this._context.unbindBuffer(this._indexBuffer.bufferType)}};export{k as E,te as a,X as c,Y as s,ie as u,p as x};
