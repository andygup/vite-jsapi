import{ae as i,af as o,ai as g,bD as R,hO as M,V as F,cd as b,ft as Z,ek as O,hZ as z,bF as c,z as W,an as H,aZ as B,dw as X,L as D,cF as Y,aL as ee,ev as $,J as u,Z as te,cx as re,s as p,ah as ie,eu as se,_ as oe,dC as ae,eS as E,d as ne,b2 as le,eK as pe,bb as de,a$ as ye}from"./index-175d32d0.js";import"./UniqueValueRenderer-288172e9.js";import{n as ue}from"./jsonUtils-10bdfdc6.js";import{O as ce}from"./MultiOriginJSONSupport-717d0bca.js";import{i as he}from"./APIKeyMixin-f34e52f8.js";import{l as fe}from"./ArcGISService-f83509f7.js";import{c as me}from"./EditBusLayer-a7eac63b.js";import{c as ge}from"./OperationalLayer-99f6f269.js";import{j as ve}from"./PortalLayer-52ac5aae.js";import{t as we}from"./ScaleRangeLayer-89d5cd65.js";import{N as be,K as x}from"./SceneService-515d3058.js";import{t as Ie,l as Le,s as Se}from"./FetchAssociatedFeatureLayer-56617b15.js";import{d as Fe,m as je,c as _e,p as Oe,l as $e}from"./commonProperties-1c6cac45.js";import{t as Ee,a as xe}from"./FeatureReductionLayer-41ba8738.js";import{s as Te}from"./fieldProperties-534769d4.js";import{r as Ae}from"./FieldsIndex-2024344c.js";import{s as N,l as Pe,u as Re,m as De}from"./I3SLayerDefinitions-f995f9b2.js";import{C as Ne,i as T}from"./labelingInfo-ffafbf0b.js";import{p as Ce}from"./serviceCapabilitiesUtils-2941b77b.js";import{g as Ue}from"./persistable-d56b2306.js";import{t as qe}from"./styleUtils-7b847a1c.js";import{b as Qe}from"./Query-91daeb60.js";import{l as Ge}from"./featureFlags-a084cf3d.js";import{p as ke}from"./popupUtils-10b246d3.js";import{p as Ve,d as Ke}from"./popupUtils-431feddd.js";import"./LegendOptions-8e12359c.js";import"./diffUtils-1e0b45c5.js";import"./SizeVariable-41a3e64d.js";import"./colorRamps-f4ee9bc5.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-349f6f20.js";import"./ColorStop-b164d74d.js";import"./jsonUtils-a54641ba.js";import"./styleUtils-659e6a41.js";import"./DictionaryLoader-9b7beab2.js";import"./LRUCache-05c2e0c8.js";import"./MemCache-8e066c91.js";import"./heatmapUtils-4fba0b55.js";import"./vec4f64-aa64c7e9.js";import"./portalItemUtils-2b04e7ed.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceUtils-f0fe0d76.js";import"./mat3f64-221ce671.js";import"./mat4f64-1413b4a7.js";import"./quat-6a9a7451.js";import"./quatf64-3363c48e.js";import"./I3SBinaryReader-8fac4162.js";import"./VertexAttribute-9f2e53ec.js";import"./spatialReferenceEllipsoidUtils-723b81eb.js";import"./symbolColorUtils-b0041cf8.js";import"./vec3f32-ad1dc57f.js";import"./plane-e6502816.js";import"./sphere-df5cc114.js";import"./ByteSizeUnit-d4757d40.js";import"./FeatureLayer-bfa60a8f.js";import"./sql-d95c95ff.js";import"./FeatureLayerBase-04bbcd1e.js";import"./Field-b346df3f.js";import"./fieldType-0ef39ec5.js";import"./AttachmentQuery-9dd68404.js";import"./RelationshipQuery-84aa24cd.js";import"./editsZScale-fe0015a8.js";import"./queryZScale-e9f696ed.js";import"./FeatureSet-abad50cc.js";import"./BlendLayer-5b5c1cfc.js";import"./jsonUtils-82684178.js";import"./parser-be52f54c.js";import"./CustomParametersMixin-1f4c24f4.js";import"./OrderedLayer-3d96b800.js";import"./RefreshableLayer-b8ac4210.js";import"./TemporalLayer-bc0a0246.js";import"./FeatureTemplate-58d57d25.js";import"./FeatureType-5988a10a.js";import"./versionUtils-6b85bef6.js";import"./TopFeaturesQuery-0e608672.js";import"./FeatureEffect-5be74af9.js";import"./clusterUtils-64f88ebd.js";import"./ElevationInfo-ed295995.js";import"./labelUtils-358af0bc.js";import"./defaultsJSON-b087dd4d.js";import"./resourceExtension-357b5562.js";let y=class extends R{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([o({type:String,json:{read:!0,write:!0}})],y.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],y.prototype,"field",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],y.prototype,"currentRangeExtent",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],y.prototype,"fullRangeExtent",void 0),i([o({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],y.prototype,"type",void 0),y=i([g("esri.layers.support.RangeInfo")],y);var m;let I=m=class extends M(F.ofType(b)){constructor(e){super(e)}clone(){return new m(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var r;const t=(r=e==null?void 0:e.layer)==null?void 0:r.spatialReference;return t?this.toArray().map(a=>{if(!t.equals(a.spatialReference)){if(!Z(a.spatialReference,t))return e&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new b;z(a,l,t),a=l}const n=a.toJSON(e);return delete n.spatialReference,n}).filter(a=>a!=null):(e!=null&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(a=>a.toJSON(e)))}static fromJSON(e,t){const r=new m;return e.forEach(a=>r.add(b.fromJSON(a,t))),r}};I=m=i([g("esri.layers.support.PolygonCollection")],I);const L=I;var S;let h=S=class extends R{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new L,this._geometriesSource=null,this._handles=new W}initialize(){this._handles.add(H(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,B))}destroy(){this._handles.destroy()}readGeometries(e,t,r){this._geometriesSource={url:X(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:a}=this._geometriesSource,n=await D(r,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),d=n.data.map(v=>({...v,spatialReference:l}));this.geometries=L.fromJSON(d,a),this._geometriesSource=null}clone(){return new S({geometries:Y(this.geometries),spatialRelationship:this.spatialRelationship})}};i([o({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],h.prototype,"spatialRelationship",void 0),i([o({type:L,nonNullable:!0,json:{write:!0}}),Ue({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],h.prototype,"geometries",void 0),i([c(["web-scene","portal-item"],"geometries")],h.prototype,"readGeometries",null),h=S=i([g("esri.layers.support.SceneFilter")],h);const Je=h,Me=["3DObject","Point"],A=Te();let s=class extends me(be(fe(ge(ve(we(ce(he(ee(ye))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new F,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var a,n,l;const r=(n=(a=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:a.domains)==null?void 0:n[e];return r&&r.type!=="inherited"?r:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get fieldsIndex(){return new Ae(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:N.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return Ze[this.profile]||"mesh"}set renderer(e){$(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var j,_;const e=((j=this.associatedLayer)==null?void 0:j.capabilities)??Ie,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:a,supportsUploadWithItemId:n,supportsGeometryUpdate:l,supportsReturnServiceEditsInSourceSpatialReference:d},data:{supportsZ:v,supportsM:C,isVersioned:U,supportsAttachment:q},operations:{supportsEditing:Q,supportsAdd:G,supportsUpdate:k,supportsDelete:V,supportsQuery:K,supportsQueryAttachments:J}}=e,f=e.operations.supportsChangeTracking,w=!!((_=this.associatedLayer)!=null&&_.infoFor3D)&&Ge();return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:d,supportsRollbackOnFailure:a,supportsGeometryUpdate:w&&l,supportsUploadWithItemId:n},data:{supportsAttachment:q,supportsZ:v,supportsM:C,isVersioned:U},operations:{supportsQuery:K,supportsQueryAttachments:J,supportsEditing:Q&&f,supportsAdd:w&&G&&f,supportsDelete:w&&V&&f,supportsUpdate:k&&f}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const r=t.store.profile;return r!=null&&P[r]?P[r]:(u.getLogger(this.declaredClass).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=e!=null?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(te).then(()=>this._fetchService(t)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this.filter!=null?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>qe(this,{origin:"service"},t)).then(()=>$(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(r),Promise.resolve(this)}async beforeSave(){this.filter!=null&&await this.load()}createQuery(){const e=new Qe;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const a of r.features)a.layer=this,a.sourceLayer=this;return r})}async queryCachedAttributes(e,t){const r=re(this.fieldsIndex,await Ve(this,Ke(this)));return Le(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new ie;return a.attributes=r[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(u.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return ke(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const a of this.statisticsInfo)if(a.name===r.name){const n=se(this.parsedUrl.path,a.href);return D(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(l=>l.data)}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(x.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(x.SAVE,e)}async applyEdits(e,t){const r=await oe(()=>import("./editingSupport-f16dd326.js"),["assets/editingSupport-f16dd326.js","assets/index-175d32d0.js","assets/index-d832a396.css","assets/normalizeUtils-2391e42c.js","assets/normalizeUtilsCommon-b064c045.js","assets/EditBusLayer-a7eac63b.js","assets/infoFor3D-1eaade9a.js"]);if(await this.load(),!this.associatedLayer)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r.applyEdits(this,this.associatedLayer.source,e,t)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Me.includes(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,a){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=a&&a.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t;if(this._fieldUsageInfo={},this.fields)for(const r of this.fields){const a=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(d=>d.name===r.name)),n=!!((t=(e=this.associatedLayer)==null?void 0:e.fields)!=null&&t.some(d=>d&&r.name===d.name)),l={supportsLabelingInfo:a,supportsRenderer:a,supportsPopupTemplate:a||n,supportsLayerQuery:n};this._fieldUsageInfo[r.name]=l}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const r of this.associatedLayer.fields){const a=this.getField(r.name);a?(!a.domain&&r.domain&&(a.domain=r.domain.clone()),a.editable=r.editable,a.nullable=r.nullable,a.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=ae(this);for(let r=0;r<e.length;r++){const a=e[r],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===E.SERVICE||l===E.PORTAL_ITEM)&&t.setAtOrigin(a,this.associatedLayer[a],l)}}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new Se(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(r){ne(r)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await le(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?u.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):u.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&u.getLogger(this.declaredClass).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&u.getLogger(this.declaredClass).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};i([o({types:{key:"type",base:Ee,typeMap:{selection:xe}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],s.prototype,"featureReduction",void 0),i([o({type:[y],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],s.prototype,"rangeInfos",void 0),i([o({json:{read:!1}})],s.prototype,"associatedLayer",void 0),i([o({type:["show","hide"]})],s.prototype,"listMode",void 0),i([o({type:["ArcGISSceneServiceLayer"]})],s.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([o({...A.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"fields",void 0),i([o()],s.prototype,"types",null),i([o()],s.prototype,"typeIdField",null),i([o()],s.prototype,"templates",null),i([o()],s.prototype,"formTemplate",null),i([o({readOnly:!0})],s.prototype,"fieldsIndex",null),i([o({type:Ce,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],s.prototype,"floorInfo",void 0),i([o(A.outFields)],s.prototype,"outFields",void 0),i([o({type:N,readOnly:!0,json:{read:!1}})],s.prototype,"nodePages",void 0),i([c("service","nodePages",["nodePages","pointNodePages"])],s.prototype,"readNodePages",null),i([o({type:[Pe],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([o({type:[Re],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([o({type:[De],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([o({readOnly:!0})],s.prototype,"attributeStorageInfo",void 0),i([o({readOnly:!0})],s.prototype,"statisticsInfo",void 0),i([o({type:F.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],s.prototype,"excludeObjectIds",void 0),i([o({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),i([o({type:Je,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],s.prototype,"filter",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),i([o(Fe)],s.prototype,"elevationInfo",null),i([o({type:String})],s.prototype,"geometryType",null),i([o(je)],s.prototype,"labelsVisible",void 0),i([o({type:[Ne],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:T},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:T},write:!0}})],s.prototype,"labelingInfo",void 0),i([o(_e)],s.prototype,"legendEnabled",void 0),i([o({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var a,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(n=(a=t.layerDefinition)==null?void 0:a.drawingInfo)==null?void 0:n.transparency;return r!==void 0?pe(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],s.prototype,"opacity",void 0),i([o({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"priority",void 0),i([o({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"semantic",void 0),i([o({types:ue,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],s.prototype,"renderer",null),i([o({json:{read:!1}})],s.prototype,"cachedDrawingInfo",void 0),i([c("service","cachedDrawingInfo")],s.prototype,"readCachedDrawingInfo",null),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"capabilities",null),i([o({type:Boolean,json:{read:!1}})],s.prototype,"editingEnabled",null),i([o({readOnly:!0,json:{write:!1,read:!1}})],s.prototype,"infoFor3D",null),i([o(Oe)],s.prototype,"popupEnabled",void 0),i([o({type:de,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"defaultPopupTemplate",null),i([o({type:String,json:{read:!1}})],s.prototype,"objectIdField",void 0),i([c("service","objectIdField",["objectIdField","fields"])],s.prototype,"readObjectIdField",null),i([o({type:String,json:{read:!1}})],s.prototype,"globalIdField",void 0),i([c("service","globalIdField",["globalIdField","fields"])],s.prototype,"readGlobalIdField",null),i([o({readOnly:!0,type:String,json:{read:!1}})],s.prototype,"displayField",null),i([o({type:String,json:{read:!1}})],s.prototype,"profile",void 0),i([c("service","profile",["store.profile"])],s.prototype,"readProfile",null),i([o({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],s.prototype,"normalReferenceFrame",void 0),i([o($e)],s.prototype,"screenSizePerspectiveEnabled",void 0),s=i([g("esri.layers.SceneLayer")],s);const P={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Ze={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},Lr=s;export{Lr as default};
