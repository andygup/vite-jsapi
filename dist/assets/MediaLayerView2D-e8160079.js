import{bN as K,E as I,F as A,aQ as X,w as Z,N as k,a as ee,b as te,c as Q,bO as x,bP as re,bQ as se,f as ie,bi as oe,bl as ne,M as ae,bj as le,i as he,j as me,bR as pe,bn as ce,V as de,ao as W,b7 as ue,b8 as fe,bS as _e,d as ye,bf as ve,aA as ge,af as M,ag as G,aj as we,Q as be,bT as Re}from"./index-989909ce.js";import"./UniqueValueRenderer-069d3511.js";import"./jsonUtils-f27d3f31.js";import{j as xe,i as H}from"./perspectiveUtils-8aedeee1.js";import"./MagnifierPrograms-1899ec83.js";import{a as Me}from"./Container-d6a11296.js";import"./BufferPool-c9355ed2.js";import{T as Ee}from"./color-e690ede3.js";import{i as $e,w as Te}from"./WGLContainer-20e8cdd8.js";import{D as Ce,F as L}from"./enums-b14466b3.js";import{a as Se,u as Ve}from"./Texture-501dc2a6.js";import"./ProgramTemplate-9e2e5761.js";import"./GeometryUtils-84a108d1.js";import{c as z,u as qe}from"./VertexArrayObject-de8d8d6a.js";import"./StyleDefinition-fbc907c2.js";import"./enums-fb086c25.js";import"./OrderIndependentTransparency-309a1bc3.js";import"./floatRGBA-5f0a804f.js";import"./GraphicsView2D-557a8e65.js";import"./AttributeStoreView-d6656c7a.js";import"./earcut-27e6c8d6.js";import"./featureConversionUtils-b1362163.js";import"./lengthUtils-32b5157c.js";import{r as Ae}from"./vec3f32-ad1dc57f.js";import{v as Ge}from"./normalizeUtils-938fb227.js";import{e as De}from"./mat3f64-221ce671.js";import{f as Pe,d as je}from"./LayerView-0c8e3efe.js";import"./LegendOptions-3ac5ff0b.js";import"./diffUtils-a4f61c8a.js";import"./SizeVariable-3a3f0b31.js";import"./colorRamps-c86b1339.js";import"./sizeVariableUtils-d4870b0d.js";import"./ColorStop-f2a5e65b.js";import"./featureFlags-8ed38c32.js";import"./styleUtils-ee1316c2.js";import"./DictionaryLoader-e10e08a4.js";import"./LRUCache-a1ffc3d4.js";import"./Version-f874365f.js";import"./FieldsIndex-958df084.js";import"./heatmapUtils-8adef46d.js";import"./vec4f64-aa64c7e9.js";import"./normalizeUtilsSync-132c0a94.js";import"./normalizeUtilsCommon-8a86e794.js";import"./ExpandedCIM-d2c7e7d5.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./enums-55085e26.js";import"./definitions-c7b3085f.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-611ec4df.js";import"./rasterizingUtils-e480e08c.js";import"./pbf-f1321473.js";import"./imageutils-488e927b.js";import"./Matcher-d0713c3f.js";import"./visualVariablesUtils-0f51e147.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-456f79c5.js";import"./defaultsJSON-b087dd4d.js";import"./OptimizedGeometry-33b2eb0d.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-2ed84a40.js";import"./CircularArray-ef508845.js";import"./DisjointTimerQuery-bcdafcd7.js";import"./throttle-7bf02de9.js";import"./ComputedAttributeStorage-2e595e38.js";import"./arcadeTimeUtils-5c44bb6d.js";import"./executionError-c92d3b85.js";import"./projectionSupport-f9da330e.js";import"./json-48e3ea08.js";import"./parser-39b32429.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./basicInterfaces-4ab7cc6a.js";import"./labelingInfo-3941dab0.js";import"./labelUtils-f745c070.js";import"./TiledDisplayObject-cb1d7c8b.js";import"./sql-926e6229.js";import"./clusterUtils-34d60035.js";import"./util-af5beedd.js";import"./OptimizedFeatureSet-1d1ac4b9.js";const y=De();let Oe=class extends Me{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=K(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(I(()=>this.elementView.element.opacity,t=>this.opacity=t,A),I(()=>[this.elementView.coords],()=>{this.requestRender()},A),X(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&t.content!=null&&this._handles.push(Z(t.content,"play",()=>this.requestRender()))},A)),e.element.load().catch(t=>{k.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new ee("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=te(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,s=this.elementView.element.content;if(s!=null){const i=s instanceof HTMLImageElement,o=s instanceof HTMLVideoElement,a=i?s.naturalWidth:o?s.videoWidth:s.width,n=i?s.naturalHeight:o?s.videoHeight:s.height;if(this._updatePerspectiveTransform(a,n),this.texture)o&&!s.paused&&(this.texture.setData(s),this.requestRender(),(t.type===Q.WEBGL2||x(a)&&x(n))&&this.texture.generateMipmap());else{const m=new Se;m.wrapMode=Ce.CLAMP_TO_EDGE,m.preMultiplyAlpha=!0,m.width=a,m.height=n,this.texture=new Ve(t,m,s),(t.type===Q.WEBGL2||x(a)&&x(n))&&this.texture.generateMipmap(),o&&!s.paused&&this.requestRender()}}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const s=this.elementView.coords;if(s==null)return;const[i,o,a,n]=s.rings[0],m=this._vertices,{x:l,y:h}=e,d=t!==0;d?m.set([o[0]-l,o[1]-h,i[0]-l,i[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h,n[0]-l,n[1]-h,o[0]+t-l,o[1]-h,o[0]+t-l,o[1]-h,i[0]+t-l,i[1]-h,a[0]+t-l,a[1]-h,n[0]+t-l,n[1]-h]):m.set([o[0]-l,o[1]-h,i[0]-l,i[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h]),this.isWrapAround=d}getVAO(e,t,s){if(this.elementView.coords==null)return null;const i=this._vertices;if(this._vao)this._geometryVbo.setData(i);else{this._geometryVbo=z.createVertex(e,L.DYNAMIC_DRAW,i);const o=z.createVertex(e,L.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new qe(e,s,t,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(e,t){const s=this._vertices;xe(y,[0,0,e,0,0,t,e,t],[s[0],s[1],s[4],s[5],s[2],s[3],s[6],s[7]]),re(this.perspectiveTransform,y[6]/y[8]*e,y[7]/y[8]*t)}};class Ue extends $e{constructor(){super(...arguments),this._localOrigin=se(0,0),this._viewStateId=-1,this._dvsMat3=ie(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[Te.overlay],target:()=>this.children,drawPhase:Ee.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:s,size:i,pixelRatio:o,resolution:a,rotation:n,viewpoint:m,displayMat3:l}=t;if(this._viewStateId===s)return;const h=Math.PI/180*n,d=o*i[0],f=o*i[1],{x:E,y:g}=m.targetGeometry,$=Ge(E,t.spatialReference);this._localOrigin.x=$,this._localOrigin.y=g;const T=a*d,w=a*f,p=oe(this._dvsMat3);ne(p,p,l),ae(p,p,le(d/2,f/2)),he(p,p,Ae(d/T,-f/w,1)),me(p,p,-h),this._viewStateId=s}_updateOverlays(e,t){const{state:s}=e,{rotation:i,spatialReference:o,worldScreenWidth:a,size:n,viewpoint:m}=s,l=this._localOrigin;let h=0;const d=pe(o);if(d&&o.isWrappable){const f=n[0],E=n[1],g=180/Math.PI*i,$=Math.abs(Math.cos(g)),T=Math.abs(Math.sin(g)),w=Math.round(f*$+E*T),[p,C]=d.valid,u=ce(o),{x:D,y:F}=m.targetGeometry,N=[D,F],S=[0,0];s.toScreen(S,N);const b=[0,0];let V;V=w>a?.5*a:.5*w;const P=Math.floor((D+.5*u)/u),Y=p+P*u,J=C+P*u,q=[S[0]+V,0];s.toMap(b,q),b[0]>J&&(h=u),q[0]=S[0]-V,s.toMap(b,q),b[0]<Y&&(h=-u);for(const R of t){const j=R.elementView.bounds;if(j==null)continue;const[O,,U]=j;O<p&&U>p?R.updateDrawCoords(l,u):U>C&&O<C?R.updateDrawCoords(l,-u):R.updateDrawCoords(l,h)}}else for(const f of t)f.updateDrawCoords(l,h)}}let _=class extends Pe(je){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new de}attach(){this.addAttachHandles([W(()=>this.layer.effectiveSource,"refresh",()=>{for(const r of this._tileStrategy.tiles)this._updateTile(r);this.requestUpdate()}),W(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new Ue,this.container.addChild(this._overlayContainer),this._fetchQueue=new ue({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new fe({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],s=r.normalize(),i=[s.x,s.y];for(const{projectedElement:{normalizedCoords:o,element:a}}of this._elementReferences.values())o!=null&&_e(o.rings,i)&&t.push({type:"media",element:a,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(r=>this._updateTile(r))}_acquireTile(r){const e=new Ie(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,s]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,s),this.requestUpdate()},e=>{ye(e)||k.getLogger(this.declaredClass).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(t==null)return[];this.view.featuresTilingScheme.getTileBounds(c,r,!0);const s=new ve({xmin:c[0],ymin:c[1],xmax:c[2],ymax:c[3],spatialReference:this.view.spatialReference});return t.queryElements(s,e)}_referenceElements(r,e){if(this.layer.source!=null)for(const t of e)this._referenceElement(r,t)}_referenceElement(r,e){ge(this._elementReferences,e.uid,()=>{const t=new H({element:e,spatialReference:this.view.spatialReference}),s=new Oe(t);return this._overlayContainer.addChild(s),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:s,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var s;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(s=this._debugGraphicsView)==null||s.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var s;let e=this._elementReferences.get(r.uid);if(e){const i=e.projectedElement.normalizedCoords;if(i==null)return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((s=this._debugGraphicsView)==null?void 0:s.graphics.remove(e.debugGraphic));const o=[],a=[];for(const n of this._tileStrategy.tiles){const m=B(this.view.featuresTilingScheme,n,i);e.tiles.has(n)?m||a.push(n):m&&o.push(n)}for(const n of o)this._referenceElement(n,r);for(const n of a)this._dereferenceElement(n,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new H({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(t!=null)for(const i of this._tileStrategy.tiles)B(this.view.featuresTilingScheme,i,t)&&this._referenceElement(i,r)}};M([G()],_.prototype,"_fetchQueue",void 0),M([G()],_.prototype,"layer",void 0),M([G({readOnly:!0})],_.prototype,"elements",void 0),_=M([we("esri.views.2d.layers.MediaLayerView2D")],_);const c=be(),v={xmin:0,ymin:0,xmax:0,ymax:0};function B(r,e,t){return r.getTileBounds(c,e.key,!0),v.xmin=c[0],v.ymin=c[1],v.xmax=c[2],v.ymax=c[3],Re(v,t)}class Ie{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],s=new Set(this.elements);this.elements=e;for(const i of e)s.has(i)?s.delete(i):t.push(i);return this.isReady=!0,[t,Array.from(s)]}destroy(){}}const dr=_;export{dr as default};
