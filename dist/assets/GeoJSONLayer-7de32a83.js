import{L as w,ae as r,af as o,ai as v,ep as N,be as R,bf as F,E as m,cc as P,ct as j,m as T,eC as S,bt as O,Z as L,et as f,ex as D,du as g,_ as q,bb as G,a$ as $}from"./index-37fc1c1b.js";import"./UniqueValueRenderer-79722a7d.js";import{a as C,w as k}from"./jsonUtils-eceacd2d.js";import{M as Q}from"./MultiOriginJSONSupport-5106a46d.js";import{d as z}from"./clientSideDefaults-96417395.js";import{F as V}from"./FeatureSet-c0217d0c.js";import{B as Z}from"./BlendLayer-e9a75654.js";import{C as M}from"./CustomParametersMixin-df4f4226.js";import{F as A,a as B}from"./FeatureReductionLayer-cb752cbf.js";import{O as U}from"./OperationalLayer-b1272312.js";import{O as W}from"./OrderedLayer-735186e6.js";import{P as K}from"./PortalLayer-5c1e8cec.js";import{R as H}from"./RefreshableLayer-455e4199.js";import{S as X}from"./ScaleRangeLayer-fae3a21d.js";import{T as Y}from"./TemporalLayer-2e882f30.js";import{e as ee,i as te,l as re,a as ie,f as oe,p as se,s as ne,u as ae}from"./commonProperties-0728d359.js";import{F as le}from"./FeatureTemplate-2300beb6.js";import{F as ue}from"./FeatureType-32109ff8.js";import{F as pe}from"./Field-b21b898d.js";import{d as de}from"./fieldProperties-98135be9.js";import{L as ce,r as ye}from"./labelingInfo-7fe41727.js";import{Q as y}from"./Query-91876b14.js";import{c as he}from"./popupUtils-2aa78f0c.js";import"./LegendOptions-bd430cc4.js";import"./diffUtils-7b235f3e.js";import"./SizeVariable-9c9109a6.js";import"./colorRamps-91762876.js";import"./sizeVariableUtils-2914222a.js";import"./lengthUtils-03d7ac5d.js";import"./ColorStop-9edb971d.js";import"./jsonUtils-08626db6.js";import"./styleUtils-1f72c3eb.js";import"./featureFlags-ec64a754.js";import"./DictionaryLoader-8cba2b14.js";import"./LRUCache-50b8fe4e.js";import"./MemCache-88779bec.js";import"./FieldsIndex-bb94d0b9.js";import"./heatmapUtils-f0d5531e.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./QueryEngineCapabilities-60118ddb.js";import"./defaultsJSON-b396ba80.js";import"./jsonUtils-85e9bcb0.js";import"./parser-395fa391.js";import"./_commonjsHelpers-725317a4.js";import"./FeatureEffect-227c642a.js";import"./clusterUtils-6e1a0568.js";import"./portalItemUtils-89a65566.js";import"./ElevationInfo-37007c95.js";import"./fieldType-60e0d461.js";import"./labelUtils-41a42c6e.js";const E="esri.layers.graphics.sources.GeoJSONSource",b=w.getLogger(E);let d=class extends N{constructor(){super(...arguments),this.type="geojson",this.refresh=R(async e=>{await this.load();const{extent:t,timeExtent:i}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,i&&(this.sourceJSON.timeInfo.timeExtent=[i.start,i.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)).then(i=>V.fromJSON(i))}queryFeaturesJSON(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(i=>({count:i.count,extent:F.fromJSON(i.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}_applyEdits(e){if(!this._connection)throw new m("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,i=[],n=[],p=[];if(e.addFeatures)for(const a of e.addFeatures)i.push(this._serializeFeature(a));if(e.deleteFeatures)for(const a of e.deleteFeatures)"objectId"in a&&a.objectId!=null?n.push(a.objectId):"attributes"in a&&a.attributes[t]!=null&&n.push(a.attributes[t]);if(e.updateFeatures)for(const a of e.updateFeatures)p.push(this._serializeFeature(a));return this._connection.invoke("applyEdits",{adds:i,updates:p,deletes:n}).then(({extent:a,timeExtent:l,featureEditResults:u})=>(this.sourceJSON.extent=a,l&&(this.sourceJSON.timeInfo.timeExtent=[l.start,l.end]),this._createEditsResult(u)))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new m("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,i=this._geometryForSerialization(e);return i?{geometry:i.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:t.type==="mesh"||t.type==="extent"?P.fromExtent(t.extent):t}async _startWorker(e){this._connection=await j("GeoJSONSourceWorker",{strategy:T("feature-layers-workers")?"dedicated":"local",signal:e});const{fields:t,spatialReference:i,hasZ:n,geometryType:p,objectIdField:a,url:l,timeInfo:u,customParameters:_}=this.layer,x=this.layer.originOf("spatialReference")==="defaults",J={url:l,customParameters:_,fields:t&&t.map(h=>h.toJSON()),geometryType:S.toJSON(p),hasZ:n,objectIdField:a,timeInfo:u?u.toJSON():null,spatialReference:x?null:i&&i.toJSON()},c=await this._connection.invoke("load",J,{signal:e});for(const h of c.warnings)b.warn(h.message,{layer:this.layer,warning:h});c.featureErrors.length&&b.warn(`Encountered ${c.featureErrors.length} validation errors while loading features`,c.featureErrors),this.sourceJSON=c.layerDefinition,this.capabilities=z(this.sourceJSON.hasZ,!0)}};r([o()],d.prototype,"capabilities",void 0);r([o()],d.prototype,"type",void 0);r([o({constructOnly:!0})],d.prototype,"layer",void 0);r([o()],d.prototype,"sourceJSON",void 0);d=r([v(E)],d);const me=de();let s=class extends W(M(A(B(Z(Y(X(H(U(K(Q($))))))))))){constructor(e){super(e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=O.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson",this.typeIdField=null,this.types=null}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(L).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),f(this.renderer,this.fieldsIndex),D(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}get parsedUrl(){return this.url?g(this.url):null}set renderer(e){f(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e){this._set("url",e);return}const t=g(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const i=await q(()=>import("./editingSupport-419480c4.js"),["assets/editingSupport-419480c4.js","assets/index-37fc1c1b.js","assets/index-d832a396.css","assets/normalizeUtils-e8b8b395.js","assets/normalizeUtilsCommon-e9d0815c.js","assets/EditBusLayer-db23efad.js","assets/infoFor3D-91dff30a.js"]);await this.load();const n=await i.applyEdits(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),n}on(e,t){return super.on(e,t)}createPopupTemplate(e){return he(this,e)}createQuery(){const e=new y,t=this.get("capabilities.data");e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:i,timeExtent:n}=this;return i!=null&&n!=null?e.timeExtent=n.offset(-i.value,i.unit):e.timeExtent=n||null,e}getFieldDomain(e,t){let i,n=!1;const p=t&&t.feature,a=p&&p.attributes,l=this.typeIdField&&a&&a[this.typeIdField];return l!=null&&this.types&&(n=this.types.some(u=>u.id==l?(i=u.domains&&u.domains[e],i&&i.type==="inherited"&&(i=this._getLayerDomain(e)),!0):!1)),!n&&!i&&(i=this._getLayerDomain(e)),i}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(y.from(e)||this.createQuery(),t)).then(i=>{if(i!=null&&i.features)for(const n of i.features)n.layer=n.sourceLayer=this;return i})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(y.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(y.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(y.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}_getLayerDomain(e){if(!this.fields)return null;let t=null;return this.fields.some(i=>(i.name===e&&(t=i.domain),!!t)),t}};r([o({readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"capabilities",null);r([o({type:String})],s.prototype,"copyright",void 0);r([o({readOnly:!0})],s.prototype,"createQueryVersion",null);r([o({readOnly:!0})],s.prototype,"defaultPopupTemplate",null);r([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0);r([o({type:String})],s.prototype,"displayField",void 0);r([o({type:Boolean})],s.prototype,"editingEnabled",void 0);r([o(ee)],s.prototype,"elevationInfo",void 0);r([o({type:[pe],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],s.prototype,"fields",void 0);r([o(me.fieldsIndex)],s.prototype,"fieldsIndex",void 0);r([o({type:F,json:{name:"extent"}})],s.prototype,"fullExtent",void 0);r([o({type:["point","polygon","polyline","multipoint"],json:{read:{reader:S.read}}})],s.prototype,"geometryType",void 0);r([o({type:Boolean})],s.prototype,"hasZ",void 0);r([o(te)],s.prototype,"id",void 0);r([o({type:Boolean,readOnly:!0})],s.prototype,"isTable",null);r([o(re)],s.prototype,"labelsVisible",void 0);r([o({type:[ce],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ye},write:!0}})],s.prototype,"labelingInfo",void 0);r([o(ie)],s.prototype,"legendEnabled",void 0);r([o({type:["show","hide"]})],s.prototype,"listMode",void 0);r([o({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],s.prototype,"objectIdField",void 0);r([o(oe)],s.prototype,"opacity",void 0);r([o({type:["GeoJSON"]})],s.prototype,"operationalLayerType",void 0);r([o({readOnly:!0})],s.prototype,"parsedUrl",null);r([o(se)],s.prototype,"popupEnabled",void 0);r([o({type:G,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0);r([o({types:C,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:k}}}})],s.prototype,"renderer",null);r([o(ne)],s.prototype,"screenSizePerspectiveEnabled",void 0);r([o({readOnly:!0})],s.prototype,"source",void 0);r([o({type:O})],s.prototype,"spatialReference",void 0);r([o({type:[le]})],s.prototype,"templates",void 0);r([o()],s.prototype,"title",void 0);r([o({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0);r([o({type:String,readOnly:!0})],s.prototype,"typeIdField",void 0);r([o({type:[ue]})],s.prototype,"types",void 0);r([o(ae)],s.prototype,"url",null);s=r([v("esri.layers.GeoJSONLayer")],s);const mt=s;export{mt as default};
