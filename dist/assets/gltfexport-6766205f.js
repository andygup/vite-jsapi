import{P as $,g as I,gv as Y,gu as q,gw as tt,K as G,e as O,J as et,gJ as k,jc as st,gL as U,eo as j,aR as it,az as rt,fM as nt,jx as at}from"./index-175d32d0.js";import{K as ot,k as ht}from"./quat-6a9a7451.js";import{o as ct,r as ft,e as lt}from"./quatf64-3363c48e.js";import{u as ut}from"./meshFeatureSet-f684a837.js";import{L as dt,l as _t}from"./georeference-777e5b80.js";import{C as _,D as T}from"./enums-74e97557.js";import{r as H,a as pt,g as mt,c as gt}from"./imageutils-9c353f3a.js";import{t as P}from"./resourceUtils-1d112ccb.js";import"./mat3f64-221ce671.js";import"./imageUtils-c2d0d1ae.js";import"./earcut-8a75b10b.js";import"./Indices-e5e41718.js";import"./deduplicate-7939838c.js";import"./External-ca569a47.js";import"./infoFor3D-1eaade9a.js";import"./mat4f64-1413b4a7.js";import"./spatialReferenceEllipsoidUtils-723b81eb.js";import"./FeatureSet-abad50cc.js";import"./Field-b346df3f.js";import"./fieldType-0ef39ec5.js";import"./vec32-fe0242f5.js";import"./BufferView-ec3ddd48.js";import"./basicInterfaces-4ab7cc6a.js";var M;(function(i){i[i.JSON=1313821514]="JSON",i[i.BIN=5130562]="BIN"})(M||(M={}));class A{constructor(t,e){if(!t)throw new Error("GLB requires a JSON gltf chunk");this._length=A.HEADER_SIZE,this._length+=A.CHUNK_HEADER_SIZE;const s=this._textToArrayBuffer(t);if(this._length+=this._alignTo(s.byteLength,4),e&&(this._length+=A.CHUNK_HEADER_SIZE,this._length+=e.byteLength,e.byteLength%4))throw new Error("Expected BIN chunk length to be divisible by 4 at this point");this.buffer=new ArrayBuffer(this._length),this._outView=new DataView(this.buffer),this._writeHeader();const r=this._writeChunk(s,12,M.JSON,32);e&&this._writeChunk(e,r,M.BIN)}_writeHeader(){this._outView.setUint32(0,A.MAGIC,!0),this._outView.setUint32(4,A.VERSION,!0),this._outView.setUint32(8,this._length,!0)}_writeChunk(t,e,s,r=0){const n=this._alignTo(t.byteLength,4);for(this._outView.setUint32(e,n,!0),this._outView.setUint32(e+=4,s,!0),this._writeArrayBuffer(this._outView.buffer,t,e+=4,0,t.byteLength),e+=t.byteLength;e%4;)r&&this._outView.setUint8(e,r),e++;return e}_writeArrayBuffer(t,e,s,r,n){new Uint8Array(t,s,n).set(new Uint8Array(e,r,n),0)}_textToArrayBuffer(t){return new TextEncoder().encode(t).buffer}_alignTo(t,e){return e*Math.ceil(t/e)}}A.HEADER_SIZE=12,A.CHUNK_HEADER_SIZE=8,A.MAGIC=1179937895,A.VERSION=2;var x,b,y,m,Z,B,J;(function(i){i[i.External=0]="External",i[i.DataURI=1]="DataURI",i[i.GLB=2]="GLB"})(x||(x={})),function(i){i[i.External=0]="External",i[i.DataURI=1]="DataURI",i[i.GLB=2]="GLB"}(b||(b={})),function(i){i[i.ARRAY_BUFFER=34962]="ARRAY_BUFFER",i[i.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER"}(y||(y={})),function(i){i.SCALAR="SCALAR",i.VEC2="VEC2",i.VEC3="VEC3",i.VEC4="VEC4",i.MAT2="MAT2",i.MAT3="MAT3",i.MAT4="MAT4"}(m||(m={})),function(i){i[i.POINTS=0]="POINTS",i[i.LINES=1]="LINES",i[i.LINE_LOOP=2]="LINE_LOOP",i[i.LINE_STRIP=3]="LINE_STRIP",i[i.TRIANGLES=4]="TRIANGLES",i[i.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",i[i.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(Z||(Z={})),function(i){i.OPAQUE="OPAQUE",i.MASK="MASK",i.BLEND="BLEND"}(B||(B={})),function(i){i[i.NoColor=0]="NoColor",i[i.FaceColor=1]="FaceColor",i[i.VertexColor=2]="VertexColor"}(J||(J={}));let wt=class{constructor(t,e,s,r,n){this._buffer=t,this._componentType=s,this._dataType=r,this._data=[],this._isFinalized=!1,this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,e.bufferViews||(e.bufferViews=[]),this.index=e.bufferViews.length,this._bufferView={buffer:t.index,byteLength:-1,target:n};const a=this._getElementSize();a>=4&&n!==y.ELEMENT_ARRAY_BUFFER&&(this._bufferView.byteStride=a),e.bufferViews.push(this._bufferView),this._numComponentsForDataType=this._calculateNumComponentsForDataType()}push(t){const e=this._data.length;if(this._data.push(t),this._accessorIndex>=0){const s=e%this._numComponentsForDataType,r=this._accessorMin[s];this._accessorMin[s]=typeof r!="number"?t:Math.min(r,t);const n=this._accessorMax[s];this._accessorMax[s]=typeof n!="number"?t:Math.max(n,t)}}get dataSize(){return this._data.length*this._sizeComponentType()}get byteSize(){function t(e,s){return s*Math.ceil(e/s)}return t(this.dataSize,4)}getByteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}get byteOffset(){if(!this._isFinalized)throw new Error("Cannot get BufferView offset until it is finalized");return this._buffer.getByteOffset(this)}_createTypedArray(t,e){switch(this._componentType){case _.BYTE:return new Int8Array(t,e);case _.FLOAT:return new Float32Array(t,e);case _.SHORT:return new Int16Array(t,e);case _.UNSIGNED_BYTE:return new Uint8Array(t,e);case _.UNSIGNED_INT:return new Uint32Array(t,e);case _.UNSIGNED_SHORT:return new Uint16Array(t,e)}}writeOutToBuffer(t,e){this._createTypedArray(t,e).set(this._data)}writeAsync(t){if(this._asyncWritePromise)throw new Error("Can't write multiple bufferView values asynchronously");return this._asyncWritePromise=t.then(e=>{const s=new Uint8Array(e);for(let r=0;r<s.length;++r)this._data.push(s[r]);delete this._asyncWritePromise}),this._asyncWritePromise}startAccessor(t){if(this._accessorIndex>=0)throw new Error("Accessor was started without ending the previous one");this._accessorIndex=this._data.length,this._accessorAttribute=t;const e=this._numComponentsForDataType;this._accessorMin=new Array(e),this._accessorMax=new Array(e)}endAccessor(){if(this._accessorIndex<0)throw new Error("An accessor was not started, but was attempted to be ended");const t=this._getElementSize(),e=this._numComponentsForDataType,s=(this._data.length-this._accessorIndex)/e;if(s%1)throw new Error("An accessor was ended with missing component values");for(let n=0;n<this._accessorMin.length;++n)typeof this._accessorMin[n]!="number"&&(this._accessorMin[n]=0),typeof this._accessorMax[n]!="number"&&(this._accessorMax[n]=0);const r={byteOffset:t*(this._accessorIndex/e),componentType:this._componentType,count:s,type:this._dataType,min:this._accessorMin,max:this._accessorMax,name:this._accessorAttribute};switch(this._accessorAttribute){case"TEXCOORD_0":case"TEXCOORD_1":case"COLOR_0":case"WEIGHTS_0":switch(this._componentType){case _.UNSIGNED_BYTE:case _.UNSIGNED_SHORT:r.normalized=!0}}return this._accessorIndex=-1,this._accessorAttribute=null,this._accessorMin=null,this._accessorMax=null,r}get finalized(){return this._finalizedPromise?this._finalizedPromise:this._isFinalized?this._finalizedPromise=Promise.resolve():this._finalizedPromise=new Promise(t=>this._finalizedPromiseResolve=t)}finalize(){const t=this._bufferView;return new Promise(e=>{const s=this._buffer.getViewFinalizePromises(this);this._asyncWritePromise&&s.push(this._asyncWritePromise),e($(s))}).then(()=>{this._isFinalized=!0,t.byteOffset=this.getByteOffset(),t.byteLength=this.dataSize,this._finalizedPromiseResolve&&this._finalizedPromiseResolve()})}_getElementSize(){return this._sizeComponentType()*this._numComponentsForDataType}_sizeComponentType(){switch(this._componentType){case _.BYTE:case _.UNSIGNED_BYTE:return 1;case _.SHORT:case _.UNSIGNED_SHORT:return 2;case _.UNSIGNED_INT:case _.FLOAT:return 4}}_calculateNumComponentsForDataType(){switch(this._dataType){case m.SCALAR:return 1;case m.VEC2:return 2;case m.VEC3:return 3;case m.VEC4:case m.MAT2:return 4;case m.MAT3:return 9;case m.MAT4:return 16}}};class K{constructor(t){this._gltf=t,this._bufferViews=[],this._isFinalized=!1,t.buffers||(t.buffers=[]),this.index=t.buffers.length;const e={byteLength:-1};t.buffers.push(e),this._buffer=e}addBufferView(t,e,s){if(this._finalizePromise)throw new Error("Cannot add buffer view after fiinalizing buffer");const r=new wt(this,this._gltf,t,e,s);return this._bufferViews.push(r),r}getByteOffset(t){let e=0;for(const s of this._bufferViews){if(s===t)return e;e+=s.byteSize}throw new Error("Given bufferView was not present in this buffer")}getViewFinalizePromises(t){const e=[];for(const s of this._bufferViews){if(t&&s===t)return e;e.push(s.finalized)}return e}getArrayBuffer(){if(!this._isFinalized)throw new Error("Cannot get ArrayBuffer from Buffer before it is finalized");const t=this._getTotalSize(),e=new ArrayBuffer(t);let s=0;for(const r of this._bufferViews)r.writeOutToBuffer(e,s),s+=r.byteSize;return e}finalize(){var t;if(this._finalizePromise)throw new Error(`Buffer ${this.index} was already finalized`);return this._finalizePromise=new Promise(e=>{e($(this.getViewFinalizePromises()))}).then(()=>{this._isFinalized=!0;const e=this.getArrayBuffer();this._buffer.byteLength=e.byteLength,this._buffer.uri=e}),(t=this._gltf.extras)==null||t.promises.push(this._finalizePromise),this._finalizePromise}_getTotalSize(){let t=0;for(const e of this._bufferViews)t+=e.byteSize;return t}}function At(i,t){if(i.components)for(const e of i.components)e.faces&&e.shading==="smooth"&&Tt(e,t)}function Tt(i,t){t.normal==null&&(t.normal=new Float32Array(t.position.length));const e=i.faces,{position:s,normal:r}=t,n=e.length/3;for(let a=0;a<n;++a){const o=3*e[3*a],h=3*e[3*a+1],c=3*e[3*a+2],d=I(yt,s[o],s[o+1],s[o+2]),u=I(xt,s[h],s[h+1],s[h+2]),l=I(Et,s[c],s[c+1],s[c+2]),R=Y(u,u,d),E=Y(l,l,d),p=q(R,R,E);r[o]+=p[0],r[o+1]+=p[1],r[o+2]+=p[2],r[h]+=p[0],r[h+1]+=p[1],r[h+2]+=p[2],r[c]+=p[0],r[c+1]+=p[1],r[c+2]+=p[2]}for(let a=0;a<r.length;a+=3)I(N,r[a],r[a+1],r[a+2]),tt(N,N),r[a]=N[0],r[a+1]=N[1],r[a+2]=N[2]}function bt(i){if(i.transform!=null)return i.transform.getOriginPoint(i.spatialReference);const t=i.extent.xmax-i.extent.width/2,e=i.extent.ymax-i.extent.height/2,s=i.extent.zmin;return new G({x:t,y:e,z:s,spatialReference:i.extent.spatialReference})}const yt=O(),xt=O(),Et=O(),N=O(),D=et.getLogger("gltf");class Rt{constructor(t,e,s){this.params={},this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:"2.0",copyright:t.copyright,generator:t.generator},extras:{options:e,binChunkBuffer:null,promises:[]}},s&&(this.params=s),this._addScenes(t)}_addScenes(t){this.gltf.scene=t.defaultScene;const e=this.gltf.extras,s=e.options.bufferOutputType===x.GLB||e.options.imageOutputType===b.GLB;s&&(e.binChunkBuffer=new K(this.gltf)),t.forEachScene(r=>{this._addScene(r)}),s&&e.binChunkBuffer.finalize()}_addScene(t){this.gltf.scenes||(this.gltf.scenes=[]);const e={};t.name&&(e.name=t.name),t.forEachNode(s=>{e.nodes||(e.nodes=[]);const r=this._addNode(s);e.nodes.push(r)}),this.gltf.scenes.push(e)}_addNode(t){this.gltf.nodes||(this.gltf.nodes=[]);const e={};t.name&&(e.name=t.name);const s=t.translation;k(s,st)||(e.translation=U(s));const r=t.rotation;ot(r,ct)||(e.rotation=ft(r));const n=t.scale;k(n,j)||(e.scale=U(n)),t.mesh&&t.mesh.vertexAttributes.position?e.mesh=this._addMesh(t.mesh):t.forEachNode(o=>{e.children||(e.children=[]);const h=this._addNode(o);e.children.push(h)});const a=this.gltf.nodes.length;return this.gltf.nodes.push(e),a}_addMesh(t){this.gltf.meshes||(this.gltf.meshes=[]);const e={primitives:[]},s=this.gltf.extras,r=s.options.bufferOutputType===x.GLB;let n;n=r?s.binChunkBuffer:new K(this.gltf),this.params.origin||(this.params.origin=bt(t));const a=this.params.ignoreLocalTransform?it(t.transform,f=>new dt({origin:[f.origin[0],f.origin[1],f.origin[2]],geographic:!1})):t.transform,o=_t(t.vertexAttributes,a,this.params.origin,{geographic:this.params.geographic,unit:"meters"});At(t,o),this._flipYZAxis(o);const h=n.addBufferView(_.FLOAT,m.VEC3,y.ARRAY_BUFFER);let c,d,u,l;o.normal&&(c=n.addBufferView(_.FLOAT,m.VEC3,y.ARRAY_BUFFER)),t.vertexAttributes.uv&&(d=n.addBufferView(_.FLOAT,m.VEC2,y.ARRAY_BUFFER)),o.tangent&&(u=n.addBufferView(_.FLOAT,m.VEC4,y.ARRAY_BUFFER)),t.vertexAttributes.color&&(l=n.addBufferView(_.UNSIGNED_BYTE,m.VEC4,y.ARRAY_BUFFER)),h.startAccessor("POSITION"),c&&c.startAccessor("NORMAL"),d&&d.startAccessor("TEXCOORD_0"),u&&u.startAccessor("TANGENT"),l&&l.startAccessor("COLOR_0");const R=o.position.length/3,{position:E,normal:p,tangent:g}=o,{color:w,uv:L}=t.vertexAttributes;for(let f=0;f<R;++f)h.push(E[3*f]),h.push(E[3*f+1]),h.push(E[3*f+2]),c&&p!=null&&(c.push(p[3*f]),c.push(p[3*f+1]),c.push(p[3*f+2])),d&&L!=null&&(d.push(L[2*f]),d.push(L[2*f+1])),u&&g!=null&&(u.push(g[4*f]),u.push(g[4*f+1]),u.push(g[4*f+2]),u.push(g[4*f+3])),l&&w!=null&&(l.push(w[4*f]),l.push(w[4*f+1]),l.push(w[4*f+2]),l.push(w[4*f+3]));const X=h.endAccessor(),v=this._addAccessor(h.index,X);let C,z,F,V,S;if(c){const f=c.endAccessor();C=this._addAccessor(c.index,f)}if(d){const f=d.endAccessor();z=this._addAccessor(d.index,f)}if(u){const f=u.endAccessor();F=this._addAccessor(u.index,f)}if(l){const f=l.endAccessor();V=this._addAccessor(l.index,f)}t.components&&t.components.length>0&&t.components[0].faces?(S=n.addBufferView(_.UNSIGNED_INT,m.SCALAR,y.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(S,t.components,e,v,C,z,F,V)):this._addMeshVertexNonIndexed(t.components,e,v,C,z,F,V),h.finalize(),c&&c.finalize(),d&&d.finalize(),u&&u.finalize(),S&&S.finalize(),l&&l.finalize(),r||n.finalize();const Q=this.gltf.meshes.length;return this.gltf.meshes.push(e),Q}_flipYZAxis({position:t,normal:e,tangent:s}){this._flipYZBuffer(t,3),this._flipYZBuffer(e,3),this._flipYZBuffer(s,4)}_flipYZBuffer(t,e){if(t!=null)for(let s=1,r=2;s<t.length;s+=e,r+=e){const n=t[s],a=t[r];t[s]=a,t[r]=-n}}_addMaterial(t){if(t===null)return;const e=this._materialMap.indexOf(t);if(e!==-1)return e;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(t.alphaMode){case"mask":s.alphaMode=B.MASK;break;case"auto":case"blend":s.alphaMode=B.BLEND}t.alphaCutoff!==.5&&(s.alphaCutoff=t.alphaCutoff),t.doubleSided&&(s.doubleSided=t.doubleSided),s.pbrMetallicRoughness={};const r=o=>o**2.1,n=o=>{const h=o.toRgba();return h[0]=r(h[0]/255),h[1]=r(h[1]/255),h[2]=r(h[2]/255),h};if(t.color!=null&&(s.pbrMetallicRoughness.baseColorFactor=n(t.color)),t.colorTexture!=null&&(s.pbrMetallicRoughness.baseColorTexture={index:this._addTexture(t.colorTexture)}),t.normalTexture!=null&&(s.normalTexture={index:this._addTexture(t.normalTexture)}),t instanceof ut){if(t.emissiveTexture!=null&&(s.emissiveTexture={index:this._addTexture(t.emissiveTexture)}),t.emissiveColor!=null){const o=n(t.emissiveColor);s.emissiveFactor=[o[0],o[1],o[2]]}t.occlusionTexture!=null&&(s.occlusionTexture={index:this._addTexture(t.occlusionTexture)}),t.metallicRoughnessTexture!=null&&(s.pbrMetallicRoughness.metallicRoughnessTexture={index:this._addTexture(t.metallicRoughnessTexture)}),s.pbrMetallicRoughness.metallicFactor=t.metallic,s.pbrMetallicRoughness.roughnessFactor=t.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,D.warnOnce("Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.");const a=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(t),a}_addTexture(t){const e=this.gltf.textures??[];return this.gltf.textures=e,rt(this._textureMap,t,()=>{const s={sampler:this._addSampler(t),source:this._addImage(t)},r=e.length;return e.push(s),r})}_addImage(t){const e=this._imageMap.get(t);if(e!=null)return e;this.gltf.images||(this.gltf.images=[]);const s={};if(t.url)s.uri=t.url;else{const n=t.data;s.extras=n;for(let o=0;o<this.gltf.images.length;++o)if(n===this.gltf.images[o].extras)return o;const a=this.gltf.extras;switch(a.options.imageOutputType){case b.GLB:{const o=a.binChunkBuffer.addBufferView(_.UNSIGNED_BYTE,m.SCALAR);if(P(n))n.data!=null&&o.writeOutToBuffer(n.data,0);else{const h=H(n).then(({data:c,type:d})=>(s.mimeType=d,c));o.writeAsync(h).then(()=>{o.finalize()})}s.bufferView=o.index;break}case b.DataURI:if(P(n)){D.warnOnce("Image export for basis compressed textures not available.");break}s.uri=pt(n);break;default:if(P(n)){D.warnOnce("Image export for basis compressed textures not available.");break}a.promises.push(H(n).then(({data:o,type:h})=>{s.uri=o,s.mimeType=h}))}}const r=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(t,r),r}_addSampler(t){this.gltf.samplers||(this.gltf.samplers=[]);let e=T.REPEAT,s=T.REPEAT;if(typeof t.wrap=="string")switch(t.wrap){case"clamp":e=T.CLAMP_TO_EDGE,s=T.CLAMP_TO_EDGE;break;case"mirror":e=T.MIRRORED_REPEAT,s=T.MIRRORED_REPEAT}else{switch(t.wrap.vertical){case"clamp":s=T.CLAMP_TO_EDGE;break;case"mirror":s=T.MIRRORED_REPEAT}switch(t.wrap.horizontal){case"clamp":e=T.CLAMP_TO_EDGE;break;case"mirror":e=T.MIRRORED_REPEAT}}const r={wrapS:e,wrapT:s};for(let a=0;a<this.gltf.samplers.length;++a)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[a]))return a;const n=this.gltf.samplers.length;return this.gltf.samplers.push(r),n}_addAccessor(t,e){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:t,byteOffset:e.byteOffset,componentType:e.componentType,count:e.count,type:e.type,min:e.min,max:e.max,name:e.name};e.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(t,e,s,r,n,a,o,h){for(const c of e){t.startAccessor("INDICES");for(let l=0;l<c.faces.length;++l)t.push(c.faces[l]);const d=t.endAccessor(),u={attributes:{POSITION:r},indices:this._addAccessor(t.index,d),material:this._addMaterial(c.material)};n&&c.shading!=="flat"&&(u.attributes.NORMAL=n),a&&(u.attributes.TEXCOORD_0=a),o&&c.shading!=="flat"&&(u.attributes.TANGENT=o),h&&(u.attributes.COLOR_0=h),s.primitives.push(u)}}_addMeshVertexNonIndexed(t,e,s,r,n,a,o){const h={attributes:{POSITION:s}};r&&(h.attributes.NORMAL=r),n&&(h.attributes.TEXCOORD_0=n),a&&(h.attributes.TANGENT=a),o&&(h.attributes.COLOR_0=o),t&&(h.material=this._addMaterial(t[0].material)),e.primitives.push(h)}}let Nt=class{constructor(){this.copyright="",this.defaultScene=0,this.generator="",this._scenes=[]}addScene(t){if(this._scenes.includes(t))throw new Error("Scene already added");this._scenes.push(t)}removeScene(t){nt(this._scenes,t)}forEachScene(t){this._scenes.forEach(t)}};class Ot{constructor(){this.name="",this._nodes=[]}addNode(t){if(this._nodes.includes(t))throw new Error("Node already added");this._nodes.push(t)}forEachNode(t){this._nodes.forEach(t)}}class St{constructor(t){this.mesh=t,this.name="",this.translation=O(),this.rotation=lt(),this.scale=U(j),this._nodes=[]}addNode(t){if(this._nodes.includes(t))throw new Error("Node already added");this._nodes.push(t)}forEachNode(t){this._nodes.forEach(t)}set rotationAngles(t){ht(this.rotation,t[0],t[1],t[2])}}const It="model.gltf",W="model.glb";function Mt(i,t,e){var u;const s=new Rt(i,t=t||{},e);let r=s.params;r?r.origin||(r.origin=new G({x:-1,y:-1,z:-1})):r={origin:new G({x:-1,y:-1,z:-1})};const n=r.origin,a=s.gltf,o=((u=a.extras)==null?void 0:u.promises)??[];let h=1,c=1,d=null;return $(o).then(()=>{const l={origin:n};delete a.extras;const R=typeof t.jsonSpacing=="number"?t.jsonSpacing:4,E=JSON.stringify(a,(p,g)=>{if(p!=="extras"){if(g instanceof ArrayBuffer){if(mt(g))switch(t.imageOutputType){case b.DataURI:case b.GLB:break;case b.External:default:{const w=`img${c}.png`;return c++,l[w]=g,w}}switch(t.bufferOutputType){case x.DataURI:return gt(g);case x.GLB:if(d)throw new Error("Already encountered an ArrayBuffer, there should only be one in the GLB format.");return void(d=g);case x.External:default:{const w=`data${h}.bin`;return h++,l[w]=g,w}}}return g}},R);return t.bufferOutputType===x.GLB||t.imageOutputType===b.GLB?l[W]=new A(E,d).buffer:l[It]=E,l})}function Bt(i,t){return Mt(i,{bufferOutputType:x.GLB,imageOutputType:b.GLB,jsonSpacing:0},t)}class Lt{constructor(t,e){this._file={type:"model/gltf-binary",data:t},this.origin=e}buffer(){return Promise.resolve(this._file)}download(t){at(new Blob([this._file.data],{type:this._file.type}),t)}}function re(i,t){const e=new Nt,s=new Ot;return e.addScene(s),s.addNode(new St(i)),Bt(e,t).then(r=>new Lt(r[W],r.origin))}export{re as toBinaryGLTF};
