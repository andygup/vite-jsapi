import{ae as o,af as p,ai as h,b9 as g,d as l,J as d,D as u}from"./index-65afe59f.js";import{a as c}from"./BitmapContainer-2b8ea605.js";import{f as y,d as f}from"./LayerView-c66ee5b5.js";import{o as x}from"./GraphicsView2D-550446cc.js";import{n as w}from"./HighlightGraphicContainer-271535d5.js";import{v}from"./ExportStrategy-ccb6bb11.js";import{b as _}from"./commonProperties-605b6017.js";import{m as H}from"./ExportImageParameters-2d3b4b61.js";import{i as I}from"./RefreshableLayerView-67372cbe.js";import{P,r as V}from"./drapedUtils-6780a5d9.js";import"./WGLContainer-50657b8c.js";import"./definitions-e9823d3c.js";import"./VertexArrayObject-eb5e0ff5.js";import"./TextureDescriptor-9f6b1d53.js";import"./enums-74e97557.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-0ea5ee36.js";import"./enums-55085e26.js";import"./ProgramTemplate-d6438cda.js";import"./MaterialKey-d4d21a67.js";import"./utils-e7939558.js";import"./heatmapUtils-1ed1bbca.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-e8893995.js";import"./parser-8554880e.js";import"./earcut-0147fc3d.js";import"./featureConversionUtils-a232f677.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./ExpandedCIM-04e76692.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-ce722d8e.js";import"./floatRGBA-4ec8974c.js";import"./normalizeUtilsSync-45cc566b.js";import"./normalizeUtilsCommon-2b774e39.js";import"./projectionSupport-65ca4a6b.js";import"./json-48e3ea08.js";import"./labelingInfo-a25619a7.js";import"./labelUtils-ec59d2a3.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-15c906c8.js";import"./AttributeStoreView-d1776232.js";import"./TiledDisplayObject-d9916bb7.js";import"./visualVariablesUtils-a3fa934f.js";import"./visualVariablesUtils-79328d8b.js";import"./Matcher-1fbf8bdd.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-2482e49c.js";import"./LRUCache-fba88a6d.js";import"./MemCache-b8f96232.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-00c8d6d5.js";import"./featureFlags-acda3469.js";import"./schemaUtils-061a64ca.js";import"./sql-c4c85944.js";import"./diffUtils-0f0e8cfe.js";import"./clusterUtils-a342a95a.js";import"./SizeVariable-e7f3c0e2.js";import"./colorRamps-08b57831.js";import"./LegendOptions-d5bf6b73.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-00939dab.js";import"./util-6e5d3a25.js";import"./ComputedAttributeStorage-10273ffa.js";import"./FieldsIndex-6df00c0a.js";import"./arcadeTimeUtils-55255860.js";import"./executionError-fb3f283a.js";import"./centroid-8e8cfa47.js";import"./normalizeUtils-678d9dd1.js";import"./BaseGraphicContainer-e3c4bee3.js";import"./FeatureContainer-c0f53321.js";import"./TileContainer-74f018b1.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-d369a9fa.js";import"./ElevationInfo-926fbbdf.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-d3893455.js";import"./scaleUtils-97cba7b2.js";import"./popupUtils-08cb0583.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return o([p()],i.prototype,"exportImageParameters",void 0),o([p({readOnly:!0})],i.prototype,"floors",null),o([p({readOnly:!0})],i.prototype,"exportImageVersion",null),o([p()],i.prototype,"layer",void 0),o([p()],i.prototype,"suspended",void 0),o([p(_)],i.prototype,"timeExtent",void 0),i=o([h("esri.views.layers.MapImageLayerView")],i),i};let a=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this.declaredClass).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,e=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(s,m)=>V(s,m,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,m)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:m})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:e,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,e){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}fetchImageBitmap(t,i,r,e){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([p()],a.prototype,"strategy",void 0),o([p()],a.prototype,"updating",void 0),a=o([h("esri.views.2d.layers.MapImageLayerView2D")],a);const oi=a;export{oi as default};
