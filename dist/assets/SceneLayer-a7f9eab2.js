import{e as i,y as o,a as v,bB as R,nJ as M,V as F,j as I,b6 as W,gt as O,iX as z,bD as c,t as B,ai as H,aY as Z,gE as Y,L as D,eK as X,aH as ee,h8 as $,dB as te,d as u,Y as re,bc as ie,K as p,B as se,h7 as oe,_ as ae,fx as ne,hl as E,k as le,b3 as pe,gl as de,hd as ye,a$ as ue}from"./index-ebffac9a.js";import"./UniqueValueRenderer-1e273e84.js";import{n as ce}from"./jsonUtils-2e3cf42f.js";import{O as he}from"./MultiOriginJSONSupport-8564e0a9.js";import{i as fe}from"./APIKeyMixin-578bd2ec.js";import{l as me}from"./ArcGISService-d99bd511.js";import{c as ge}from"./EditBusLayer-6ecad90c.js";import{c as ve}from"./OperationalLayer-6d575663.js";import{j as be}from"./PortalLayer-9a9f290e.js";import{t as we}from"./ScaleRangeLayer-a374a131.js";import{N as Ie,K as x}from"./SceneService-40e6ab2a.js";import{t as Le}from"./capabilities-c13ec1a4.js";import{d as Se,m as Fe,c as je,p as _e,l as Oe}from"./commonProperties-50fc1190.js";import{t as $e,a as Ee}from"./FeatureReductionLayer-96052c96.js";import{s as xe}from"./FetchAssociatedFeatureLayer-9061520b.js";import{s as Te}from"./fieldProperties-a40a4651.js";import{r as Ae}from"./FieldsIndex-ed9267b4.js";import{s as N,l as Pe,u as Re,m as De}from"./I3SLayerDefinitions-75641936.js";import{C as Ne,i as T}from"./labelingInfo-b3e440ff.js";import{p as Ce}from"./serviceCapabilitiesUtils-5493bd8e.js";import{g as Ue}from"./persistable-256ca039.js";import{t as qe}from"./styleUtils-d9b8c11c.js";import{b as Qe}from"./Query-d081b67e.js";import{p as Ge}from"./popupUtils-d363b49e.js";import{l as ke}from"./I3SUtil-cf827861.js";import{p as Ve,d as Ke}from"./popupUtils-8718a4ab.js";import"./ColorStop-022cb10b.js";import"./diffUtils-070c5609.js";import"./colorRamps-252dbf2c.js";import"./DictionaryLoader-f7a481a0.js";import"./LRUCache-bcacffcf.js";import"./heatmapUtils-202eebb3.js";import"./portalItemUtils-a90a3682.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./I3SIndexInfo-062a01c4.js";import"./resourceUtils-76dfdf8d.js";import"./ElevationInfo-b2766669.js";import"./FeatureEffect-9ac45330.js";import"./jsonUtils-cb5066f8.js";import"./FeatureFilter-bb432d61.js";import"./FeatureLayer-b3085822.js";import"./sql-2f93e553.js";import"./FeatureLayerBase-2ba92399.js";import"./AttachmentQuery-8ea2465f.js";import"./RelationshipQuery-9d5cc95f.js";import"./editsZScale-9781b9a7.js";import"./queryZScale-29014927.js";import"./FeatureSet-4557a301.js";import"./BlendLayer-3c1f048d.js";import"./CustomParametersMixin-935b77ee.js";import"./OrderedLayer-16546086.js";import"./TemporalLayer-e1ed1ea4.js";import"./FeatureTemplate-701c82ac.js";import"./FeatureType-24aebfe0.js";import"./versionUtils-14dabf66.js";import"./TopFeaturesQuery-279b94aa.js";import"./defaults-2d143f10.js";import"./defaultsJSON-59981e75.js";import"./resourceExtension-1e91c4c7.js";import"./I3SBinaryReader-178043e6.js";let y=class extends R{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([o({type:String,json:{read:!0,write:!0}})],y.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],y.prototype,"field",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],y.prototype,"currentRangeExtent",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],y.prototype,"fullRangeExtent",void 0),i([o({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],y.prototype,"type",void 0),y=i([v("esri.layers.support.RangeInfo")],y);var m;let L=m=class extends M(F.ofType(I)){constructor(e){super(e)}clone(){return new m(this.items.map(e=>e.clone()))}write(e,r){return this.toJSON(r)}toJSON(e){var t;const r=(t=e==null?void 0:e.layer)==null?void 0:t.spatialReference;return r?this.toArray().map(a=>{if(!r.equals(a.spatialReference)){if(!W(a.spatialReference,r))return e&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new I;z(a,l,r),a=l}const n=a.toJSON(e);return delete n.spatialReference,n}).filter(a=>a!=null):(e!=null&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(a=>a.toJSON(e)))}static fromJSON(e,r){const t=new m;return e.forEach(a=>t.add(I.fromJSON(a,r))),t}};L=m=i([v("esri.layers.support.PolygonCollection")],L);const g=L;var S;let h=S=class extends R{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new g,this._geometriesSource=null,this._handles=new B}initialize(){this._handles.add(H(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,Z))}destroy(){this._handles.destroy()}readGeometries(e,r,t){Array.isArray(e)?this.geometries=g.fromJSON(e,t):this._geometriesSource={url:Y(e,t),context:t}}async loadGeometries(e,r){if(this._geometriesSource==null)return;const{url:t,context:a}=this._geometriesSource,n=await D(t,{responseType:"json",signal:r==null?void 0:r.signal}),l=e.toJSON(),d=n.data.map(b=>({...b,spatialReference:l}));this.geometries=g.fromJSON(d,a),this._geometriesSource=null}clone(){return new S({geometries:X(this.geometries),spatialRelationship:this.spatialRelationship})}};i([o({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],h.prototype,"spatialRelationship",void 0),i([o({type:g,nonNullable:!0,json:{write:!0}}),Ue({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],h.prototype,"geometries",void 0),i([c(["web-scene","portal-item"],"geometries")],h.prototype,"readGeometries",null),h=S=i([v("esri.layers.support.SceneFilter")],h);const Je=h,Me=["3DObject","Point"],A=Te();let s=class extends ge(Ie(me(ve(be(we(he(fe(ee(ue))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new F,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){var a,n,l;const t=(n=(a=this.getFeatureType(r==null?void 0:r.feature))==null?void 0:a.domains)==null?void 0:n[e];return t&&t.type!=="inherited"?t:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get fieldsIndex(){return new Ae(this.fields)}readNodePages(e,r,t){return r.layerType==="Point"&&(e=r.pointNodePages),e==null||typeof e!="object"?null:N.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return We[this.profile]||"mesh"}set renderer(e){$(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var j,_;const e=((j=this.associatedLayer)==null?void 0:j.capabilities)??Le,{query:r,editing:{supportsGlobalId:t,supportsRollbackOnFailure:a,supportsUploadWithItemId:n,supportsGeometryUpdate:l,supportsReturnServiceEditsInSourceSpatialReference:d},data:{supportsZ:b,supportsM:C,isVersioned:U,supportsAttachment:q},operations:{supportsEditing:Q,supportsAdd:G,supportsUpdate:k,supportsDelete:V,supportsQuery:K,supportsQueryAttachments:J}}=e,f=e.operations.supportsChangeTracking,w=!!((_=this.associatedLayer)!=null&&_.infoFor3D)&&te();return{query:r,editing:{supportsGlobalId:t,supportsReturnServiceEditsInSourceSpatialReference:d,supportsRollbackOnFailure:a,supportsGeometryUpdate:w&&l,supportsUploadWithItemId:n},data:{supportsAttachment:q,supportsZ:b,supportsM:C,isVersioned:U},operations:{supportsQuery:K,supportsQueryAttachments:J,supportsEditing:Q&&f,supportsAdd:w&&G&&f,supportsDelete:w&&V&&f,supportsUpdate:k&&f}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,r){const t=r.store.profile;return t!=null&&P[t]?P[t]:(u.getLogger(this.declaredClass).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}load(e){const r=e!=null?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(re).then(()=>this._fetchService(r)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,r),this._setAssociatedFeatureLayer(r),this.filter!=null?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>qe(this,{origin:"service"},r)).then(()=>$(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(t),Promise.resolve(this)}async beforeSave(){this.filter!=null&&await this.load()}createQuery(){const e=new Qe;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),r))}queryFeatureCount(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),r))}queryFeatures(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),r)).then(t=>{if(t!=null&&t.features)for(const a of t.features)a.layer=this,a.sourceLayer=this;return t})}async queryCachedAttributes(e,r){const t=ie(this.fieldsIndex,await Ve(this,Ke(this)));return ke(this.parsedUrl.path,this.attributeStorageInfo??[],e,r,t)}async queryCachedFeature(e,r){const t=await this.queryCachedAttributes(e,[r]);if(!t||t.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new se;return a.attributes=t[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),r))}queryAttachments(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,r))}getFieldUsageInfo(e){const r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||r:(u.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)}createPopupTemplate(e){return Ge(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(r=>r.name===e)}async queryCachedStatistics(e,r){if(await this.load(r),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const t=this.fieldsIndex.get(e);if(!t)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const a of this.statisticsInfo)if(a.name===t.name){const n=oe(this.parsedUrl.path,a.href);return D(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:r?r.signal:null}).then(l=>l.data)}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,r){return this._debouncedSaveOperations(x.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(x.SAVE,e)}async applyEdits(e,r){const{applyEdits:t}=await ae(()=>import("./editingSupport-37f89b2f.js"),["assets/editingSupport-37f89b2f.js","assets/index-ebffac9a.js","assets/index-0492b785.css","assets/normalizeUtils-d72d23be.js","assets/normalizeUtilsCommon-bca31cde.js","assets/EditBusLayer-6ecad90c.js","assets/infoFor3D-5881142c.js"]);if(await this.load(),!this.associatedLayer)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),t(this,this.associatedLayer.source,e,r)}async uploadAssets(e,r){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,r)}on(e,r){return super.on(e,r)}validateLayer(e){if(e.layerType&&!Me.includes(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function r(t,a){let n=!1,l=!1;if(t==null)n=!0,l=!0;else{const d=a&&a.isGeographic;switch(t){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}r(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,r;if(this._fieldUsageInfo={},this.fields)for(const t of this.fields){const a=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(d=>d.name===t.name)),n=!!((r=(e=this.associatedLayer)==null?void 0:e.fields)!=null&&r.some(d=>d&&t.name===d.name)),l={supportsLabelingInfo:a,supportsRenderer:a,supportsPopupTemplate:a||n,supportsLayerQuery:n};this._fieldUsageInfo[t.name]=l}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){var r;if(!((r=this.associatedLayer)!=null&&r.fields))return;let e=null;for(const t of this.associatedLayer.fields){const a=this.getField(t.name);a?(!a.domain&&t.domain&&(a.domain=t.domain.clone()),a.editable=t.editable,a.nullable=t.nullable,a.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],r=ne(this);for(let t=0;t<e.length;t++){const a=e[t],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===E.SERVICE||l===E.PORTAL_ITEM)&&r.setAtOrigin(a,this.associatedLayer[a],l)}}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const r=new xe(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await r.fetch()}catch(t){le(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await pe(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?u.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):u.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&u.getLogger(this.declaredClass).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&u.getLogger(this.declaredClass).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};i([o({types:{key:"type",base:$e,typeMap:{selection:Ee}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],s.prototype,"featureReduction",void 0),i([o({type:[y],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],s.prototype,"rangeInfos",void 0),i([o({json:{read:!1}})],s.prototype,"associatedLayer",void 0),i([o({type:["show","hide"]})],s.prototype,"listMode",void 0),i([o({type:["ArcGISSceneServiceLayer"]})],s.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([o({...A.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"fields",void 0),i([o()],s.prototype,"types",null),i([o()],s.prototype,"typeIdField",null),i([o()],s.prototype,"templates",null),i([o()],s.prototype,"formTemplate",null),i([o({readOnly:!0})],s.prototype,"fieldsIndex",null),i([o({type:Ce,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],s.prototype,"floorInfo",void 0),i([o(A.outFields)],s.prototype,"outFields",void 0),i([o({type:N,readOnly:!0,json:{read:!1}})],s.prototype,"nodePages",void 0),i([c("service","nodePages",["nodePages","pointNodePages"])],s.prototype,"readNodePages",null),i([o({type:[Pe],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([o({type:[Re],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([o({type:[De],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([o({readOnly:!0})],s.prototype,"attributeStorageInfo",void 0),i([o({readOnly:!0})],s.prototype,"statisticsInfo",void 0),i([o({type:F.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],s.prototype,"excludeObjectIds",void 0),i([o({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),i([o({type:Je,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],s.prototype,"filter",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),i([o(Se)],s.prototype,"elevationInfo",null),i([o({type:String})],s.prototype,"geometryType",null),i([o(Fe)],s.prototype,"labelsVisible",void 0),i([o({type:[Ne],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:T},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:T},write:!0}})],s.prototype,"labelingInfo",void 0),i([o(je)],s.prototype,"legendEnabled",void 0),i([o({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,r){var a,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const t=(n=(a=r.layerDefinition)==null?void 0:a.drawingInfo)==null?void 0:n.transparency;return t!==void 0?de(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],s.prototype,"opacity",void 0),i([o({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"priority",void 0),i([o({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"semantic",void 0),i([o({types:ce,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],s.prototype,"renderer",null),i([o({json:{read:!1}})],s.prototype,"cachedDrawingInfo",void 0),i([c("service","cachedDrawingInfo")],s.prototype,"readCachedDrawingInfo",null),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"capabilities",null),i([o({type:Boolean,json:{read:!1}})],s.prototype,"editingEnabled",null),i([o({readOnly:!0,json:{write:!1,read:!1}})],s.prototype,"infoFor3D",null),i([o(_e)],s.prototype,"popupEnabled",void 0),i([o({type:ye,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"defaultPopupTemplate",null),i([o({type:String,json:{read:!1}})],s.prototype,"objectIdField",void 0),i([c("service","objectIdField",["objectIdField","fields"])],s.prototype,"readObjectIdField",null),i([o({type:String,json:{read:!1}})],s.prototype,"globalIdField",void 0),i([c("service","globalIdField",["globalIdField","fields"])],s.prototype,"readGlobalIdField",null),i([o({readOnly:!0,type:String,json:{read:!1}})],s.prototype,"displayField",null),i([o({type:String,json:{read:!1}})],s.prototype,"profile",void 0),i([c("service","profile",["store.profile"])],s.prototype,"readProfile",null),i([o({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],s.prototype,"normalReferenceFrame",void 0),i([o(Oe)],s.prototype,"screenSizePerspectiveEnabled",void 0),s=i([v("esri.layers.SceneLayer")],s);const P={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},We={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},tr=s;export{tr as default};
