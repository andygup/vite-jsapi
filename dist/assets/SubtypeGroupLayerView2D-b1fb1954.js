import{ae as m,ai as d,D as u,E as y,m as h}from"./index-14d2dda4.js";import{d as b}from"./FeatureEffect-92e6910a.js";import c from"./FeatureLayerView2D-7dc4c888.js";import"./jsonUtils-a36fe77b.js";import"./parser-2b4f8653.js";import"./Query-8331d88c.js";import"./Field-940c73fc.js";import"./fieldType-dff07b04.js";import"./Container-6fce2343.js";import"./definitions-e9823d3c.js";import"./enums-74e97557.js";import"./TextureDescriptor-dd8f8170.js";import"./FeatureSet-dafc32c0.js";import"./LayerView-95c07669.js";import"./schemaUtils-c1ffacf4.js";import"./sql-aad2f0d6.js";import"./diffUtils-e41e7cfb.js";import"./labelingInfo-64f45510.js";import"./labelUtils-5183e23d.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-735c5a2c.js";import"./color-a9035b51.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./utils-a443dbbb.js";import"./MaterialKey-cdde707f.js";import"./heatmapUtils-9d164d0d.js";import"./vec4f64-aa64c7e9.js";import"./visualVariablesUtils-df5882fe.js";import"./ExpandedCIM-3ebf2dc7.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-4b26010a.js";import"./floatRGBA-8fa6e5fb.js";import"./featureFlags-e4b4949b.js";import"./clusterUtils-5e65db1a.js";import"./SizeVariable-7117b0a7.js";import"./colorRamps-f76c50ec.js";import"./LegendOptions-eb9bc746.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-db44513a.js";import"./util-0c73c60a.js";import"./commonProperties-9493f038.js";import"./ElevationInfo-627eea7b.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-eee489a3.js";import"./RefreshableLayerView-8b2d03ad.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let p=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};p=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const ue=p;export{ue as default};
