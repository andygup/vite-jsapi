import{cu as v,J as f,fL as g,fM as w,c,fN as V,s as b,Z as D,L as p,bx as L,_ as m,ae as o,af as n,bF as S,f3 as T,ai as $,a$ as x}from"./index-175d32d0.js";import{O as k}from"./MultiOriginJSONSupport-717d0bca.js";import{a as I}from"./ArcGISCachedService-e922417a.js";import{l as N}from"./ArcGISService-f83509f7.js";import{c as E}from"./OperationalLayer-99f6f269.js";import{j as O}from"./PortalLayer-52ac5aae.js";import{f as j}from"./commonProperties-1c6cac45.js";import"./TilemapCache-a823deb3.js";import"./ByteSizeUnit-d4757d40.js";import"./LRUCache-05c2e0c8.js";import"./MemCache-8e066c91.js";import"./portalItemUtils-2b04e7ed.js";import"./ElevationInfo-ed295995.js";import"./lengthUtils-349f6f20.js";class P{constructor(e,t,r,s){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=r,this.noDataValue=s)}get hasNoDataValues(){if(this._hasNoDataValues==null){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}_ensureBounds(){if(this._minValue!=null)return;const{noDataValue:e,values:t}=this;let r=1/0,s=-1/0,h=!0;for(const l of t)l===e?this._hasNoDataValues=!0:(r=l<r?l:r,s=l>s?l:s,h=!1);h?(this._minValue=0,this._maxValue=0):(this._minValue=r,this._maxValue=s>-3e38?s:0)}}class A{constructor(e,t,r,s,h={}){this._mainMethod=t,this._transferLists=r,this._listeners=[],this._promise=v(e,{...h,schedule:s}).then(l=>{if(this._thread===void 0){this._thread=l,this._promise=null,h.hasInitialize&&this.broadcast({},"initialize");for(const d of this._listeners)this._connectListener(d)}else l.close()}),this._promise.catch(l=>f.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${l}`))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),g(()=>{r.removed=!0,w(this._listeners,r),this._thread&&r.threadHandle!=null&&r.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null,this._listeners.length=0,this._transferLists={}}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const s=this._transferLists[e],h=s?s(t):[];return this._thread.invoke(e,t,{transferList:h,signal:r})}return this._promise?this._promise.then(()=>(c(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class y extends A{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}release(){--this.ref<=0&&(u.forEach((e,t)=>{e===this&&u.delete(t)}),this.destroy())}}const u=new Map;function M(i=null){let e=u.get(i);return e||(i!=null?(e=new y(t=>i.immediate.schedule(t)),u.set(i,e)):(e=new y,u.set(null,e))),++e.ref,e}let a=class extends I(N(E(O(k(x))))){constructor(...i){super(...i),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=M()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=V(this._lercDecoder)}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let r=0;r<t.typeKeywords.length;r++)if(t.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0;throw new b("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(D).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(i,e,t,r){const s=(r=r||{signal:null}).signal!=null?r.signal:r.signal=new AbortController().signal,h={responseType:"array-buffer",signal:s},l={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(i,e,t,r)).then(()=>p(this.getTileUrl(i,e,t),h)).then(d=>this._lercDecoder.decode(d.data,l,s)).then(d=>new P(d))}getTileUrl(i,e,t){const r=!this.tilemapCache&&this.supportsBlankTile,s=L({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${s?"?"+s:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await m(()=>import("./ElevationQuery-006a180c.js"),["assets/ElevationQuery-006a180c.js","assets/index-175d32d0.js","assets/index-d832a396.css"]);return c(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await m(()=>import("./ElevationQuery-006a180c.js"),["assets/ElevationQuery-006a180c.js","assets/index-175d32d0.js","assets/index-d832a396.css"]);return c(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,r):Promise.resolve("unknown")}async _fetchImageService(i){var r;if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await p(this.parsedUrl.path,e);t.ssl&&(this.url=(r=this.url)==null?void 0:r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[_]}};o([n({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),o([n({readOnly:!0,type:T})],a.prototype,"heightModelInfo",void 0),o([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),o([n({type:["show","hide"]})],a.prototype,"listMode",void 0),o([n({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),o([n({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),o([n({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),o([n({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),o([n()],a.prototype,"sourceJSON",void 0),o([n({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),o([n(j)],a.prototype,"url",void 0),o([n()],a.prototype,"version",void 0),o([S("version",["currentVersion"])],a.prototype,"readVersion",null),a=o([$("esri.layers.ElevationLayer")],a);const _=Symbol("default-fetch-tile");a.prototype.fetchTile[_]=!0;const X=a;export{X as default};
