import{b7 as pt,li as Z,hC as rt,d as ze,K as O,bC as Ee,a3 as A,by as H,L as nt,e1 as yt,r7 as at,eb as gt,e as b,y as R,a as Q,bB as xt,_ as wt,W as Le,bz as q,bD as It,hh as bt,G as ot,ay as Pe,v as St,bm as Rt,T as vt,gY as Tt,h5 as _t,Y as kt,fE as ue,g as Ft,fz as Ct,fy as Mt,hd as Pt,a$ as $t}from"./index-bdad94d1.js";import{O as Ot}from"./MultiOriginJSONSupport-60332d9e.js";import{l as Bt}from"./ArcGISService-1851ba5b.js";import{a as Dt}from"./BlendLayer-49bfabe4.js";import{o as zt}from"./CustomParametersMixin-20743481.js";import{n as lt,D as Et,r as Nt,s as Jt,p as ct,c as At,w as $e,l as Ht,d as Lt,a as Wt,h as qt,e as We,u as Gt,v as qe,Q as Ge,E as je,g as jt,L as Ut,q as Vt,k as Ue,t as Yt,b as Xt,o as Kt}from"./ImageHistogramParameters-29f226b1.js";import{f as ut,c as Qt}from"./commonProperties-ea87c313.js";import{U as _e,j as Zt,N as ye,R as ht,I as ei,a as ti,O as ii,a2 as si,u as ee,f as ri,m as ni,s as ai,L as oi,a3 as Ve,b as ge,W as li,h as ci,a4 as Ne,P as ui,a5 as hi,a6 as fi,a7 as di,a8 as mi,a9 as pi,aa as yi,ab as xe,ac as gi,ad as xi,ae as wi}from"./dataUtils-624ebab0.js";import{k as Oe,K as we,_ as Ye,i as Xe,n as Ii,Q as ke,q as Se,$ as bi,V as Si,C as Ri,J as vi}from"./rasterProjectionHelper-d98054ec.js";import{N as Be,f as Ti,i as _i,y as Je,n as ki,C as Fi}from"./utils-a2539ee5.js";import{c as Ci}from"./OperationalLayer-6d869fbc.js";import{j as Mi}from"./PortalLayer-47bcd3d8.js";import{t as Pi}from"./ScaleRangeLayer-ccfb81e3.js";import{a as $i}from"./TemporalLayer-316aae95.js";import{g as ft}from"./FeatureSet-973dd09f.js";import{T as Oi}from"./TilemapCache-f8fab1d8.js";import{p as Bi}from"./popupUtils-c1ca5a99.js";import"./jsonUtils-1baf7cbc.js";import"./UniqueValueRenderer-0032343a.js";import"./ColorStop-4e0fcd9e.js";import"./diffUtils-a0d8d1c6.js";import"./colorRamps-cdef51b0.js";import"./normalizeUtils-3af4ec27.js";import"./normalizeUtilsCommon-bc7a1c66.js";import"./generateRendererUtils-218844b8.js";import"./ElevationInfo-3fa56032.js";import"./colorUtils-c0f43caf.js";import"./portalItemUtils-cf820457.js";let Di=class{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const t=e+"/"+r,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.refCount--,n.refCount<=0&&(i.delete(t),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,r){const t=e+"/"+r,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.ts=Date.now(),n.refCount++,i.delete(t),i.set(t,n),n.block}return null}putBlock(e,r,t,i){const n=this._cachedBlocks,a=e+"/"+r;if(n.has(a)){const o=n.get(a);o.ts=Date.now(),o.refCount++}else n.set(a,{block:t,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,r){const t=this._cachedBlocks,i=e+"/"+r;t.has(i)&&t.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),t=Date.now();for(let i=0;i<r.length&&r[i][1].ts<=t-this._duration;i++)e.delete(r[i][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let t=0;t<r.length-this._size;t++)e.delete(r[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const ve=new Map,ie=new Di;function Ke(s,e){return e==null?s:`${s}?sliceId=${e}`}function zi(s,e,r){var a,o;const t=ve.get(s);if(!t)return e==null?ie.decreaseRefCount(s,r):0;if(e==null||t[e]==null)return ie.decreaseRefCount(s,r);const i=(a=t[e])==null?void 0:a.cache,n=i==null?void 0:i.get(r);if(i&&n){if(n.refCount--,n.refCount===0){i.delete(r);for(let l=0;l<t.length;l++)(o=t[l])==null||o.cache.delete(r);n.controller&&n.controller.abort()}return n.refCount}return 0}function Qe(s,e,r){var n,a,o;const t=ve.get(s);if(!t)return e==null?ie.getBlock(s,r):null;if(e==null||t[e]==null){for(let l=0;l<t.length;l++){const c=(n=t[l])==null?void 0:n.cache.get(r);if(c)return c.refCount++,c.block}return ie.getBlock(s,r)}const i=(a=t[e])==null?void 0:a.cache.get(r);if(i)return i.refCount++,i.block;for(let l=0;l<t.length;l++){if(l===e||!t[l])continue;const c=(o=t[l])==null?void 0:o.cache,h=c==null?void 0:c.get(r);if(c&&h)return h.refCount++,c.set(r,h),h.block}return null}function Ze(s,e,r,t,i=null){var o;const n=ve.get(s);if(!n)return void(e==null&&ie.putBlock(s,r,t,i));if(e==null||n[e]==null)return void ie.putBlock(s,r,t,i);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:i};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(o=n[e])==null||o.cache.set(r,a)}function Ei(s,e,r){var i;const t=ve.get(s);t?e!=null&&t[e]!=null?(i=t[e])==null||i.cache.delete(r):ie.deleteBlock(s,r):e==null&&ie.deleteBlock(s,r)}const et=8,Ni=256;let L=class extends pt(xt){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const s=Oe();this.addResolvingPromise(s),await this.when()}normalizeCtorArgs(s){return s&&s.ioConfig&&(s={...s,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create(),...s.ioConfig}}),s}get _isGlobalWrappableSource(){const{rasterInfo:s}=this,e=we(s.spatialReference);return e!=null&&s.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:s}=this.rasterInfo;return s==null||s.type==="gcs-shift"}set rasterJobHandler(s){var e,r;this._set("rasterJobHandler",s),this.datasetFormat==="Function"&&((r=(e=this.primaryRasters)==null?void 0:e.rasters)==null||r.forEach(t=>t.rasterJobHandler=s))}set url(s){this._set("url",rt(s,ze.getLogger(this.declaredClass)))}async open(s){throw new O("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(s,e,r,t={}){const i=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(s,e,r,i);return this.fetchPixels(n,i.size[0],i.size[1],t)}async identify(s,e={}){var C;s=Ee(A,s).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:i}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=i;let{transposedVariableName:o}=e;const l=a!=null&&n&&(t!=null||lt(r));l&&!o&&(o=r!=null&&r.length>0?r[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:h}=i,{datumTransformation:u}=e;let d=Ye(s,c,u);if(!h.intersects(d))return{location:d,value:null};if(i.transform!=null){const M=i.transform.inverseTransform(d);if(!i.nativeExtent.intersects(M))return{location:M,value:null};d=M}let m=0;const p=o!=null&&a!=null&&i.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const M=this.primaryRasters.rasters[0];if(p)return M.identify(d,e);const{pixelSize:N}=i,$=3,P=N.x*$/2,B=N.y*$/2,z=new H({xmin:d.x-P,xmax:d.x+P,ymin:d.y-B,ymax:d.y+B,spatialReference:c}),V={interpolation:"nearest"},{pixelBlock:J}=await M.fetchPixels(z,$,$,V),{pixelBlock:D}=await this.fetchPixels(z,$,$,V);if(J==null)return{location:d,value:null};const j=Math.floor($*$*.5),le=!J.mask||J.mask[j]?J.pixels.map(G=>G[j]):null;let Y;return D!=null&&(Y=!D.mask||D.mask[j]?D.pixels.map(G=>G[j]):void 0),{location:d,value:le,processedValue:Y,pyramidLevel:0}}if(!p){if(e.srcResolution)m=Xe(e.srcResolution,i,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(s,e),m==null)return{location:d,value:null}}const g=this.identifyPixelLocation(d,m,null,p);if(g===null)return{location:d,value:null};const{row:f,col:y,rowOffset:x,colOffset:w,blockWidth:S}=g,T=o??e.sliceId,v=Ke(this.url,T),F=`${m}/${f}/${y}`;let _=Qe(v,null,F);_==null&&(_=this.fetchRawTile(m,f,y,e),Ze(v,null,F,_));const k=await _;if(k==null||!((C=k.pixels)!=null&&C.length))return{location:d,value:null};const I=x*S+w;return this._processIdentifyResult(k,{srcLocation:d,position:I,pyramidLevel:m,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(s,e,r,t={}){s=Ii(s),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:i}=this;if(t.requestRawData&&i)return this._fetchPixels(s,e,r,t);const n=we(s.spatialReference),a=ke(s);if(n==null||a===0||a===1&&this._isGlobalWrappableSource&&i)return this._fetchPixels(s,e,r,t);if(a>=3)return{extent:s,pixelBlock:null};const o=[],{xmin:l,xmax:c}=s,h=Math.round(n/(c-l)*e),u=h-Math.round((n/2-l)/(c-l)*e);let d=0;const m=[];for(let y=0;y<=a;y++){const x=new H({xmin:y===0?l:-n/2,xmax:y===a?c-n*y:n/2,ymin:s.ymin,ymax:s.ymax,spatialReference:s.spatialReference}),w=y===0?h-u:y===a?e-d:h;d+=w,m.push(w);const S=t.disableWrapAround&&y>0?null:this._fetchPixels(x,w,r,t);o.push(S)}const p=(await Promise.all(o)).map(y=>y==null?void 0:y.pixelBlock);let g=null;const f={width:e,height:r};return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:f,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},t)).pixelBlock:g=_e(p,f,{blockWidths:m}),{extent:s,srcExtent:Se(s,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:g}}async fetchRawPixels(s,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const i=await this._fetchRawTiles(s,e,r,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**s,c=a.x*l,h=a.y*l,u=new H({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-h*(e.y+r.height-1),ymax:n.ymax-h*e.y,spatialReference:n.spatialReference});if(!i)return{extent:u,srcExtent:u,pixelBlock:null};const{pixelBlocks:d,mosaicSize:m}=i;if(d.length===1&&d[0]!=null&&d[0].width===r.width&&d[0].height===r.height)return{extent:u,srcExtent:u,pixelBlock:i.pixelBlocks[0]};const p=s>0?o.pyramidBlockWidth:o.blockWidth,g=s>0?o.pyramidBlockHeight:o.blockHeight,f={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:m,destDimension:r,clipOffset:f,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=_e(d,m,{clipOffset:f,clipSize:r}),{extent:u,srcExtent:u,pixelBlock:y}}fetchRawTile(s,e,r,t){throw new O("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(s){return Se(this.rasterInfo.extent,s)}decodePixelBlock(s,e){return!this.rasterJobHandler||e.useCanvas?Zt(s,e):this.rasterJobHandler.decode({data:s,options:e})}async request(s,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:i,query:n,headers:a}=e;r=r??e.retryCount??this.ioConfig.retryCount;const o=i?{Range:`bytes=${i.from}-${i.to}`}:null;try{return await nt(s,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(r>0)return r--,this.request(s,e,r);throw l}}getSliceIndex(s){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||s==null||s.length===0?null:Et(s,e)}getTileExtentFromTileInfo(s,e,r,t){const i=yt(t.lodAt(s));return this.getTileExtent({x:i.resolution,y:i.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:s,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo;if(!s.tileInfo){const i=[],n=s.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)i.push(new at({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new A({x:r.xmin,y:r.ymax,spatialReference:e});s.tileInfo=new Z({origin:l,size:[s.blockWidth,s.blockHeight],spatialReference:e,lods:i}),s.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(s,e=512,r=512,t){const{width:i,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=s,c=new A({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const h=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);s.storageInfo=new ye({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:h})}async computeBestPyramidLevelForLocation(s,e={}){return 0}computeBlockBoundary(s,e,r,t,i,n=0,a=2){if(i.length===1&&n>0){i=[...i];let{x:h,y:u}=i[0];for(let d=0;d<n;d++)h*=a,u*=a,i.push({x:h,y:u})}const o=[],{x:l,y:c}=t;for(let h=0;h<i.length;h++){const{x:u,y:d}=i[h];o.push({minCol:Math.floor((s.xmin-l+.1*u)/e/u),maxCol:Math.floor((s.xmax-l-.1*u)/e/u),minRow:Math.floor((c-s.ymax+.1*d)/r/d),maxRow:Math.floor((c-s.ymin-.1*d)/r/d)})}return o}getPyramidPixelSize(s){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(s===0)return e;if(r!=null&&r.length)return r[s-1];const i=t**s;return{x:e.x*i,y:e.y*i}}identifyPixelLocation(s,e,r,t){const{spatialReference:i,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,h=t&&c!=null?c.tileSize[0]:a.blockWidth,u=t&&c!=null?c.tileSize[1]:a.blockHeight,d=Ye(s,i,r);if(!n.intersects(d)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:p,y:g}=m,f=(l.y-d.y)/g/u,y=(d.x-l.x)/p/h,x=Math.min(u-1,Math.floor((f-Math.floor(f))*u)),w=Math.min(h-1,Math.floor((y-Math.floor(y))*h));return{pyramidLevel:e,row:Math.floor(f),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:h,srcLocation:d}}getTileExtent(s,e,r,t,i,n){const[a,o]=n,l=t.x+r*a*s.x,c=l+a*s.x,h=t.y-e*o*s.y,u=h-o*s.y;return new H({xmin:l,xmax:c,ymin:u,ymax:h,spatialReference:i})}getBlockWidthHeight(s){return{blockWidth:s>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:s>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(s,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[s];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}async _fetchPixels(s,e,r,t={}){let i=ke(s);if(i>=2)return{extent:s,pixelBlock:null};const n=this._getSourceDataInfo(s,e,r,t),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:h,ul:u}=n;if(c===0||h===0)return{extent:s,srcExtent:l,pixelBlock:null};const{rasterInfo:d}=this,m=d.transform,p=(m==null?void 0:m.type)==="gcs-shift",g=we(s.spatialReference)!=null;!p&&g||(i=ke(n.srcExtent,p));const f=await this._fetchRawTiles(a,u,{width:c,height:h,wrapCount:i},t);if(!f)return{extent:s,srcExtent:l,pixelBlock:null};const y=d.storageInfo,x=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight;let{x:S,y:T}=d.pixelSize;if(a>0){const{pyramidResolutions:G,pyramidScalingFactor:mt}=y;if(G!=null&&G[a-1])({x:S,y:T}=G[a-1]);else{const He=mt**a;S*=He,T*=He}}const v=d.spatialReference,F=new A({x:S,y:T,spatialReference:v}),_=x===c&&w===h&&u.x%x==0&&u.y%w==0,k=new A({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference}),I=!s.spatialReference.equals(v),C=v.isGeographic?1e-9:1e-4,{datumTransformation:M}=t;if(!I&&_&&f.pixelBlocks.length===1&&x===e&&w===r&&this._isSameResolution(o,k,C))return{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:f.pixelBlocks[0]};const N=g&&we(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,$=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");$&&!this.rasterJobHandler&&await Oe();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:s,srcBufferExtent:f.extent,pixelSize:k.toJSON(),datumTransformation:M,rasterTransform:m,hasWrapAround:i>0||N,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:$},t):bi({projectedExtent:s,srcBufferExtent:f.extent,pixelSize:k,datumTransformation:M,rasterTransform:m,hasWrapAround:i>0||N,isAdaptive:!1,includeGCSGrid:$});let B;const z=!t.requestRawData,V={rows:P.spacing[0],cols:P.spacing[1]},J=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,f.extent.xmin):void 0,{pixelBlocks:D,mosaicSize:j,isPartiallyFilled:le}=f;let Y=null;if(this.rasterJobHandler)({pixelBlock:B,localNorthDirections:Y}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:j,destDimension:z?{width:e,height:r}:null,coefs:z?P.coefficients:null,sampleSpacing:z?V:null,projectDirections:$,gcsGrid:$?P.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:J,blockWidths:null},t));else{const G=_e(D,j,{alignmentInfo:J});B=z?ht(G,{width:e,height:r},P.coefficients,V,t.interpolation):G,$&&P.gcsGrid&&(Y=ei({width:e,height:r},P.gcsGrid),B=ti(B,this.rasterInfo.dataType,Y))}return t.requestRawData||$?{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:B,transformGrid:P,localNorthDirections:Y,isPartiallyFilled:le}:{extent:s,srcExtent:l,srcTilePixelSize:F,pixelBlock:B}}async _fetchRawTiles(s,e,r,t){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(s);let{x:l,y:c}=e,{width:h,height:u,wrapCount:d}=r;const m=this._getRasterTileAlignmentInfo(s,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,h+=2*t.buffer.cols,u+=2*t.buffer.rows);let p=0,g=0,f=0;d&&m!=null&&({worldColumnCountFromOrigin:g,originColumnOffset:f,rightPadding:p}=m,g*m.blockWidth-p>=l+h&&(p=0));const y=Math.floor(l/a),x=Math.floor(c/o),w=Math.floor((l+h+p-1)/a),S=Math.floor((c+u+p-1)/o),T=n[s];if(!T)return null;const{minRow:v,minCol:F,maxCol:_,maxRow:k}=T;if(d===0&&(S<v||w<F||x>k||y>_))return null;const I=new Array;let C=!1;const M=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let J=x;J<=S;J++)for(let D=y;D<=w;D++){let j=D;if(!t.disableWrapAround&&d&&m!=null&&g<=D&&(j=D-g-f),J>=v&&j>=F&&k>=J&&_>=j){const le=this._fetchRawTile(s,J,j,t);M?I.push(new Promise(Y=>{le.then(G=>Y(G)).catch(()=>{C=!0,Y(null)})})):I.push(le)}else I.push(Promise.resolve(null))}if(I.length===0)return null;const N=await Promise.all(I),$={height:(S-x+1)*o,width:(w-y+1)*a},{spatialReference:P}=this.rasterInfo,B=this.getPyramidPixelSize(s),{x:z,y:V}=B;return{extent:new H({xmin:i.x+y*a*z,xmax:i.x+(w+1)*a*z,ymin:i.y-(S+1)*o*V,ymax:i.y-x*o*V,spatialReference:P}),pixelBlocks:N,mosaicSize:$,isPartiallyFilled:C}}_isSameResolution(s,e,r){return Math.abs(s.x-e.x)<r&&Math.abs(s.y-e.y)<r}_fetchRawTile(s,e,r,t){const i=this.rasterInfo.storageInfo.blockBoundary[s];if(!i)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=i;if(e<n||r<a||e>l||r>o)return Promise.resolve(null);const c=Ke(this.url,t.sliceId),h=`${s}/${e}/${r}`;let u=Qe(c,t.registryId,h);if(u==null){const d=new AbortController;u=this.fetchRawTile(s,e,r,{...t,signal:d.signal}),Ze(c,t.registryId,h,u,d),u.catch(()=>Ei(c,t.registryId,h))}return t.signal&&gt(t,()=>{zi(c,t.registryId,h)}),u}_computeMagDirValues(s){var l;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(s==null?void 0:s.length)!==2||!((l=s[0])!=null&&l.length))return null;const t=s[0].length;if(r==="vector-magdir"){const c=s[1].map(h=>(h+360)%360);return[s[0],c]}const[i,n]=s,a=[],o=[];for(let c=0;c<t;c++){const[h,u]=ii([i[c],n[c]]);a.push(h),o.push(u)}return[a,o]}_getRasterTileAlignmentInfo(s,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Si(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[s]}}_getSourceDataInfo(s,e,r,t={}){const i={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(i.srcResolution=t.srcResolution,this._updateSourceDataInfo(s,i));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=i,c=a/e,h=o/r,u=l<n&&c*h>=16,d=l===n&&this._requireTooManySrcTiles(a,o,e,r);if(u||d||a===0||o===0){const m=new A({x:(s.xmax-s.xmin)/e,y:(s.ymax-s.ymin)/r,spatialReference:s.spatialReference});let p=Ri(m,this.rasterInfo.spatialReference,s,i.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(u&&t.srcResolution&&g){const f=Math.round(Math.log(Math.max(c,h))/Math.LN2)-1;if(n-l+3>=f){const y=2**f;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(i.srcResolution=p,this._updateSourceDataInfo(s,i))}return this._requireTooManySrcTiles(i.srcWidth,i.srcHeight,e,r)&&(i.srcWidth=0,i.srcHeight=0),i}_requireTooManySrcTiles(s,e,r,t){const{tileInfo:i}=this.rasterInfo.storageInfo;return Math.ceil(s/i.size[0])*Math.ceil(e/i.size[1])>=Ni||s/r>et||e/t>et}_updateSourceDataInfo(s,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,t=r.spatialReference,{srcResolution:i,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=Xe(i,r,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||Se(s,t,n);if(c==null)return;const h=r.transform;h&&(c=h.inverseTransform(c)),e.srcExtent=c;const{x:u,y:d}=r.storageInfo.origin,m=Math.floor((c.xmin-u)/o.x+.1),p=Math.floor((d-c.ymax)/o.y+.1),g=Math.floor((c.xmax-u)/o.x-.1),f=Math.floor((d-c.ymin)/o.y-.1),y=c.width<.1*o.x?0:g-m+1,x=c.height<.1*o.y?0:f-p+1;e.pyramidLevel=a,e.pyramidResolution=o,e.srcWidth=y,e.srcHeight=x,e.ul={x:m,y:p}}_getRequestOptionsWithSliceId(s){return this.rasterInfo.multidimensionalInfo!=null&&s.sliceId==null&&(s={...s,sliceId:this.getSliceIndex(s.multidimensionalDefinition)}),s}_processIdentifyResult(s,e){const{srcLocation:r,position:t,pyramidLevel:i,useTransposedTile:n}=e,a=s.pixels[0].length/s.width/s.height;if(!(!s.mask||s.mask[t]))return{location:r,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!n){const f=s.pixels.map(w=>w[t]),y={location:r,value:f,pyramidLevel:i},x=this._computeMagDirValues(f.map(w=>[w]));return x!=null&&x.length&&(y.magdirValue=x.map(w=>w[0])),y}let l=s.pixels.map(f=>f.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:h,identifyOptions:u}=e;let d=Nt(o,u.transposedVariableName);if(h){const f=Jt(d,u.multidimensionalDefinition,u.timeExtent);l=l.map(y=>f.map(x=>y[x])),c=c==null?void 0:c.map(y=>f.map(x=>y[x])),d=f.map(y=>d[y])}const m=s.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:s.pixelType};let g;return m!=null&&(si(p,m),g=p.mask),{location:r,value:null,dataSeries:d.map((f,y)=>{const x={value:(g==null?void 0:g[y])===0?null:l.map(w=>w[y]),multidimensionalDefinition:f.multidimensionalDefinition.map(w=>new ct({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:i}}};b([R()],L.prototype,"_rasterTileAlighmentInfo",void 0),b([R({readOnly:!0})],L.prototype,"_isGlobalWrappableSource",null),b([R({readOnly:!0})],L.prototype,"_hasNoneOrGCSShiftTransform",null),b([R()],L.prototype,"rasterJobHandler",null),b([R(ut)],L.prototype,"url",null),b([R({type:String,json:{write:!0}})],L.prototype,"datasetName",void 0),b([R({type:String,json:{write:!0}})],L.prototype,"datasetFormat",void 0),b([R()],L.prototype,"hasUniqueSourceStorageInfo",void 0),b([R()],L.prototype,"rasterInfo",void 0),b([R()],L.prototype,"ioConfig",void 0),b([R()],L.prototype,"sourceJSON",void 0),L=b([Q("esri.layers.support.rasterDatasets.BaseRaster")],L);const oe=L;let se=class extends oe{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){var c,h,u;await this.init();const{rasterFunction:r}=this;(h=(c=this.primaryRasters)==null?void 0:c.rasters)!=null&&h.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&((u=this.primaryRasters.rasters)==null||u.forEach(d=>d.rasterJobHandler=this.rasterJobHandler)));const{rasters:t,rasterIds:i}=this.primaryRasters,n=t.map(d=>d.rasterInfo?void 0:d.open(e));await Promise.all(n);const a=t.map(({rasterInfo:d})=>d),o=r.bind({rasterInfos:a,rasterIds:i});if(!o.success||a.length===0)throw new O("raster-function:open",`cannot bind the function: ${o.error??""}`);await this.syncJobHandler();const l=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(d=>this._hasSameStorageInfo(d,l)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",r.rasterInfo)}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,r,t,i={}){var w,S;const{rasters:n,rasterIds:a}=this.primaryRasters;let o=!1;const{interpolation:l}=i,c=(w=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:w.hasSurfaceFunction;!i.requestRawData&&l!=="bilinear"&&c&&(o=n.length===1&&!i.skipRasterFunction,i={...i,interpolation:"bilinear",requestRawData:o});const h=n.map(T=>T.fetchPixels(e,r,t,i)),u=await Promise.all(h),d=u.map(T=>T.pixelBlock),m=o||i.requestRawData?u.map(T=>T.srcTilePixelSize):null;if(i.skipRasterFunction||d.every(T=>T==null))return u[0];const p=((S=u.find(T=>T.pixelBlock!=null))==null?void 0:S.extent)??e,g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:a}),{transformGrid:f}=u[0];if(!o||g==null||f==null)return{...u[0],pixelBlock:g};const y={rows:f.spacing[0],cols:f.spacing[1]};let x;return this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:r,height:t},coefs:f.coefficients,sampleSpacing:y,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},i)).pixelBlock:x=ht(g,{width:r,height:t},f.coefficients,y,l),{extent:e,srcExtent:u[0].srcExtent,pixelBlock:x}}_hasSameStorageInfo(e,r){const{storageInfo:t,pixelSize:i,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:h}=r;return i.x===l.x&&i.y===l.y&&n.equals(c)&&a.equals(h)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};b([R({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),b([R()],se.prototype,"tileType",void 0),b([R()],se.prototype,"rasterFunction",void 0),b([R()],se.prototype,"primaryRasters",void 0),se=b([Q("esri.layers.support.rasterDatasets.FunctionRaster")],se);const De=se;function Ji(s,e){if(s.spatialReference.equals(e))return s;const r=Le(s.spatialReference),t=Le(e);if(r===t)return s;const i=r/t;return{x:s.x*i,y:s.y*i}}async function Ai(s,e,r){if(r.type==="extent")return Li(s,e,r);const{width:t,height:i}=s,n=new Uint8Array(t*i),{contains:a,intersects:o}=await wt(()=>import("./geometryEngine-963760f7.js"),["assets/geometryEngine-963760f7.js","assets/geometryEngineBase-c7db70de.js","assets/index-bdad94d1.js","assets/index-0492b785.css","assets/hydrated-017c4655.js"]);return o(e,r)?r.type==="polyline"?Wi(s,e,r):a(r,e)?s:Hi(s,e,r):new ee({pixelType:s.pixelType,width:t,height:i,mask:n,maskIsAlpha:!1,pixels:[...s.pixels]})}function Hi(s,e,r){if(!s)return s;const{width:t,height:i}=s,n=e.width/t,a=e.height/i,{xmin:o,ymax:l}=e;let c;if(r.type==="extent"){const f=(r.xmin-o)/n,y=(r.xmax-o)/n,x=(l-r.ymax)/a,w=(l-r.ymin)/a;c=[[[f,x],[f,w],[y,w],[y,x],[f,x]]]}else c=r.rings.map(f=>f.map(([y,x])=>[(y-o)/n,(l-x)/a]));const h=document.createElement("canvas");h.width=t,h.height=i;const u=h.getContext("2d");u.fillStyle="#f00",c.forEach(f=>{u.beginPath(),u.moveTo(f[0][0],f[0][1]);for(let y=0;y<f.length;y++)u.lineTo(f[y][0],f[y][1]);u.closePath(),u.fill()});const d=u.getImageData(0,0,t,i).data,m=s.mask,p=t*i,g=new Uint8Array(p);for(let f=0;f<p;f++)m&&!m[f]||(g[f]=d[4*f+3]>127?255:0);return new ee({pixelType:s.pixelType,width:t,height:i,mask:g,maskIsAlpha:!1,pixels:[...s.pixels]})}function Li(s,e,r){const{width:t,height:i}=s,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i;if(r.width/a<.5||r.height/o<.5)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});const{xmin:l,xmax:c,ymin:h,ymax:u}=e,{xmin:d,xmax:m,ymin:p,ymax:g}=r,f=Math.max(l,d),y=Math.min(c,m),x=Math.max(h,p),w=Math.min(u,g),S=.5*a,T=.5*o;if(y-f<S||w-x<T||y<l+S||f>c-S||x>u-T||w<h+T)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});const v=Math.max(0,(f-l)/a),F=Math.min(t,Math.max(0,(y-l)/a)),_=Math.max(0,(u-w)/o),k=Math.min(i,Math.max(0,(u-x)/o)),I=Math.round(v),C=Math.round(F)-1,M=Math.round(_),N=Math.round(k)-1;if(I===C&&v%1>.5&&F%1<.5||M===N&&_%1>.5&&k%1<.5)return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]});if(I===0&&M===0&&C===t&&N===i)return s;const $=s.mask;for(let P=M;P<=N;P++)for(let B=I;B<=C;B++){const z=P*t+B;n[z]=$?$[z]:255}return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]})}function Wi(s,e,r){const{width:t,height:i}=s,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i,{xmin:l,ymax:c}=e,{paths:h}=r,u=s.mask;for(let d=0;d<h.length;d++){const m=h[d];for(let p=0;p<m.length-1;p++){const[g,f]=m[p],[y,x]=m[p+1];let w=Math.floor((c-f)/o),S=Math.floor((c-x)/o);if(S<w){const v=w;w=S,S=v}w=Math.max(0,w),S=Math.min(i-1,S);const T=(y-g)/(x-f);for(let v=w;v<=S;v++){const F=v===w?Math.max(f,x):(i+1-v)*o,_=v===S?Math.min(f,x):F-o;let k=Math.floor(x===f?(g-l)/a:(T*(F-f)+g-l)/a),I=Math.floor(x===f?(y-l)/a:(T*(_-f)+g-l)/a);if(I<k){const M=k;k=I,I=M}const C=v*t;k=Math.max(0,k),I=Math.min(t-1,I);for(let M=C+k;M<=C+I;M++)n[M]=u?u[M]:255}}}return new ee({pixelType:s.pixelType,width:t,height:i,mask:n,pixels:[...s.pixels]})}function qi(s,e,r,t=!0){const{spatialReference:i}=s,{x:n,y:a}=Ji(r,i);let o,l,c;const h=e.type==="extent"?e:e.extent;let{xmin:u,xmax:d,ymax:m,ymin:p}=h;const{xmin:g,ymax:f}=s.extent;return t?(u=g+(u>g?n*Math.round((u-g)/n):0),m=f-(m<f?a*Math.round((f-m)/a):0),d=g+(d>g?n*Math.round((d-g)/n):0),p=f-(p<f?a*Math.round((f-p)/a):0),o=new H({xmin:u,ymax:m,xmax:d,ymin:p,spatialReference:i}),l=Math.round(o.width/n),c=Math.round(o.height/a)):(l=Math.floor((d-u)/n+.8),c=Math.floor((m-p)/a+.8),u=g+(u>g?n*Math.floor((u-g)/n+.1):0),m=f-(m<f?a*Math.floor((f-m)/a+.1):0),d=u+l*n,p=m-c*a,o=new H({xmin:u,ymax:m,xmax:d,ymin:p,spatialReference:i})),{extent:o,width:l,height:c}}const tt=ze.getLogger("esri.layers.mixins.ImageryTileMixin"),Gi=s=>{let e=class extends s{constructor(...t){var i,n;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(i=t[0])==null?void 0:i.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.rasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",rt(t,tt))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,i,n){var o,l;const a=(l=(o=i==null?void 0:i.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:l.renderer;return Wt(a,n)||void 0}async convertVectorFieldData(t,i){if(t==null||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},i):ri(t,a)}async computeStatisticsHistograms(t,i){t=Ee(qt,t).clone();const{rasterInfo:n}=this,{geometry:a}=t;if(a==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=a;const{spatialReference:l}=n;a.spatialReference.equals(l)||(await Oe(),o=a.type==="extent"?Se(a,l):vi(a,l));const c=t.pixelSize??new A({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:l}),{extent:h,width:u,height:d}=qi(n,o,c),m=await this.fetchPixels(h,u,d,{...i,interpolation:"nearest"});if(m.pixelBlock==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await Ai(m.pixelBlock,h,o),g=this._rasterJobHandler.instance;return g?g.computeStatisticsHistograms({pixelBlock:p},i):ni(p)}async createFlowMesh(t,i){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,i):ai(t.meshType,t.simulationSettings,t.flowData,i.signal!=null?i.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var o,l;const{multidimensionalInfo:i}=this.rasterInfo??{};if(i==null)return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;n!=null&&n.length||(n=We(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(y=>y.clone());const c=(l=(o=i.variables.find(({name:y})=>y===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:y})=>y==="StdTime"),h=n.find(({dimensionName:y})=>y==="StdTime");if(!c||!h)return{...t,multidimensionalDefinition:null};const{start:u,end:d}=a,m=u==null?null:u.getTime(),p=d==null?null:d.getTime(),g=m??p,f=p??m;if(c.values!=null){const y=c.values.filter(x=>{if(Array.isArray(x)){if(g===f)return x[0]<=g&&x[1]>=g;const w=x[0]<=g&&x[1]>g||x[0]<f&&x[1]>=f,S=x[0]>=g&&x[1]<=f||x[0]<g&&x[1]>f;return w||S}return g===f?x===g:x>=g&&x<=f});if(y.length){const x=y.sort((w,S)=>{const T=Array.isArray(w)?w[0]:w,v=Array.isArray(w)?w[1]:w,F=Array.isArray(S)?S[0]:S,_=Array.isArray(S)?S[1]:S;return g===f?T-F:Math.abs(v-f)-Math.abs(_-f)})[0];h.values=[x]}else n=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;g>x||f<y?n=null:h.values=g===f?[g]:[Math.max(y,g),Math.min(x,f)]}}return n!=null&&Gt(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){var h,u;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const d=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&d&&this._set("rasterFunction",$e.fromJSON(d)),void(this._cachedRasterFunctionJson=(h=this.rasterFunction)==null?void 0:h.toJSON())}let t,i=this.raster,n=!1;i.datasetFormat==="Function"?(t=i.primaryRasters.rasters,i=t[0],n=!0):t=[i];const{rasterFunction:a}=this;if(a){const d={raster:i};t.length>1&&t.forEach(g=>d[g.url]=g);const m=Be(a.rasterFunctionDefinition??a.toJSON(),d),p=new De({rasterFunction:m});p.rasterJobHandler=this._rasterJobHandler.instance,await p.open(),this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON(),this.raster=p}else this.raster=i,this._cachedRasterFunctionJson=null,await i.when();if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(d=>d>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:i}=this;if(!t||!i||!this.renderer)return;const{rasterInfo:n}=this.raster,a=qe(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=a==null?void 0:a.name,l=Ge({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(i.rasterInfo=je(n,o),i.rendererJSON=l,i.bind(),await c.updateSymbolizer(i),this._cachedRendererJson=l)}async applyRenderer(t,i){const n=t&&t.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:i,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:i,bandIds:l}),a}getTileUrl(t,i,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${i}/${n}`:""}getCompatibleTileInfo(t,i,n=!1){if(!this.loaded||i==null)return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=bt(t);return Z.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:i.xmin,y:i.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,i,n,a={}){var l;if(r(this),a.requestAsImageElement){const c=this.getTileUrl(t,i,n);return nt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(h=>h.data)}const{rasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const c=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,i,n,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((l=this.renderer)==null?void 0:l.type)==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,i,n,a)}async fetchPixels(t,i,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),i=Math.round(i),n=Math.round(n),this.raster.fetchPixels(t,i,n,a))}async identify(t,i={}){var l;const{raster:n,rasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(lt(i.multidimensionalDefinition)||i.transposedVariableName||i.timeExtent))&&(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition==null)return{location:t,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(t))throw new O("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,i)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,o,l;const t=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if(t==null||((o=this.rasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const i=this.multidimensionalDefinition,n=(l=i==null?void 0:i[0])==null?void 0:l.variableName;return t.variables.some(c=>c.name===n&&(!(i!=null&&i[0].dimensionName)||c.dimensions.some(h=>h.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var n;const i=t??((n=this.rasterInfo)==null?void 0:n.multidimensionalInfo);return jt(this.multidimensionalSubset,i)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=We(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Yt;return this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){r(this);const{raster:i}=this,n=Ut(i.rasterInfo,i.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){var h,u;r(this);const{rasterInfo:i}=this.raster;!this.bandIds&&i.bandCount>1&&(this.bandIds=Vt(i));const n=qe(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n==null?void 0:n.name;if(!this.renderer||t==="override"){const d=Ue(i,{bandIds:this.bandIds,variableName:a}),m=i.statistics,p=m&&m.length>0?m[0]:null,g=(p==null?void 0:p.max)??0,f=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&d.type==="raster-stretch"&&(g>1e24||f<-1e24)&&(d.dynamicRangeAdjustment=!0,d.statistics=null,d.stretchType==="none"&&(d.stretchType="min-max")),this.renderer=d}const o=Ge({...this.renderer.toJSON(),variableName:a}),l=je(i,a);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new oi({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:d}=this.raster.rasterInfo,m=this.renderer;if(d!=null)if(m.type!=="raster-colormap")this._configDefaultRenderer("override");else{const p=Ue(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(m)&&this._configDefaultRenderer("override")}else if(m.type==="raster-stretch"){const p=(h=this.bandIds)==null?void 0:h.length,g=(u=m.statistics)==null?void 0:u.length;!m.dynamicRangeAdjustment&&g&&p&&g!==p&&this._configDefaultRenderer("override")}}}else tt.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.rasterInfo)throw new O("imagery-tile","no raster")}return b([R()],e.prototype,"_cachedRendererJson",void 0),b([R()],e.prototype,"_cachedRasterFunctionJson",void 0),b([R()],e.prototype,"_compatibleFullExtent",void 0),b([R()],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([R()],e.prototype,"_rasterJobHandler",void 0),b([R()],e.prototype,"bandIds",void 0),b([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([R({json:{read:!1}})],e.prototype,"fullExtent",null),b([R()],e.prototype,"interpolation",void 0),b([R()],e.prototype,"ioConfig",void 0),b([R({type:[ct],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([R({type:At,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([R()],e.prototype,"raster",void 0),b([R({type:$e})],e.prototype,"rasterFunction",null),b([R()],e.prototype,"rasterInfo",void 0),b([R()],e.prototype,"sourceJSON",void 0),b([R({readOnly:!0,type:q,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([R({type:Z})],e.prototype,"tileInfo",void 0),b([R(ut)],e.prototype,"url",null),b([R({types:Ht,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var i;const t=((i=this.renderer)==null?void 0:i.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Lt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),b([It("renderer")],e.prototype,"readRenderer",null),b([R()],e.prototype,"symbolizer",void 0),e=b([Q("esri.layers.ImageryTileMixin")],e),e};function ji(s){const e=s.fields,r=s.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",i=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=i.map(c=>c.name),a=[];let o=0,l=0;return r.forEach(c=>{const h={};for(h[t]=o++,l=1;l<n.length;l++)h[n[l]]=c[l-1];a.push({attributes:h})}),{displayFieldName:"",fields:i,features:a}}class dt{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const i=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),o={version:t,recordCount:i,headerByteCount:n,recordByteCount:a};let l=32;const c=[],h=[];let u;if(t===3){for(;r.getUint8(l)!==13;)u=String.fromCharCode(r.getUint8(l+11)).trim(),c.push({name:Ve(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:r.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;h.length<i&&e.byteLength-l>a;){const d=[];r.getUint8(l)===32?(l+=1,c.forEach(m=>{if(m.type==="C")d.push(Ve(new Uint8Array(e,l,m.length)).trim());else if(m.type==="N")d.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if(m.type==="F")d.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if(m.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();d.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=m.length}),h.push(d)):l+=a}}return{header:o,fields:c,records:h,recordSet:ji({fields:c,records:h})}}}const re=new Map;re.set("int16","esriFieldTypeSmallInteger"),re.set("int32","esriFieldTypeInteger"),re.set("int64","esriFieldTypeInteger"),re.set("float32","esriFieldTypeSingle"),re.set("float64","esriFieldTypeDouble"),re.set("text","esriFieldTypeString");const it=8;let de=class extends oe{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(r))throw new O("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:i}=this._parseHeader(r);if(i.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();i.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,r,t,i={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,r,t,i.multidimensionalDefinition,a),h=this._getIndexRecordFromBundle(r,t,o),u=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!u)return null;const d=new Uint8Array(u.data),m=this._getTileEndAndContentType(d,h);if(m.recordSize===0)return null;const p=await this.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:i.signal});if(!p)return null;const[g,f]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:g,height:f,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const r=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!r.some(t=>!e[t])}_parseHeader(e){var J;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:i,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,h=e.statistics&&e.statistics.map(D=>({min:D.min,max:D.max,avg:D.mean,stddev:D.standardDeviation,median:D.median,mode:D.mode})),u=e.extent.spatialReference,d=(J=e.geodataXform)==null?void 0:J.spatialReference,m=new q(u!=null&&u.wkid||u!=null&&u.wkt?u:d);let p=new H({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const g=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),f=Math.round((p.xmax-p.xmin)/g.x),y=Math.round((p.ymax-p.ymin)/g.y),x=this._parseTransform(e.geodataXform),w=x?p:null;x&&(p=x.forwardTransform(p),g.x=(p.xmax-p.xmin)/f,g.y=(p.ymax-p.ymin)/y);const S=e.properties??{},T=e.format.toLowerCase().replace("cache/",""),v=new A(e.origin.x,e.origin.y,m);let F,_,k,I;if(n&&n.colors)for(F=[],_=0;_<n.colors.length;_++)k=n.colors[_],I=n.values?n.values[_]:_,F.push([I,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);const C=e.LODInfos,M=[];for(_=0;_<C.levels.length;_++)M.push(new at({level:C.levels[_],resolution:C.resolutions[_],scale:96/.0254*C.resolutions[_]}));const N=new Z({dpi:96,lods:M,format:T,origin:v,size:[a,o],spatialReference:m}),$={recordSize:it,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*it+64},P=[{maxCol:Math.ceil(f/a)-1,maxRow:Math.ceil(y/o)-1,minCol:0,minRow:0}];let B=2;if(c>0)for(_=0;_<c;_++)P.push({maxCol:Math.ceil(f/B/a)-1,maxRow:Math.ceil(y/B/o)-1,minCol:0,minRow:0}),B*=2;const z=e.mdInfo;let V=null;if(z&&S._yxs){const D=S._yxs;V={packetSize:D.PacketSize,tileSize:[D.TileXSize,D.TileYSize]}}return{storageInfo:$,rasterInfo:new ge({width:f,height:y,pixelType:r,bandCount:t,extent:p,nativeExtent:w,transform:x,spatialReference:m,pixelSize:g,keyProperties:S,statistics:h,histograms:i,multidimensionalInfo:z,colormap:F,storageInfo:new ye({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:v,tileInfo:N,transposeInfo:V,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:P})})}}_parseTransform(e){var t,i;if(!Ti(e))throw new O("cloudraster:open","the data contains unsupported geodata transform types");const r=_i(e);if(r.type==="identity")return null;if(r.type!=="polynomial"||!((t=r.forwardCoefficients)!=null&&t.length)||!((i=r.inverseCoefficients)!=null&&i.length))throw new O("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const r=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),i=await Promise.all([r,t]);let n;if(i[0]){let a=i[0].fields;const o=i[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":re.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&i[1]&&(n=dt.parse(i[1]).recordSet),ft.fromJSON(n)}_buildCacheFilePath(e,r,t,i,n){const a=this._getPackageSize(!!n),o=Math.floor(r/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let h="L";h+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,d=i==null?void 0:i[0];if(u==null||!d)return`${this.url}/_alllayers/${h}/${c}.bundle`;let m="_yxs";if(!n){m=u.variables.find(f=>f.name===d.variableName).dimensions[0].values.indexOf(d.values[0]).toString(16);const g=4-m.length;for(let f=0;f<g;f++)m="0"+m;m="S"+m}const p=this._getVariableFolderName(n||d.variableName);return`${this.url}/_alllayers/${p}/${m}/${h}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:r}=this.rasterInfo.storageInfo;return e&&r!=null?r.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:r}=this.rasterInfo,{transposeInfo:t}=r;return e&&t!=null?t.tileSize:r.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,r,t=!1){const i=this._getPackageSize(t),n=i*(e%i)+r%i;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,r){const t=e.subarray(r,r+8);let i,n=0;for(i=0;i<5;i++)n|=(255&t[i])<<8*i;const a=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&t[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let r=e.toString(16);if(r.length!==4){let t=4-r.length;for(;t-- >0;)r="0"+r}return r}};b([R({readOnly:!0})],de.prototype,"storageInfo",void 0),b([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=b([Q("esri.layers.support.rasterDatasets.CloudRaster")],de);const Ui=de;let me=class extends oe{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const r=this.data,{pixelBlock:t,statistics:i,histograms:n,name:a,keyProperties:o,nativeExtent:l,transform:c}=this.data,{width:h,height:u,pixelType:d}=t,m=r.extent??new H({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new q({wkid:3857})}),p=r.isPseudoSpatialReference??!r.extent,g={x:m.width/h,y:m.height/u},f=new ge({width:h,height:u,pixelType:d,extent:m,nativeExtent:l,transform:c,pixelSize:g,spatialReference:m.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:i,isPseudoSpatialReference:p,histograms:n});this.createRemoteDatasetStorageInfo(f,512,512),this._set("rasterInfo",f),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,r,t,i={}){const n=this._pixelBlockTiles.get(`${e}/${r}/${t}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,r,t){var h,u;const i=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:r,maximumPyramidLevel:i},t):Promise.resolve(li(e,r,i)),a=this.rasterInfo.statistics!=null,o=this.rasterInfo.histograms!=null,l=a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},t):Promise.resolve(ci(e)),c=await ot([n,l]);if(!c[0].value&&c[1].value)throw new O("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,a||(this.rasterInfo.statistics=(h=c[1].value)==null?void 0:h.statistics),o||(this.rasterInfo.histograms=(u=c[1].value)==null?void 0:u.histograms)}};b([R({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),b([R()],me.prototype,"data",void 0),me=b([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],me);const Vi=me;function he(s,e){if(!s||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=he(s,r);for(let a=0;a<n.length;a++)he(n[a],e).forEach(o=>t.push(o));return t}const i=s.getElementsByTagNameNS("*",r);if(!i||i.length===0)return[];for(let n=0;n<i.length;n++)t.push(i[n]||i.item(n));return t}function U(s,e){if(!s||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=he(s,r);return t.length>0?e?U(t[0],e):t[0]:null}function K(s,e=null){const r=e?U(s,e):s;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function Yi(s,e){const r=he(s,e),t=[];let i;for(let n=0;n<r.length;n++)i=r[n].textContent||r[n].nodeValue,i&&(i=i.trim(),i!==""&&t.push(i));return t}function Ie(s,e){return Yi(s,e).map(r=>Number(r))}function ae(s,e){const r=K(s,e);return Number(r)}function Fe(s,e){var i;const r=(i=s==null?void 0:s.nodeName)==null?void 0:i.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function st(s,e){if(!s||!e)return null;const r=[];for(let t=0;t<s.length;t++)r.push(s[t]),r.push(e[t]);return r}function Xi(s){const e=U(s,"GeodataXform"),r=Te(ae(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=ae(e,"PolynomialOrder")??1,i=Ie(e,"CoeffX/Double"),n=Ie(e,"CoeffY/Double"),a=Ie(e,"InverseCoeffX/Double"),o=Ie(e,"InverseCoeffY/Double"),l=st(i,n),c=st(a,o);return{spatialReference:r,transform:l&&c&&l.length&&c.length?new Je({spatialReference:r,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Ki(s){var d;const e=ae(s,"NoDataValue"),r=U(s,"Histograms/HistItem"),t=ae(r,"HistMin"),i=ae(r,"HistMax"),n=ae(r,"BucketCount"),a=(d=K(r,"HistCounts"))==null?void 0:d.split("|").map(m=>Number(m));let o,l,c,h;he(s,"Metadata/MDI").forEach(m=>{const p=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":h=p}});const u=ae(s,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&i!=null?{min:t,max:i,size:n||a.length,counts:a}:null,sourceBandIndex:u,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:h}:null}}function Te(s){if(!s)return null;let e=Number(s);if(!isNaN(e)&&e!==0)return new q({wkid:e});if((s=String(s)).startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const r=s.indexOf("VERTCS"),t=s.indexOf("PROJCS"),i=t>-1?t:s.indexOf("GEOGCS");if(i===-1)return null;const n=s.slice(i,s.lastIndexOf("]",r)+1).trim(),a=s.slice(r,s.lastIndexOf("]")).trim();e=Ce(n);const o=new q(e?{wkid:e}:{wkt:n}),l=Ce(a);return l&&(o.vcsWkid=l),o}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(e=Ce(s),new q(e!==0?{wkid:e}:{wkt:s})):null}function Ce(s){var i;const e=s.replaceAll("]","[").replaceAll('"',"").split("[").map(n=>n.trim()).filter(n=>n!==""),r=e[e.length-1].split(","),t=(i=r[0])==null?void 0:i.toLowerCase();if((t==="epsg"||t==="esri")&&s.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Ae(s){var t;if(((t=s==null?void 0:s.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach(i=>{if(i.nodeType===1){if(Fe(i,"SRS")){if(!e.spatialReference){const n=K(i);e.spatialReference=Te(n)}}else if(Fe(i,"Metadata"))if(i.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Xi(i);e.transform=a,e.spatialReference||(e.spatialReference=n)}else he(i,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Fe(i,"PAMRasterBand")){const n=Ki(i);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const r=e.rasterBands;if(r.length){const i=!!r[0].statistics;e.statistics=i?r.map(a=>a.statistics).filter(Pe):null;const n=!!r[0].histogram;e.histograms=n?r.map(a=>a.histogram).filter(Pe):null}return e}let Re=class extends oe{async open(s){await this.init();const e=await this._fetchData(s);let{spatialReference:r,statistics:t,histograms:i,transform:n}=await this._fetchAuxiliaryData(s);const a=!r;a&&(r=new q({wkid:3857})),i!=null&&i.length&&t==null&&(t=Ne(i));const{width:o,height:l}=e;let c=new H({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const h=n?n.forwardTransform(c):c;let u=!0;if(n){const m=n.forwardCoefficients;u=m&&m[1]===0&&m[2]===0,u&&(n=null,c=h)}const d=new Vi({data:{extent:h,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await d.open(),d.data=null,this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(s,e,r,t={}){return this._inMemoryRaster.fetchRawTile(s,e,r,t)}async _fetchData(s){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=ui(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new O("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),i=t==="gif"||t==="bmp"||!St("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:i,hasNoZlibMask:!0});if(n==null)throw new O("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(s){var c;const e=s==null?void 0:s.signal,r=this.ioConfig.skipExtensions??[],t=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n=i==="JPG"?"jgw":i==="PNG"?"pgw":i==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ot([t,a]);if(e!=null&&e.aborted)throw Rt();const l=Ae((c=o[0].value)==null?void 0:c.data);if(!l.transform){const h=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(u=>Number(u)):null;l.transform=(h==null?void 0:h.length)===6?new Je({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return l}};b([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=b([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const be=Re;let pe=class extends oe{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var _,k;await this.init();const r=e&&e.signal,t=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=t.data;if(this.sourceJSON=i,!i)throw new O("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new O("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(n.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((_=i.name)==null?void 0:_.slice(i.name.indexOf("/")+1))??"";const a=await this._fetchRasterInfo({signal:r});if(a==null)throw new O("image-server-raster:open","cannot initialize image service");const o=this.tileType==="Map"?Qi(i.tileInfo,i):Z.fromJSON(i.tileInfo);vt(o);const[l,c]=this._computeMinMaxLOD(a,o),{extent:h,pixelSize:u}=a,d=.5/a.width*u.x,m=Math.max(u.x,u.y),{lods:p}=o;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>d||!p.some(I=>Math.abs(I.resolution-m)<d))&&(u.x=u.y=l.resolution,a.width=Math.ceil((h.xmax-h.xmin)/u.x-.1),a.height=Math.ceil((h.ymax-h.ymin)/u.y-.1));const g=l.level-c.level,[f,y]=o.size,x=[],w=[];p.forEach((I,C)=>{I.level>=c.level&&I.level<=l.level&&x.push({x:I.resolution,y:I.resolution}),C<p.length-1&&w.push(Math.round(10*I.resolution/p[C+1].resolution)/10)}),x.sort((I,C)=>I.x-C.x);const S=this.computeBlockBoundary(h,f,y,o.origin,x,g),T=x.length>1?x.slice(1):null;let v;i.transposeInfo&&(v={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:((k=a.keyProperties)==null?void 0:k._yxs.PacketSize)??0});const F=w.length<=1||w.length>=3&&w.slice(0,w.length-1).every(I=>I===w[0])?w[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/g))/10;if(a.storageInfo=new ye({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:T,pyramidScalingFactor:F,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:v,blockBoundary:S}),this._fixGCSShift(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const I={tileInfo:a.storageInfo.tileInfo,parsedUrl:Tt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Oi({layer:I})}}async fetchRawTile(e,r,t,i={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:o}=n,l=o!=null&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,h=`${this.url}/tile/${c}/${r}/${t}`,u=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:d}=await this.request(h,{query:u,responseType:"array-buffer",signal:i.signal});if(!d)return null;const m=l?o.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(d,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(p==null)return null;const g=n.blockBoundary[e];if(n.compression!=="jpg"||t>g.minCol&&t<g.maxCol&&r>g.minRow&&r<g.maxRow)return p;const{origin:f,blockWidth:y,blockHeight:x}=n,{x:w,y:S}=this.getPyramidPixelSize(e),T=Math.round((a.xmin-f.x)/w)%y,v=Math.round((a.xmax-f.x)/w)%y||y,F=Math.round((f.y-a.ymax)/S)%x,_=Math.round((f.y-a.ymin)/S)%x||x,k=t===g.minCol?T:0,I=r===g.minRow?F:0,C=t===g.maxCol?v:y,M=r===g.maxRow?_:x;return hi(p,{x:k,y:I},{width:C-k,height:M-I}),p}getSliceIndex(e){if(!this._slices||e==null||e.length===0)return null;const r=e;for(let t=0;t<this._slices.length;t++){const i=this._slices[t].multidimensionalDefinition;if(i.length===r.length&&!i.some(n=>{const a=r.find(o=>n.variableName===o.variableName&&o.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return t}return null}async fetchVariableStatisticsHistograms(e,r){const t=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.statistics}),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:r}).then(a=>{var o;return(o=a.data)==null?void 0:o.histograms}),n=await Promise.all([t,i]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,r={}){if(!this._tilemapCache)return 0;let t=this.identifyPixelLocation(e,0,r.datumTransformation);if(t===null)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-i+this._levelOffset;const o=t.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,t.row,t.col,r)==="available")break}catch{}if(a--,i++,t=this.identifyPixelLocation(o,i,r.datumTransformation),t===null)return null}return a===-1||t==null?null:i}async _fetchRasterInfo(e){const r=this.sourceJSON;if(this.tileType==="Map"){const o=r.fullExtent||r.extent,l=Math.ceil((o.xmax-o.xmin)/r.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/r.pixelSizeY-.1),h=q.fromJSON(r.spatialReference||o.spatialReference),u=new A({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:h});return new ge({width:l,height:c,bandCount:3,extent:H.fromJSON(o),spatialReference:h,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=e,i=Xt(this.url,this.sourceJSON,{signal:t,query:this.ioConfig.customFetchParameters}),n=r.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data&&o.data.slices).catch(()=>null):null,a=await Promise.all([i,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:r,spatialReference:t}=e;r.xmin>-1&&r.xmax>181&&(t!=null&&t.wkid)&&t.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ki,e.extent=e.transform.forwardTransform(r))}_computeMinMaxLOD(e,r){const{pixelSize:t}=e,i=.5/e.width*t.x,{lods:n}=r,a=r.lodAt(Math.max.apply(null,n.map(m=>m.level))),o=r.lodAt(Math.min.apply(null,n.map(m=>m.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=n[0].level,[a,o];if(l==="Raster")return[n.find(m=>m.resolution===t.x)??a,o];const{minScale:c,maxScale:h}=this.sourceJSON;let u=a;h>0&&(u=n.find(m=>Math.abs(m.scale-h)<i),u||(u=n.filter(m=>m.scale>h).sort((m,p)=>m.scale>p.scale?1:-1)[0]??a));let d=o;return c>0&&(d=n.find(m=>Math.abs(m.scale-c)<i)??o,this._levelOffset=d.level-o.level),[u,d]}};function Qi(s,e){if(!s)return null;const{minScale:r,maxScale:t,minLOD:i,maxLOD:n}=e;if(i!=null&&n!=null)return Z.fromJSON({...s,lods:s.lods.filter(({level:a})=>a!=null&&a>=i&&a<=n)});if(r!==0&&t!==0){const a=c=>Math.round(1e4*c)/1e4,o=r?a(r):1/0,l=t?a(t):-1/0;return Z.fromJSON({...s,lods:s.lods.filter(c=>{const h=a(c.scale);return h<=o&&h>=l})})}return Z.fromJSON(s)}b([R({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),b([R()],pe.prototype,"tileType",void 0),pe=b([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],pe);const Zi=pe,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const te=new Map;te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends oe{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(s){var g;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=s?s.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:i}=this._parseHeader(r.data);if(((g=this.ioConfig.skipExtensions)==null?void 0:g.indexOf("aux.xml"))===-1){const f=await this._fetchAuxiliaryData(s);f!=null&&(t.statistics=f.statistics??t.statistics,t.histograms=f.histograms,f.histograms&&t.statistics==null&&(t.statistics=Ne(f.histograms)))}this._set("rasterInfo",t),this._files=i;const n=await this.request(i.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:h}=this.rasterInfo,u=[],d=this._getBandSegmentCount();let m=0,p=-1;for(;m<this._storageIndex.length;){p++;const f=Math.ceil(c/a/l**p)-1,y=Math.ceil(h/o/l**p)-1;m+=(f+1)*(y+1)*d*4,u.push({maxRow:y,maxCol:f,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=u,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){const{blockWidth:i,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[s];if(!o||o.maxRow<e||o.maxCol<r||o.minRow>e||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:h,actualTileWidth:u,actualTileHeight:d}=this._getTileLocation(s,e,r);if(!h||h.length===0)return null;if(h[0].from===0&&h[0].to===0){const I=new Uint8Array(i*n);return new ee({width:i,height:n,pixels:null,mask:I,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let f=0;for(f=0;f<p;f++)m&&!m.includes(f)||g.push(this.request(this._files.data,{range:{from:h[f].from,to:h[f].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(I=>I.data.byteLength).reduce((I,C)=>I+C),w=new Uint8Array(x);let S=0;for(f=0;f<p;f++)w.set(new Uint8Array(y[f].data),S),S+=y[f].data.byteLength;const T=te.get(this.rasterInfo.storageInfo.compression).decoderFormat,v=await this.decodePixelBlock(w.buffer,{width:i,height:n,format:T,planes:(m==null?void 0:m.length)||l,pixelType:c});if(v==null)return null;let{noDataValue:F}=this.rasterInfo;if(F!=null&&T!=="lerc"&&!v.mask&&(F=F[0],F!=null)){const I=v.width*v.height,C=new Uint8Array(I);if(Math.abs(F)>1e24)for(f=0;f<I;f++)Math.abs((v.pixels[0][f]-F)/F)>1e-6&&(C[f]=1);else for(f=0;f<I;f++)v.pixels[0][f]!==F&&(C[f]=1);v.mask=C}let _=0,k=0;if(u!==i||d!==n){let I=v.mask;if(I)for(f=0;f<n;f++)if(k=f*i,f<d)for(_=u;_<i;_++)I[k+_]=0;else for(_=0;_<i;_++)I[k+_]=0;else for(I=new Uint8Array(i*n),v.mask=I,f=0;f<d;f++)for(k=f*i,_=0;_<u;_++)I[k+_]=1}return v}_parseIndex(s){if(s.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,i,n,a;if(fi){for(r=new Uint8Array(s),i=new ArrayBuffer(s.byteLength),t=new Uint8Array(i),n=0;n<s.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=r[4*n+3-a];e=new Uint32Array(i)}else e=new Uint32Array(s);return e}_getBandSegmentCount(){return te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(s,e,r){const{blockWidth:t,blockHeight:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,h,u,d=0,m=0;for(u=0;u<s;u++)m=n**u,c=Math.ceil(a/t/m),h=Math.ceil(o/i/m),d+=c*h;m=n**s,c=Math.ceil(a/t/m),h=Math.ceil(o/i/m),d+=e*c+r,d*=4*l;const p=this._storageIndex.subarray(d,d+4*l);let g=0,f=0;const y=[];for(let x=0;x<l;x++)g=p[4*x]*2**32+p[4*x+1],f=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:f});return{ranges:y,actualTileWidth:r<c-1?t:Math.ceil(a/m)-t*(c-1),actualTileHeight:e<h-1?i:Math.ceil(o/m)-i*(h-1)}}_parseHeader(s){const e=U(s,"MRF_META/Raster");if(!e)throw new O("mrf:open","not a valid MRF format");const r=U(e,"Size"),t=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!te.has(a))throw new O("mrf:open","currently does not support compression "+a);const o=K(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new O("mrf:open","currently does not support pixel type "+o);const c=U(e,"PageSize"),h=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),d=U(e,"DataValues");let m,p;if(d&&(p=d.getAttribute("NoData"),p!=null&&(m=p.trim().split(" ").map(C=>parseFloat(C)))),U(s,"MRF_META/CachedSource"))throw new O("mrf:open","currently does not support MRF referencing other data files");const g=U(s,"MRF_META/GeoTags"),f=U(g,"BoundingBox");let y,x=!1;if(f!=null){const C=parseFloat(f.getAttribute("minx")),M=parseFloat(f.getAttribute("miny")),N=parseFloat(f.getAttribute("maxx")),$=parseFloat(f.getAttribute("maxy")),P=K(g,"Projection")||"";let B=q.WGS84;if(P!=="LOCAL_CS[]")if(P.toLowerCase().startsWith("epsg:")){const z=Number(P.slice(5));isNaN(z)||z===0||(B=new q({wkid:z}))}else B=Te(P)??q.WGS84;else x=!0,B=new q({wkid:3857});y=new H(C,M,N,$),y.spatialReference=B}else x=!0,y=new H({xmin:-.5,ymin:.5-i,xmax:t-.5,ymax:.5,spatialReference:new q({wkid:3857})});const w=U(s,"MRF_META/Rsets"),S=parseInt(w&&w.getAttribute("scale")||"2",10),T=y.spatialReference,v=new ye({origin:new A({x:y.xmin,y:y.ymax,spatialReference:T}),blockWidth:h,blockHeight:u,pyramidBlockWidth:h,pyramidBlockHeight:u,compression:a,pyramidScalingFactor:S}),F=new A({x:y.width/t,y:y.height/i,spatialReference:T}),_=new ge({width:t,height:i,extent:y,isPseudoSpatialReference:x,spatialReference:T,bandCount:n,pixelType:l,pixelSize:F,noDataValue:m,storageInfo:v}),k=K(s,"datafile"),I=K(s,"IndexFile");return{rasterInfo:_,files:{mrf:this.url,index:I||this.url.replace(".mrf",".idx"),data:k||this.url.replace(".mrf",te.get(a).blobExtension)}}}async _fetchAuxiliaryData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return Ae(e)}catch{return null}}};b([R()],ce.prototype,"_files",void 0),b([R()],ce.prototype,"_storageIndex",void 0),b([R({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=b([Q("esri.layers.support.rasterIO.MRFRaster")],ce);const es=ce,Me=(s,e)=>{var r;return(r=s.get(e))==null?void 0:r.values},fe=(s,e)=>{var r,t;return(t=(r=s.get(e))==null?void 0:r.values)==null?void 0:t[0]};let ne=class extends oe{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(s){await this.init();const e=s?s.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new O("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:i,isBigTiff:n}=di(r),a=[];await this._readIFDs(a,r,t,i,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=mi(a),h=pi(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:h,...o},this._set("rasterInfo",l),!o.isSupported)throw new O("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new O("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:u=[]}=this.ioConfig;if(!u.includes("aux.xml")){const d=await this._fetchAuxiliaryMetaData(s);d!=null&&this._processPAMInfo(d,l)}u.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(s),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(s,e,r,t={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(s,e,r))return null;const i=await this._fetchRawTiffTile(s,e,r,!1,t);if(i!=null&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(s,e,r,!0,t);a!=null&&a.pixels[0]instanceof Uint8Array&&(i.mask=a.pixels[0])}return i}_parseIFDs(s){var M,N;const e=yi(s),{width:r,height:t,tileWidth:i,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:h,pyramidBlockWidth:u,pyramidBlockHeight:d,tileBoundary:m,affine:p,metadata:g}=e,f=((M=e.extent.spatialReference)==null?void 0:M.wkt)||((N=e.extent.spatialReference)==null?void 0:N.wkid);let y=Te(f),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new q({wkid:3857}));const w=new H({...e.extent,spatialReference:y}),S=new A(w?{x:w.xmin,y:w.ymax,spatialReference:y}:{x:0,y:0}),T=new ye({blockWidth:i,blockHeight:n,pyramidBlockWidth:u,pyramidBlockHeight:d,compression:l,origin:S,firstPyramidLevel:c,maximumPyramidLevel:h,blockBoundary:m}),v=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),F=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let _=null;const k=fe(s[0],"PHOTOMETRICINTERPRETATION"),I=Me(s[0],"COLORMAP");if(k<=3&&(I==null?void 0:I.length)>3&&I.length%3==0){_=[];const $=I.length/3;for(let P=0;P<$;P++)_.push([P,I[P]>>>8,I[P+$]>>>8,I[P+2*$]>>>8])}const C=new ge({width:r,height:t,bandCount:a,pixelType:o,pixelSize:v,storageInfo:T,spatialReference:y,isPseudoSpatialReference:x,keyProperties:F,extent:w,colormap:_,statistics:g?g.statistics:null});return p!=null&&p.length&&(C.nativeExtent=new H({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:y}),C.transform=new Je({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:C}}_processPAMInfo(s,e){if(e.statistics=s.statistics??e.statistics,e.histograms=s.histograms,s.histograms&&e.statistics==null&&(e.statistics=Ne(s.histograms)),s.transform&&e.transform==null){e.transform=s.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&s.spatialReference&&(e.spatialReference=s.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(s,e,r,t,i,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+i,to:t+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=t+i,t=0);const o=await this._readIFD(e,r,t,i,xe.TIFF_TAGS,n,a);if(s.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(s,e,r,o.nextIFD-i,i,n,a)}async _readIFD(s,e,r,t,i=xe.TIFF_TAGS,n=4,a){var l,c;if(!s)return null;const o=gi(s,e,r,t,i,n);if(o.success){const h=[];if((l=o.ifd)==null||l.forEach(u=>{u.values||h.push(u)}),h.length>0){const u=h.map(m=>m.offlineOffsetSize).filter(Pe),d=Math.min.apply(null,u.map(m=>m[0]));if(Math.min.apply(null,u.map(m=>m[0]+m[1]))-d<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:d,to:d+this._bufferSize},responseType:"array-buffer",signal:a});s=m,t=d,h.forEach(p=>xi(s,e,p,t))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const u=o.ifd.get("GEOKEYDIRECTORY"),d=u==null?void 0:u.values;if(d&&d.length>4){const m=d[0]+"."+d[1]+"."+d[2],p=await this._readIFD(s,e,u.valueOffset+6-t,t,xe.GEO_KEYS,2,a);u.data=p.ifd,u.data&&u.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==s.byteLength)return(s=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(s,e,0,t,xe.TIFF_TAGS,4,a)}async _fetchRawTiffTile(s,e,r,t,i={}){const n=this._getTileLocation(s,e,r,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,h=a.map(v=>this.request(this.url,{range:v,responseType:"array-buffer",signal:i.signal})),u=await Promise.all(h),d=u.map(v=>v.data.byteLength).reduce((v,F)=>v+F),m=u.length===1?u[0].data:new ArrayBuffer(d),p=[0],g=[0];if(u.length>1){const v=new Uint8Array(m);for(let F=0,_=0;F<u.length;F++){const k=u[F].data;v.set(new Uint8Array(k),_),p[F]=_,_+=k.byteLength,g[F]=k.byteLength}}const{blockWidth:f,blockHeight:y}=this.getBlockWidthHeight(s),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:f,height:y,planes:null,pixelType:null});if(x==null)return null;let w,S,T;if(o!==f||l!==y){let v=x.mask;if(v)for(w=0;w<y;w++)if(T=w*f,w<l)for(S=o;S<f;S++)v[T+S]=0;else for(S=0;S<f;S++)v[T+S]=0;else for(v=new Uint8Array(f*y),x.mask=v,w=0;w<l;w++)for(T=w*f,S=0;S<o;S++)v[T+S]=1}return x}_getTileLocation(s,e,r,t=!1){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,a=s===0?0:s-(i-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=wi(l,o),h=Me(l,"TILEOFFSETS");if(h===void 0)return null;const u=Me(l,"TILEBYTECOUNTS"),{minRow:d,minCol:m,maxRow:p,maxCol:g}=n[a];if(e>p||r>g||e<d||r<m)return null;const f=fe(l,"IMAGEWIDTH"),y=fe(l,"IMAGELENGTH"),x=fe(l,"TILEWIDTH"),w=fe(l,"TILELENGTH"),S=c?this.rasterInfo.bandCount:1,T=S*e*(g+1)+r,v=[{from:h[T],to:h[T+S-1]+u[T+S-1]-1}];if(c){let k=!0;for(let I=0;I<S;I++)if(h[T+I]+u[T+I]!==h[T+I+1]){k=!1;break}if(!k)for(let I=0;I<S;I++)v[I]={from:h[T+I],to:h[T+I]+u[T+I]-1}}const F=h[T],_=u[T];return F==null||_==null?null:{ranges:v,ifd:l,actualTileWidth:r===g&&f%x||x,actualTileHeight:e===p&&y%w||w}}async _fetchAuxiliaryMetaData(s){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:s==null?void 0:s.signal});return Ae(e)}catch{return null}}async _fetchAuxiliaryTable(s){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:s==null?void 0:s.signal}),r=dt.parse(e);return r!=null&&r.recordSet?ft.fromJSON(r.recordSet):null}catch{return null}}};b([R()],ne.prototype,"_files",void 0),b([R()],ne.prototype,"_headerInfo",void 0),b([R()],ne.prototype,"_bufferSize",void 0),b([R({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=b([Q("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const ts=ne,W=new Map;W.set("CRF",{desc:"Cloud Raster Format",constructor:Ui}),W.set("MRF",{desc:"Meta Raster Format",constructor:es}),W.set("TIFF",{desc:"GeoTIFF",constructor:ts}),W.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Zi}),W.set("JPG",{desc:"JPG Raster Format",constructor:be}),W.set("PNG",{desc:"PNG Raster Format",constructor:be}),W.set("GIF",{desc:"GIF Raster Format",constructor:be}),W.set("BMP",{desc:"BMP Raster Format",constructor:be});class is{static get supportedFormats(){const e=new Set;return W.forEach((r,t)=>e.add(t)),e}static async open(e){const{url:r,ioConfig:t,sourceJSON:i}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:i,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(t!=null&&t.enableCRF))throw new O("rasterfactory:open",`cannot open raster: ${r}`);return o=W.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new O("rasterfactory:open","not a supported format "+n);const c=Array.from(W.keys());let h=0;const u=()=>(n=c[h++],n&&(n!=="CRF"||t!=null&&t.enableCRF)?(o=W.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>u())):null);return u()}static register(e,r,t){W.has(e.toUpperCase())||W.set(e.toUpperCase(),{desc:r,constructor:t})}}let E=class extends Dt(Pi(Ci(Mi(zt(Gi($i(Bt(_t(Ot($t)))))))))){constructor(...s){super(...s),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(s,e){return typeof s=="string"?{url:s,...e}:s}load(s){const e=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(kt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o;const s=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,r=e==null?void 0:e.attributeTable,t=r!=null?r.fields:null,i="Raster.";if(t){const l=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const h=c.clone();return h.name=i+c.name,h});s.push(...l)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){const l=(o=a.variables[0].unit)==null?void 0:o.trim(),c="Magnitude"+(l?` (${l})`:"");s.push(new ue({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),s.push(new ue({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return s}createPopupTemplate(s){const{rasterFields:e}=this,r=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Bi({fields:e,title:this.title},{...s,visibleFieldNames:r})}async generateRasterInfo(s,e){if(!(s=Ee($e,s)))return this._primaryRasters[0].rasterInfo;try{const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const t=Be(s.rasterFunctionDefinition??s.toJSON(),r),i=new De({rasterFunction:t});return await i.open(e),i.rasterInfo}catch{return null}}write(s,e){const{raster:r}=this;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(s,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new O("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(s){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,i=[this.url];t&&Fi(t.toJSON(),i);const n=await Promise.all(i.map(o=>is.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),a=n.findIndex(o=>o==null);if(a>-1)throw new O("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);if(this._primaryRasters=n,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(h=>o[h.url]=h);const l=Be(t.rasterFunctionDefinition??t.toJSON(),o),c=new De({rasterFunction:l});try{await c.open(),this.raster=c}catch(h){const u=ze.getLogger(this.declaredClass);h instanceof O&&u.error("imagery-tile-layer:open",h.message),u.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const r=this.raster.rasterInfo;if(!r)throw new O("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ft(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};b([R()],E.prototype,"_primaryRasters",void 0),b([R({type:[Ct],json:{write:{overridePolicy(){var s;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((s=this.bandIds)==null?void 0:s.join(","))!=="0,1,2"}}}}})],E.prototype,"bandIds",void 0),b([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Mt(Kt)],E.prototype,"interpolation",void 0),b([R(Qt)],E.prototype,"legendEnabled",void 0),b([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),b([R({type:["show","hide"]})],E.prototype,"listMode",void 0),b([R({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),b([R()],E.prototype,"sourceJSON",void 0),b([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),b([R({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),b([R({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),b([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(s,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(s,e,r){e[r]=!s}}}})],E.prototype,"popupEnabled",void 0),b([R({type:Pt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],E.prototype,"popupTemplate",void 0),b([R({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),b([R({readOnly:!0,type:[ue]})],E.prototype,"fields",void 0),b([R({readOnly:!0,type:[ue]})],E.prototype,"rasterFields",null),E=b([Q("esri.layers.ImageryTileLayer")],E);const zs=E;export{zs as default};
