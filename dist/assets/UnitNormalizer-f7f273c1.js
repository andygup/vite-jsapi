import{e as J}from"./Segment-1413661a.js";import{K as D,gZ as L,lW as g,jH as Q,lX as V,bz as tt,lY as et,cm as nt,dR as st,cM as at,lZ as it,l_ as rt,l$ as G,W as F}from"./index-d29f6b97.js";const gt={readOnly:!0,get(){return J(this.view)}};var x;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(x||(x={}));function W(t){if(!t)return null;if(Q(t)&&t.wkid){const e=V[t.wkid];if(e)return e}if(t.wkt){const e=ot(t.wkt);if(e)return e}return null}function ot(t){const e=et.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const s=parseFloat(n[1]),a=parseFloat(n[2]);return isNaN(s)||isNaN(a)?null:{a:s,f:a===0?0:1/a}}function ct(t){const e=W(t??tt.WGS84);if(ht(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return W(t)!==null}function vt(t,e="meters"){if(!t)throw new D("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(s=>!lt(s.spatialReference)))throw new D("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let s=0;s<t.length;s++){const a=t[s],{spatialReference:m}=a,v=a.type==="polyline"?a.paths:a.rings;let r=0;for(let R=0;R<v.length;R++){const o=v[R];let f=0;for(let M=1;M<o.length;M++){const z=o[M-1][0],w=o[M][0],$=o[M-1][1],h=o[M][1];if($!==h||z!==w){const c=new ut;ft(c,[z,$],[w,h],m),f+=c.distance}}r+=f}r=L(r,"meters",e),n.push(r)}return n}class ut{constructor(e=0,n=void 0,s=void 0){this.distance=e,this.azimuth=n,this.reverseAzimuth=s}}function ft(t,e,n,s){const a=e[0]*g,m=e[1]*g,v=n[0]*g,r=n[1]*g,{a:R,b:o,f,radius:M}=ct(s),z=v-a,w=Math.atan((1-f)*Math.tan(m)),$=Math.atan((1-f)*Math.tan(r)),h=Math.sin(w),c=Math.cos(w),_=Math.sin($),l=Math.cos($);let y,A,d,i,N,j,P,U,b,E,S=1e3,u=z;do{if(P=Math.sin(u),U=Math.cos(u),d=Math.sqrt(l*P*(l*P)+(c*_-h*l*U)*(c*_-h*l*U)),d===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;N=h*_+c*l*U,j=Math.atan2(d,N),b=c*l*P/d,A=1-b*b,i=N-2*h*_/A,isNaN(i)&&(i=0),E=f/16*A*(4+f*(4-3*A)),y=u,u=z+(1-E)*f*b*(j+E*d*(i+E*N*(2*i*i-1)))}while(Math.abs(u-y)>1e-12&&--S>0);if(S===0){const I=M,K=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-a))*I,k=v-a,X=Math.sin(k)*Math.cos(r),Y=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(k),B=Math.atan2(X,Y);return t.azimuth=B/g,t.distance=K,t.reverseAzimuth=void 0,t}const p=A*(R*R-o*o)/(o*o),q=p/1024*(256+p*(p*(74-47*p)-128)),T=o*(1+p/16384*(4096+p*(p*(320-175*p)-768)))*(j-q*d*(i+q/4*(N*(2*i*i-1)-q/6*i*(4*d*d-3)*(4*i*i-3)))),Z=Math.atan2(l*Math.sin(u),c*_-h*l*Math.cos(u)),C=Math.atan2(c*Math.sin(u),c*_*Math.cos(u)-h*l);return t.azimuth=Z/g,t.distance=T,t.reverseAzimuth=C/g,t}function Rt(t,e){if(nt(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)st(e,e,t[n]);at(e,e,1/t.length)}}function _t(t,e,n,s){s.projectToRenderScreen(t,H),s.projectToRenderScreen(e,O),it(n,dt,Mt),rt(n,n)}const H=G(),Mt=H,O=G(),dt=O;class zt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=F(this._spatialReference,1),this._metersPerElevationUnit=F(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,gt as a,ft as b,Rt as c,x as e,_t as f,zt as t,vt as y};
