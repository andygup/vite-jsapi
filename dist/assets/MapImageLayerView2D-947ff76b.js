import{ae as o,af as p,ai as h,b5 as g,d as l,J as d,D as u}from"./index-298039cc.js";import{a as c}from"./BitmapContainer-539ed228.js";import{f as y,d as f}from"./LayerView-4abd70b4.js";import{o as x}from"./GraphicsView2D-ebd0f877.js";import{n as w}from"./HighlightGraphicContainer-736c1fb1.js";import{v}from"./ExportStrategy-d5101597.js";import{b as _}from"./commonProperties-4b011f7f.js";import{m as H}from"./ExportImageParameters-fca92f34.js";import{i as I}from"./RefreshableLayerView-c9b2e46c.js";import{P,r as V}from"./drapedUtils-88ee8ecb.js";import"./WGLContainer-d6b7f024.js";import"./definitions-e9823d3c.js";import"./VertexArrayObject-3b90f4d9.js";import"./TextureDescriptor-5435dd8f.js";import"./enums-74e97557.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-2b290530.js";import"./enums-55085e26.js";import"./ProgramTemplate-d93fa17b.js";import"./MaterialKey-5cd105bd.js";import"./utils-9f98c7bc.js";import"./heatmapUtils-504dcdfd.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-4816f74c.js";import"./parser-b2de9c30.js";import"./earcut-668af5ae.js";import"./featureConversionUtils-d60f35b9.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./ExpandedCIM-8ef1015d.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-a972ead3.js";import"./floatRGBA-461edd60.js";import"./normalizeUtilsSync-24904591.js";import"./normalizeUtilsCommon-385dee75.js";import"./projectionSupport-63b0391b.js";import"./json-48e3ea08.js";import"./labelingInfo-15c25517.js";import"./labelUtils-a3e7c4dd.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-10e33437.js";import"./AttributeStoreView-fde1d802.js";import"./TiledDisplayObject-98c2d450.js";import"./visualVariablesUtils-f44dd383.js";import"./visualVariablesUtils-2a68713e.js";import"./Matcher-3430e0a0.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-aab10f96.js";import"./LRUCache-879d162d.js";import"./MemCache-782b477a.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-7224a88d.js";import"./featureFlags-8316ab84.js";import"./schemaUtils-4212862b.js";import"./sql-b41dbce4.js";import"./diffUtils-39c4addc.js";import"./clusterUtils-55de78c0.js";import"./SizeVariable-8d9a35e0.js";import"./colorRamps-51949912.js";import"./LegendOptions-1287e8f6.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-f797b468.js";import"./util-adfadaca.js";import"./ComputedAttributeStorage-2a8858e6.js";import"./FieldsIndex-dd7ebb88.js";import"./arcadeTimeUtils-8966e284.js";import"./executionError-fb3f283a.js";import"./centroid-8e8cfa47.js";import"./normalizeUtils-1070937a.js";import"./BaseGraphicContainer-179a325d.js";import"./FeatureContainer-beebd31d.js";import"./TileContainer-caf615e9.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-e5e006e9.js";import"./ElevationInfo-7a165961.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-dc3dc3e5.js";import"./scaleUtils-d3b16de2.js";import"./popupUtils-235425cd.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return o([p()],i.prototype,"exportImageParameters",void 0),o([p({readOnly:!0})],i.prototype,"floors",null),o([p({readOnly:!0})],i.prototype,"exportImageVersion",null),o([p()],i.prototype,"layer",void 0),o([p()],i.prototype,"suspended",void 0),o([p(_)],i.prototype,"timeExtent",void 0),i=o([h("esri.views.layers.MapImageLayerView")],i),i};let a=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this.declaredClass).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,e=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(s,m)=>V(s,m,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,m)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:m})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:e,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,e){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}fetchImageBitmap(t,i,r,e){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([p()],a.prototype,"strategy",void 0),o([p()],a.prototype,"updating",void 0),a=o([h("esri.views.2d.layers.MapImageLayerView2D")],a);const oi=a;export{oi as default};
