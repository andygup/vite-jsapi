import{r as z,a as at}from"./WGLContainer-ce35e22a.js";import{g as lt,P as ot}from"./programUtils-ef69e29a.js";import{d as L,C as F,m as V,by as $,L as ht,aO as ut,M as _t}from"./index-a9c4c008.js";import{a as M,T as Y,w as T}from"./TextureDescriptor-176a7a4b.js";import{B as b,h as H,F as R,i as nt,C as G,S as A,j as v,U as S,k as l,P as E,D as P,a as m,T as x,b as U,c as w,d as X,e as y,f as ft,l as O,m as W,n as g,o as ct,p as Z,g as dt,q as D}from"./enums-08489827.js";import{g as Q,m as Et,b as pt,S as gt}from"./OrderIndependentTransparency-01632ab9.js";import{B as C,F as N,V as k,g as J}from"./VertexArrayObject-0dfc47a6.js";import{u as Ft}from"./floatRGBA-498c3d22.js";import{e as tt}from"./doublePrecisionUtils-a59b69fa.js";import{V as j}from"./VertexElementDescriptor-24e04d97.js";import{i as B,c as Bt}from"./DisjointTimerQuery-0b864cc8.js";const Tt=r=>{let t="";t+=r[0].toUpperCase();for(let e=1;e<r.length;e++){const s=r[e];s===s.toUpperCase()?(t+="_",t+=s):t+=s.toUpperCase()}return t},Rt=r=>{const t={};for(const e in r){const s=Tt(e);t[s]=r[e]}return lt(t)},te=(r,t,e,s)=>{const i=r+r.substring(r.lastIndexOf("/")),n=t+t.substring(t.lastIndexOf("/")),a=Rt(s);return{attributes:e,shaders:{vertexShader:a+z(`${i}.vert`),fragmentShader:a+z(`${n}.frag`)}}};class et{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:b.ONE,dstRGB:b.ZERO,srcAlpha:b.ONE,dstAlpha:b.ZERO},this.blendEquation={mode:H.ADD,modeAlpha:H.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=R.BACK,this.frontFace=nt.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=G.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:R.FRONT_AND_BACK,func:G.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:R.FRONT_AND_BACK,fail:A.KEEP,zFail:A.KEEP,zPass:A.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.uniformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class xt{constructor(t){this._allocations=new Map,t?Error.stackTraceLimit=1/0:(this.add=()=>{},this.remove=()=>{})}add(t){this._allocations.set(t,new Error().stack)}remove(t){this._allocations.delete(t)}get information(){let t="";if(this._allocations.size>0){t+=`${this._allocations.size} live object allocations:
`;const e=new Map;this._allocations.forEach(s=>{e.set(s,(e.get(s)??0)+1)}),e.forEach((s,i)=>{const n=i.split(`
`);n.shift(),n.shift(),t+=`${s}: ${n.shift()}
`,n.forEach(a=>t+=`   ${a}
`)})}return t}}const bt={RECORD_ALLOCATIONS:!1};class At{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new xt(bt.RECORD_ALLOCATIONS);this._current.length<v.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,e){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t]),this._allocations.add(e)}decrement(t,e){--this._current[t],this._allocations.remove(e)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce((t,e)=>t+e,0)}get resourceInformation(){let t="";if(this.total>0){t+=`Live objects:
`;for(let e=0;e<v.COUNT;++e){const s=this._current[e];s>0&&(t+=`${v[e]}: ${s}
`)}}return t+=this._allocations.information,t}}class K{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:`#version 300 es
    precision highp float;

    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,fragment:`#version 300 es
    precision highp float;

    out vec4 fragColor;

    void main(void) {
      fragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`}}_createHelperProgram(){const t=K.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return C.createIndex(this._rctx,S.STATIC_DRAW,new Uint32Array([0]))}resetIndicesType(){!this._program.compiled||!this._indexBuffer||(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,l.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(E.POINTS,1,P.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}}class I{constructor(){this._result=!1}dispose(){this._program=L(this._program)}get result(){return this._program!=null&&(this._result=this._test(this._program),this.dispose()),this._result}}class mt extends I{constructor(t){super(),this._rctx=t,this._helperProgram=null,this._rctx.type===F.WEBGL2&&V("mac")&&V("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){var t;super.dispose(),(t=this._helperProgram)==null||t.dispose(),this._helperProgram=null}_test(t){const e=this._rctx;e.resetState();const s=new M;s.wrapMode=m.CLAMP_TO_EDGE,s.samplingMode=x.NEAREST,s.width=1,s.height=1;const i=new N(e,{colorTarget:U.TEXTURE,depthStencilTarget:w.NONE},s),n=C.createIndex(this._rctx,S.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(n,l.ELEMENT_ARRAY_BUFFER),e.drawElements(E.POINTS,1,P.UNSIGNED_BYTE,0),e.useProgram(t),e.bindVAO(null),e.drawArrays(E.TRIANGLES,0,258);const a=new Uint8Array(4);return i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,a),i.dispose(),n.dispose(),a[0]===255}_prepareProgram(){const e=`#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${Q.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,s=`#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${Q.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(e,s,new Map([]))}_prepareHelperProgram(){const t=K.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class St extends I{constructor(t){super(),this._rctx=t,this._program=st(this._rctx,!1),this._obfuscated=st(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=L(this._obfuscated)}_test(t){if(V("force-double-precision-obfuscation"))return!0;if(this._obfuscated==null)return!1;const e=this._runProgram(t),s=this._runProgram(this._obfuscated);return e!==0&&(s===0||e/s>5)}_runProgram(t){const e=this._rctx;e.resetState();const s=new M;s.wrapMode=m.CLAMP_TO_EDGE,s.samplingMode=x.NEAREST,s.width=1,s.height=1;const i=new N(e,{colorTarget:U.TEXTURE,depthStencilTarget:w.NONE},s),n=C.createVertex(e,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),a=new k(e,new Map([["position",0]]),{geometry:[new j("position",2,P.UNSIGNED_SHORT,0,4)]},{geometry:n}),u=$(5633261287538229e-9,2626832878767164e-9,1.4349880495278358e6),o=$(563327146742708e-8,2.6268736381334523e6,1434963231608387e-9),h=new Float32Array(6);tt(u,h,3);const _=new Float32Array(6);tt(o,_,3),e.useProgram(t),t.setUniform3f("u_highA",h[0],h[2],h[4]),t.setUniform3f("u_lowA",h[1],h[3],h[5]),t.setUniform3f("u_highB",_[0],_[2],_[4]),t.setUniform3f("u_lowB",_[1],_[3],_[5]),e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(a),e.drawArrays(E.TRIANGLE_STRIP,0,4);const f=new Uint8Array(4);i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,f),a.dispose(!1),n.dispose(),i.dispose();const c=(u[2]-o[2])/25,p=Ft(f);return Math.abs(c-p)}}function st(r,t){const s=`

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${t?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `,i=`
  precision highp float;

  varying vec4 v_color;

  void main() {
    gl_FragColor = v_color;
  }
  `;return r.programCache.acquire(s,i,new Map([["position",0]]))}class Ct extends I{constructor(t){var n,a,u,o,h;if(super(),this._rctx=t,!t.gl)return;if(t.type===F.WEBGL1){this._result=!!((n=t.capabilities.textureFloat)!=null&&n.textureFloat&&((a=t.capabilities.colorBufferFloat)!=null&&a.textureFloat));return}if(!(((u=t.capabilities.textureFloat)==null?void 0:u.textureFloat)&&((o=t.capabilities.colorBufferFloat)==null?void 0:o.textureFloat)&&((h=t.capabilities.colorBufferFloat)==null?void 0:h.floatBlend)))return;const s=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,i=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=t.programCache.acquire(s,i,new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new M;s.wrapMode=m.CLAMP_TO_EDGE,s.dataType=y.FLOAT,s.internalFormat=ft.RGBA32F,s.samplingMode=x.NEAREST,s.width=1,s.height=1;const i=new N(e,{colorTarget:U.TEXTURE,depthStencilTarget:w.NONE},s),n=C.createVertex(e,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),a=new k(e,new Map([["a_pos",0]]),{geometry:[new j("a_pos",2,P.UNSIGNED_SHORT,0,4)]},{geometry:n});e.useProgram(t);const u=e.getBoundFramebufferObject(),{x:o,y:h,width:_,height:f}=e.getViewport();e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.bindVAO(a),e.drawArrays(E.TRIANGLE_STRIP,0,4);const c=Et({blending:pt});e.setPipelineState(c),e.drawArrays(E.TRIANGLE_STRIP,0,4);const p=e.gl.getError();return e.setViewport(o,h,_,f),e.bindFramebuffer(u),a.dispose(!1),n.dispose(),i.dispose(),p===1282?(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1):!0}}class Ot extends I{constructor(t){super(),this._rctx=t;const e=`
      precision highp float;
      attribute vec2 a_pos;
      uniform highp sampler2D u_texture;
      varying vec4 v_color;

      float getBit(in float bitset, in int bitIndex) {
        float offset = pow(2.0, float(bitIndex));
        return mod(floor(bitset / offset), 2.0);
      }

      void main() {
        vec4 value = texture2D(u_texture, vec2(0.0));
        float bit = getBit(value.x * 255.0, 1);

        v_color = bit * vec4(1.0);
        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
      }
      `,s=`
      precision highp float;
      varying vec4 v_color;

      void main() {
        gl_FragColor = v_color;
      }
      `;this._program=t.programCache.acquire(e,s,new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new M;s.wrapMode=m.CLAMP_TO_EDGE,s.samplingMode=x.NEAREST,s.width=1,s.height=1;const i=new N(e,{colorTarget:U.TEXTURE,depthStencilTarget:w.NONE},s),n=new Uint8Array(4),a=C.createVertex(e,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),u=new k(e,new Map([["a_position",0]]),{geometry:[new j("a_position",2,P.SHORT,0,4)]},{geometry:a});e.useProgram(t);const o=new Y(e,s,new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),e.bindTexture(o,0);const h=e.getBoundFramebufferObject();e.bindFramebuffer(i),e.useProgram(t);const{x:_,y:f,width:c,height:p}=e.getViewport();e.setViewport(0,0,1,1),e.bindVAO(u),e.drawArrays(E.TRIANGLE_STRIP,0,4),e.setViewport(_,f,c,p),i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,n),u.dispose(!1),a.dispose(),i.dispose();const q=n[0]!==255||n[1]!==255||n[2]!==255||n[3]!==255;return q&&ht.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${n[0]}.${n[1]}.${n[2]}.${n[3]}]`),e.bindFramebuffer(h),q}}class vt extends I{constructor(t){super(),this._rctx=t,this._image=new Image,this._image.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",this._image.width=5,this._image.height=5,this._image.decode();const e=`
    precision highp float;

    attribute vec2 a_pos;
    varying vec2 v_uv;

    void main() {
      v_uv = a_pos;
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,s=`
    precision highp float;

    varying vec2 v_uv;

    uniform sampler2D u_texture;

    void main() {
      gl_FragColor = texture2D(u_texture, v_uv);
    }
    `;this._program=t.programCache.acquire(e,s,new Map([["a_pos",0]]))}dispose(){super.dispose(),this._image.src=""}_test(t){const e=this._rctx;if(!e.gl)return t.dispose(),!0;const s=new M;s.wrapMode=m.CLAMP_TO_EDGE,s.samplingMode=x.NEAREST,s.width=1,s.height=1;const i=new N(e,{colorTarget:U.TEXTURE,depthStencilTarget:w.NONE},s),n=C.createVertex(e,S.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),a=new k(e,new Map([["a_pos",0]]),at,{geometry:n});s.samplingMode=x.LINEAR,s.wrapMode=m.CLAMP_TO_EDGE;const u=new Y(e,s,this._image);e.useProgram(t),e.bindTexture(u,0),t.setUniform1i("u_texture",0);const o=e.getBoundFramebufferObject(),{x:h,y:_,width:f,height:c}=e.getViewport();e.bindFramebuffer(i),e.setViewport(0,0,1,1),e.setClearColor(0,0,0,0),e.setBlendingEnabled(!1),e.clearSafe(O.COLOR_BUFFER_BIT),e.bindVAO(a),e.drawArrays(E.TRIANGLE_STRIP,0,4);const p=new Uint8Array(4);return i.readPixels(0,0,1,1,X.RGBA,y.UNSIGNED_BYTE,p),a.dispose(!1),n.dispose(),i.dispose(),u.dispose(),e.setViewport(h,_,f,c),e.bindFramebuffer(o),p[0]!==255}}class Mt{constructor(t){this.rctx=t,this.floatBufferBlend=new Ct(t),this.svgPremultipliesAlpha=new vt(t),this.doublePrecisionRequiresObfuscation=new St(t),this.ignoresSamplerPrecision=new Ot(t),this.drawArraysRequiresIndicesTypeReset=new mt(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function Pt(r,t){if(t.disjointTimerQuery)return null;if(B(r))return{drawBuffers:r.drawBuffers.bind(r),MAX_DRAW_BUFFERS:r.MAX_DRAW_BUFFERS,MAX_COLOR_ATTACHMENTS:r.MAX_COLOR_ATTACHMENTS};if(t.drawBuffers)return null;const e=r.getExtension("WEBGL_draw_buffers");return e?{drawBuffers:e.drawBuffersWEBGL.bind(e),MAX_DRAW_BUFFERS:e.MAX_DRAW_BUFFERS_WEBGL,MAX_COLOR_ATTACHMENTS:e.MAX_COLOR_ATTACHMENTS_WEBGL}:null}function Ut(r){if(B(r))return r;const t=r.getExtension("ANGLE_instanced_arrays");return t?{drawArraysInstanced:t.drawArraysInstancedANGLE.bind(t),drawElementsInstanced:t.drawElementsInstancedANGLE.bind(t),vertexAttribDivisor:t.vertexAttribDivisorANGLE.bind(t)}:null}function wt(r,t){if(t.compressedTextureETC)return null;const e=r.getExtension("WEBGL_compressed_texture_etc");return e?{COMPRESSED_R11_EAC:e.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:e.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:e.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:e.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:e.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:e.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function yt(r,t){if(t.compressedTextureS3TC)return null;const e=r.getExtension("WEBGL_compressed_texture_s3tc");return e?{COMPRESSED_RGB_S3TC_DXT1:e.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:e.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:e.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:e.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function Nt(r,t){if(B(r))return{MIN:r.MIN,MAX:r.MAX};if(t.blendMinMax)return null;{const e=r.getExtension("EXT_blend_minmax");return e?{MIN:e.MIN_EXT,MAX:e.MAX_EXT}:null}}function It(r,t){if(t.textureFilterAnisotropic)return null;const e=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return e?{MAX_TEXTURE_MAX_ANISOTROPY:e.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:e.TEXTURE_MAX_ANISOTROPY_EXT}:null}function Dt(r,t){if(B(r))return{textureFloat:!0,textureFloatLinear:!t.textureFloatLinear&&!!r.getExtension("OES_texture_float_linear"),textureHalfFloat:!0,textureHalfFloatLinear:!0,HALF_FLOAT:r.HALF_FLOAT,R16F:r.R16F,RG16F:r.RG16F,RGBA16F:r.RGBA16F,R32F:r.R32F,RG32F:r.RG32F,RGBA32F:r.RGBA32F,R11F_G11F_B10F:r.R11F_G11F_B10F,RGB16F:r.RGB16F};if(r instanceof WebGLRenderingContext){const e=!t.textureHalfFloat&&r.getExtension("OES_texture_half_float");return{textureFloat:!t.textureFloat&&!!r.getExtension("OES_texture_float"),textureFloatLinear:!t.textureFloatLinear&&!!r.getExtension("OES_texture_float_linear"),textureHalfFloat:!!e,textureHalfFloatLinear:!t.textureHalfFloatLinear&&!!r.getExtension("OES_texture_half_float_linear"),HALF_FLOAT:e?e.HALF_FLOAT_OES:void 0}}return null}function Lt(r,t){if(B(r)){const e=!t.colorBufferHalfFloat&&r.getExtension("EXT_color_buffer_half_float")||!t.colorBufferFloat&&r.getExtension("EXT_color_buffer_float"),s=!t.colorBufferFloat&&r.getExtension("EXT_color_buffer_float"),i=!t.floatBlend&&!t.colorBufferFloat&&r.getExtension("EXT_float_blend");return!e&&!s&&!i?null:{textureFloat:!!s,textureHalfFloat:!!e,floatBlend:!!i,R16F:r.R16F,RG16F:r.RG16F,RGBA16F:r.RGBA16F,R32F:r.R32F,RG32F:r.RG32F,RGBA32F:r.RGBA32F,R11F_G11F_B10F:r.R11F_G11F_B10F,RGB16F:r.RGB16F}}if(r instanceof WebGLRenderingContext){const e=!t.colorBufferHalfFloat&&r.getExtension("EXT_color_buffer_half_float"),s=!t.colorBufferFloat&&r.getExtension("WEBGL_color_buffer_float"),i=!t.floatBlend&&!t.colorBufferFloat&&r.getExtension("EXT_float_blend");return!e&&!s&&!i?null:{textureFloat:!!s,textureHalfFloat:!!e,floatBlend:!!i,RGBA16F:e?e.RGBA16F_EXT:void 0,RGB16F:e?e.RGB16F_EXT:void 0,RGBA32F:s?s.RGBA32F_EXT:void 0}}return null}function it(r,t,e,s,i){if(s&&B(r))return!0;if(t[e])return!1;for(const n of i)if(r.getExtension(n))return!0;return!1}function Gt(r,t){if(!B(r)||t.textureNorm16)return null;const e=r.getExtension("EXT_texture_norm16");return e?{R16:e.R16_EXT,RG16:e.RG16_EXT,RGB16:e.RGB16_EXT,RGBA16:e.RGBA16_EXT,R16_SNORM:e.R16_SNORM_EXT,RG16_SNORM:e.RG16_SNORM_EXT,RGB16_SNORM:e.RGB16_SNORM_EXT,RGBA16_SNORM:e.RGBA16_SNORM_EXT}:null}function Xt(r,t){const e=t.loseContext&&r.getExtension("WEBGL_lose_context");return e?{loseRenderingContext:()=>e.loseContext()}:null}function kt(r,t){if(B(r))return{createVertexArray:r.createVertexArray.bind(r),deleteVertexArray:r.deleteVertexArray.bind(r),bindVertexArray:r.bindVertexArray.bind(r)};if(t.vao)return null;const e=r.getExtension("OES_vertex_array_object")||r.getExtension("MOZ_OES_vertex_array_object")||r.getExtension("WEBKIT_OES_vertex_array_object");return e?{createVertexArray:e.createVertexArrayOES.bind(e),deleteVertexArray:e.deleteVertexArrayOES.bind(e),bindVertexArray:e.bindVertexArrayOES.bind(e)}:null}class Wt{constructor(t,e){this._gl=t,this._instancing=null,this._vertexArrayObject=null,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._minMaxBlending=null,this._loseContext=null,this._drawBuffers=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get drawBuffers(){return this._drawBuffers||(this._drawBuffers=Pt(this._gl,this._disabledExtensions)),this._drawBuffers}get instancing(){return this._instancing||(this._instancing=Ut(this._gl)),this._instancing}get vao(){return this._vertexArrayObject||(this._vertexArrayObject=kt(this._gl,this._disabledExtensions)),this._vertexArrayObject}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=wt(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=yt(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=It(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=Bt(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){return this._textureFloat||(this._textureFloat=Dt(this._gl,this._disabledExtensions)),this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=Lt(this._gl,this._disabledExtensions)),this._colorBufferFloat}get blendMinMax(){return this._minMaxBlending||(this._minMaxBlending=Nt(this._gl,this._disabledExtensions)),this._minMaxBlending}get depthTexture(){return this._depthTexture===null&&(this._depthTexture=it(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=Xt(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=Gt(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear===null&&(this._textureFloatLinear=it(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}let ee=class{constructor(t,e){this.gl=t,this.instanceCounter=new At,this.programCache=new ot(this),this._state=new et,this._numOfDrawCalls=0,this._numOfTriangles=0,this.type=B(t)?F.WEBGL2:F.WEBGL1,this._loadExtensions(),this.configure(e)}get gl2(){return this.type===F.WEBGL1?null:this.gl}configure(t){this._capabilities=new Wt(this.gl,t),this._parameters=this._loadParameters(t);const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new et,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new gt({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const i=s.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const i=s.function;this.setStencilFunction(i.func,i.ref,i.mask);const n=s.operation;this.setStencilOp(n.fail,n.zFail,n.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{s?this.setStencilWriteMask(s.mask):this.setStencilWriteMask(0)}}),this.enforceState(),L(this._driverTest),this._driverTest=new Mt(this)}dispose(){L(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(l.ARRAY_BUFFER),this.unbindBuffer(l.ELEMENT_ARRAY_BUFFER),this.type===F.WEBGL2&&(this.unbindBuffer(l.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(l.PIXEL_PACK_BUFFER),this.unbindBuffer(l.PIXEL_UNPACK_BUFFER),this.unbindBuffer(l.COPY_READ_BUFFER),this.unbindBuffer(l.COPY_WRITE_BUFFER)),this._state.textureUnitMap.length=0,T()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(t===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){var t;(t=this._state.program)==null||t.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){const t=this.capabilities.vao;t&&(t.bindVertexArray(null),this._state.vertexArrayObject=null),this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){(t!==this._state.blendColor.r||e!==this._state.blendColor.g||s!==this._state.blendColor.b||i!==this._state.blendColor.a)&&(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){(t!==this._state.blendFunction.srcRGB||e!==this._state.blendFunction.dstRGB)&&(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){(this._state.blendFunction.srcRGB!==t||this._state.blendFunction.srcAlpha!==s||this._state.blendFunction.dstRGB!==e||this._state.blendFunction.dstAlpha!==i)&&(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){(this._state.blendEquation.mode!==t||this._state.blendEquation.modeAlpha!==e)&&(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){(this._state.colorMask.r!==t||this._state.colorMask.g!==e||this._state.colorMask.b!==s||this._state.colorMask.a!==i)&&(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){(this._state.clearColor.r!==t||this._state.clearColor.g!==e||this._state.clearColor.b!==s||this._state.clearColor.a!==i)&&(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(t===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(t===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){(this._state.polygonOffset[0]!==t||this._state.polygonOffset[1]!==e)&&(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(t===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){(this._state.scissorRect.x!==t||this._state.scissorRect.y!==e||this._state.scissorRect.width!==s||this._state.scissorRect.height!==i)&&(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(t===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){(this._state.depthRange.zNear!==t||this._state.depthRange.zFar!==e)&&(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(t===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){(this._state.stencilFunction.func!==t||this._state.stencilFunction.ref!==e||this._state.stencilFunction.mask!==s)&&(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=R.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){(this._state.stencilFunction.face!==t||this._state.stencilFunction.func!==e||this._state.stencilFunction.ref!==s||this._state.stencilFunction.mask!==i)&&(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){(this._state.stencilOperation.face!==R.FRONT_AND_BACK||this._state.stencilOperation.fail!==t||this._state.stencilOperation.zFail!==e||this._state.stencilOperation.zPass!==s)&&(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=R.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){(this._state.stencilOperation.face!==t||this._state.stencilOperation.fail!==e||this._state.stencilOperation.zFail!==s||this._state.stencilOperation.zPass!==i)&&(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(W+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,e=255){t&&(t&O.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&O.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&O.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t))}drawArrays(t,e,s){if(T()&&(this._numOfDrawCalls++,this._numOfTriangles+=rt(t,s)),this.gl.drawArrays(t,e,s),T()){const i=J(this);i&&console.error("drawArrays:",i)}}drawElements(t,e,s,i){if(T()&&(this._numOfDrawCalls++,this._numOfTriangles+=rt(t,e)),this.gl.drawElements(t,e,s,i),T()){const n=J(this);if(n){const a=this.getBoundVAO(),u=a==null?void 0:a.indexBuffer,o=a==null?void 0:a.vertexBuffers,h={indexBuffer:u,vertexBuffers:o},_={mode:t,count:e,type:s,offset:i},f=(u==null?void 0:u.size)??0,c=i+e,p=f<c?`. Buffer is too small. Attempted to draw index ${c} of ${f}`:"";console.error(`drawElements: ${n}${p}`,{args:_,vao:h})}}}logInfo(){T()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){T()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const n=this._state.viewport;(n.x!==t||n.y!==e||n.width!==s||n.height!==i)&&(n.x=t,n.y=e,n.width=s,n.height=i,this.gl.viewport(t,e,s,i))}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){var e;this._state.program!==t&&((e=this._state.program)==null||e.stop(),this._state.program=t,this.gl.useProgram((t==null?void 0:t.glName)??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[e];return t==null||t.glName==null?(i!=null&&(this.setActiveTexture(e,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[e]=null,i):!s&&i===t?(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),i):(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,i)}unbindTexture(t){if(t!=null)for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(!(!e&&this._state.readFramebuffer===t&&this._state.drawFramebuffer===t)){if(t==null){this.gl.bindFramebuffer(g.FRAMEBUFFER,null),this._state.readFramebuffer=null,this._state.drawFramebuffer=null;return}t.initializeAndBind(g.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const i=e===g.READ_FRAMEBUFFER,n=i?this._state.readFramebuffer:this._state.drawFramebuffer;!s&&n===t||(t==null?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),i?this._state.readFramebuffer=t??null:this._state.drawFramebuffer=t??null)}blitFramebuffer(t,e,s=0,i=0,n=t.width,a=t.height,u=0,o=0,h=e.width,_=e.height,f=O.COLOR_BUFFER_BIT,c=x.NEAREST){this.bindFramebufferSeparate(t,g.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,g.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,n,a,u,o,h,_,f,c)}bindBuffer(t,e){if(t)switch(e??(e=t.bufferType),e){case l.ARRAY_BUFFER:this._state.vertexBuffer=d(this.gl,t,e,this._state.vertexBuffer);break;case l.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=d(this.gl,t,e,this._state.indexBuffer);break;case l.UNIFORM_BUFFER:this._state.uniformBuffer=d(this.gl,t,e,this._state.uniformBuffer);break;case l.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=d(this.gl,t,e,this._state.pixelPackBuffer);break;case l.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=d(this.gl,t,e,this._state.pixelUnpackBuffer);break;case l.COPY_READ_BUFFER:this._state.copyReadBuffer=d(this.gl,t,e,this._state.copyReadBuffer);break;case l.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=d(this.gl,t,e,this._state.copyWriteBuffer);break}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=this._state.uniformBufferBindingPoints;let i=s[e];return i==null&&(i={buffer:null,offset:0,size:0},s[e]=i),i}bindBufferBase(t,e,s){const i=this._getBufferBinding(t,e);if(i==null||i.buffer===s&&i.offset===0&&i.size===0)return;this.gl.bindBufferBase(t,e,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0}bindBufferRange(t,e,s,i,n){const a=this._getBufferBinding(t,e);if(a==null||a.buffer===s&&a.offset===i&&a.size===n)return;if(i%this._parameters.uniformBufferOffsetAlignment!==0){console.error("Uniform buffer binding offset is not a multiple of the context offset alignment");return}this.gl.bindBufferRange(t,e,s.glName,i,n),a.buffer=s,a.offset=i,a.size=n}bindUBO(t,e,s,i){if(e==null){this.bindBufferBase(l.UNIFORM_BUFFER,t,null);return}T()&&(i??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),s!==void 0&&i!==void 0?this.bindBufferRange(l.UNIFORM_BUFFER,t,e.buffer,s,i):this.bindBufferBase(l.UNIFORM_BUFFER,t,e.buffer)}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const i=this._state.uniformBufferBindingPoints[e];i!=null&&i.buffer===t.buffer&&this.bindBufferBase(l.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case l.ARRAY_BUFFER:this._state.vertexBuffer=d(this.gl,null,t,this._state.vertexBuffer);break;case l.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=d(this.gl,null,t,this._state.indexBuffer);break;case l.UNIFORM_BUFFER:this._state.uniformBuffer=d(this.gl,null,t,this._state.uniformBuffer);break;case l.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=d(this.gl,null,t,this._state.pixelPackBuffer);break;case l.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=d(this.gl,null,t,this._state.pixelUnpackBuffer);break;case l.COPY_READ_BUFFER:this._state.copyReadBuffer=d(this.gl,null,t,this._state.copyReadBuffer);break;case l.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=d(this.gl,null,t,this._state.copyWriteBuffer);break}}bindVAO(t=null){if(t==null){this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null);return}this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t)}async clientWaitAsync(t=_t(10)){const e=this.gl,s=e.fenceSync(ct.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");this.instanceCounter.increment(v.Sync,s),e.flush();let i;do await ut(t),i=e.clientWaitSync(s,0,0);while(i===Z.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(v.Sync,s),e.deleteSync(s),i===Z.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=g.FRAMEBUFFER){return t===g.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(l.ARRAY_BUFFER),this.unbindBuffer(l.ELEMENT_ARRAY_BUFFER),this.type===F.WEBGL2&&(this.unbindBuffer(l.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(l.PIXEL_PACK_BUFFER),this.unbindBuffer(l.PIXEL_UNPACK_BUFFER),this.unbindBuffer(l.COPY_READ_BUFFER),this.unbindBuffer(l.COPY_WRITE_BUFFER));for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(b.ONE,b.ZERO),this.setBlendEquation(H.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(R.BACK),this.setFrontFace(nt.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(G.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(G.ALWAYS,0,0),this.setStencilOp(A.KEEP,A.KEEP,A.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var n,a,u;const t=this.capabilities.vao;t&&t.bindVertexArray(null);const{gl:e,gl2:s}=this;for(let o=0;o<this.parameters.maxVertexAttributes;o++)e.disableVertexAttribArray(o);if(this._state.vertexBuffer?e.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):e.bindBuffer(l.ARRAY_BUFFER,null),this._state.indexBuffer?e.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):e.bindBuffer(l.ELEMENT_ARRAY_BUFFER,null),s!=null){this._state.uniformBuffer?s.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):s.bindBuffer(l.UNIFORM_BUFFER,null);for(let o=0;o<this._parameters.maxUniformBufferBindings;o++){const h=this._state.uniformBufferBindingPoints[o];if(h!=null){const{buffer:_,offset:f,size:c}=h;_!==null?f===0&&c===0?s.bindBufferBase(l.UNIFORM_BUFFER,o,_.glName):s.bindBufferRange(l.UNIFORM_BUFFER,o,_.glName,f,c):s.bindBufferBase(l.UNIFORM_BUFFER,o,null)}}this._state.pixelPackBuffer?s.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):s.bindBuffer(l.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?s.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):s.bindBuffer(l.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?s.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):s.bindBuffer(l.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?s.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):s.bindBuffer(l.COPY_WRITE_BUFFER,null),s.bindFramebuffer(g.READ_FRAMEBUFFER,null),s.readBuffer(s.BACK),this._state.readFramebuffer&&(s.bindFramebuffer(g.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),s.readBuffer(dt.COLOR_ATTACHMENT0)),s.bindFramebuffer(g.DRAW_FRAMEBUFFER,((n=this._state.drawFramebuffer)==null?void 0:n.glName)??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,e.bindFramebuffer(g.FRAMEBUFFER,((a=this._state.drawFramebuffer)==null?void 0:a.glName)??null);if(t&&this._state.vertexArrayObject){const o=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(o)}e.useProgram(((u=this._state.program)==null?void 0:u.glName)??null),e.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),e.bindRenderbuffer(e.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null),this._state.blend===!0?e.enable(this.gl.BLEND):e.disable(this.gl.BLEND),e.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),e.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),e.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),e.clearDepth(this._state.clearDepth),e.clearStencil(this._state.clearStencil),e.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),e.cullFace(this._state.cullFace),e.depthFunc(this._state.depthFunction),e.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),e.depthMask(this._state.depthWrite),e.frontFace(this._state.frontFace),e.lineWidth(1),this._state.faceCulling===!0?e.enable(e.CULL_FACE):e.disable(e.CULL_FACE),e.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),e.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?e.enable(e.SCISSOR_TEST):e.disable(e.SCISSOR_TEST),e.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),e.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),e.stencilMask(this._state.stencilWriteMask);for(let o=0;o<this.parameters.maxTextureImageUnits;o++){e.activeTexture(W+o),e.bindTexture(D.TEXTURE_2D,null),e.bindTexture(D.TEXTURE_CUBE_MAP,null),this.type===F.WEBGL2&&(e.bindTexture(D.TEXTURE_3D,null),e.bindTexture(D.TEXTURE_2D_ARRAY,null));const h=this._state.textureUnitMap[o];h!=null&&e.bindTexture(h.descriptor.target,h.glName)}e.activeTexture(W+this._state.activeTexture);const i=this._state.viewport;e.viewport(i.x,i.y,i.width,i.height),this.resetInfo()}_loadExtensions(){this.type===F.WEBGL1&&this.gl.getExtension("OES_element_index_uint"),this.gl.getExtension("KHR_parallel_shader_compile")}_loadParameters(t){const e=this.capabilities.textureFilterAnisotropic,s=t.maxAnisotropy??1/0,i=this.type===F.WEBGL2,n=this.gl,a={versionString:this.gl.getParameter(this.gl.VERSION),maxVertexTextureImageUnits:this.gl.getParameter(this.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),maxVertexAttributes:this.gl.getParameter(this.gl.MAX_VERTEX_ATTRIBS),maxMaxAnisotropy:e?Math.min(this.gl.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY),s):1,maxTextureImageUnits:this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),maxTextureSize:this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),maxUniformBufferBindings:i?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0,maxVertexUniformBlocks:i?n.getParameter(n.MAX_VERTEX_UNIFORM_BLOCKS):0,maxFragmentUniformBlocks:i?n.getParameter(n.MAX_FRAGMENT_UNIFORM_BLOCKS):0,maxUniformBlockSize:i?n.getParameter(n.MAX_UNIFORM_BLOCK_SIZE):0,uniformBufferOffsetAlignment:i?n.getParameter(n.UNIFORM_BUFFER_OFFSET_ALIGNMENT):1,maxArrayTextureLayers:i?n.getParameter(n.MAX_ARRAY_TEXTURE_LAYERS):1,maxSamples:i?n.getParameter(n.MAX_SAMPLES):1};return Y.TEXTURE_UNIT_FOR_UPDATES=a.maxTextureImageUnits-1,a}};function d(r,t,e,s){return t?s!==t&&r.bindBuffer(e,t.glName):r.bindBuffer(e,null),t}function rt(r,t){switch(r){case E.POINTS:return 2*t;case E.TRIANGLES:return t/3;case E.TRIANGLE_STRIP:return t-2;case E.TRIANGLE_FAN:return t-2;default:return 0}}export{ee as R,te as c};
