import{eK as U,e as n,y as l,bE as D,a as x,bB as q,bz as ye,hy as le,hx as Ve,rc as Ae,a3 as E,bG as re,bH as ge,bI as fe,L as N,by as Pe,fz as $e,fF as wt,b1 as ne,d as Z,bw as et,bu as Se,bA as lt,bx as ut,a1 as St,fA as Ft,bD as M,fE as me,gY as xt,K as j,bC as z,j as It,g as Dt,B as Tt,rd as Pt,gC as Nt,h5 as Ct,Y as Ot,hd as _t,a$ as jt}from"./index-c18a96f3.js";import{O as Vt}from"./MultiOriginJSONSupport-309fe89a.js";import{w,o as oe,i as Ie,j as G,c as At,l as $t,d as Mt,a as Jt,h as it,m as ze,g as Et,b as qt,p as zt,S as Lt,q as Gt,k as Ht,Q as Ut,f as Bt,e as Qt,t as kt}from"./ImageHistogramParameters-738fc2a7.js";import{u as Wt,f as Kt,c as Zt,p as Xt}from"./commonProperties-797d5904.js";import{G as pt,k as ct,H as Yt,J as ei,g as ti,K as ii,N as ri,m as mt,u as Le,s as si,L as ni,j as rt,P as ai,O as oi}from"./dataUtils-7226a66b.js";import{b as li}from"./UniqueValueRenderer-8560c516.js";import{r as ui}from"./FieldsIndex-b071eb44.js";import{t as st}from"./imageBitmapUtils-6d85ffa7.js";import{b as Je}from"./normalizeUtils-55909f8c.js";import{g as dt}from"./FeatureSet-037cc3b1.js";import{b as Ge}from"./Query-f6fbedf0.js";import{s as pi}from"./executeQueryJSON-b4d1c649.js";import"./pbf-355c66cc.js";import"./AttachmentInfo-c3c38252.js";import"./AttachmentQuery-79b9f34f.js";import{s as ci,n as mi}from"./executeForIds-e6f23073.js";import"./RelationshipQuery-29f696bb.js";import"./TopFeaturesQuery-0b0fa5be.js";import{l as di}from"./ArcGISService-776e388b.js";import{a as hi}from"./BlendLayer-1406a3b7.js";import{o as yi}from"./CustomParametersMixin-22e0ea3b.js";import{c as gi}from"./OperationalLayer-5e561312.js";import{j as fi}from"./PortalLayer-86ea101d.js";import{t as Ri}from"./ScaleRangeLayer-972bc331.js";import{a as vi}from"./TemporalLayer-29628135.js";import{e as bi}from"./versionUtils-cabdac94.js";import{p as wi}from"./popupUtils-0e81192d.js";import"./ColorStop-c5089175.js";import"./colorRamps-8bdec164.js";import"./generateRendererUtils-339821e1.js";import"./ElevationInfo-6aa5c711.js";import"./colorUtils-c0f43caf.js";import"./diffUtils-2a9fee10.js";import"./normalizeUtilsCommon-f4f57432.js";import"./query-e124a463.js";import"./pbfQueryUtils-c33d2f62.js";import"./queryZScale-275d69e0.js";import"./jsonUtils-266f6943.js";import"./portalItemUtils-8a77bd20.js";const Si={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Fi=new Set(["u1","u2","u4","u8","s8","u16","s16"]),xi={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ii=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function ht(s){return Ii.has(s.type)}function He(s,i){var e;if(!s||!i)return U(s||i);const o=U(s);if(o.rasterFunctionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),yt(o.rasterFunctionDefinition.arguments,i)}else((e=i.functionName)==null?void 0:e.toLowerCase())!=="none"&&(gt(o.functionArguments).Raster=i);return o}function yt(s,i){for(const o in s)o.toLowerCase()==="raster"&&(s[o].type==="RasterFunctionVariable"?(s[o]=i.rasterFunctionDefinition,s[o].type="RasterFunctionTemplate"):s[o].type==="RasterFunctionTemplate"&&yt(s[o].arguments,i))}function X(s){const i=U(Si[s.functionName+"Function"]),o=s.functionArguments;for(const e in o)e.toLowerCase()==="raster"?(i.arguments[e]=X(o[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=Vi(o[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=o[e];return i}function Di(s,i){switch(i=i||{},s.type){case"raster-stretch":return Ni(s,i);case"class-breaks":return Ci(s,i);case"unique-value":return Oi(s,i);case"raster-colormap":return _i(s,i);case"vector-field":return Ti(s,i);case"raster-shaded-relief":return Pi(s,i);case"flow":throw new Error("Unsupported rendering rule.")}}function gt(s){const i=s==null?void 0:s.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?gt(i.functionArguments):s}const Fe={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ti(s,i){const o=new w;o.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=i,r=e==="vector-uv";let a,u;if(t&&t.length===2){const y=t.map(v=>v.toLowerCase());a=y.indexOf("magnitude"),u=y.indexOf("direction")}a!==-1&&a!==null||(a=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(y=>y.field==="Magnitude"):new li,d={magnitudeBandID:a,directionBandID:u,isUVComponents:r,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:xi[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return o.functionArguments=d,i.convertToRFT?new w({rasterFunctionDefinition:X(o)}):o}function Pi(s,i){const o=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new w;const e=new w;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,r=s.scalingType==="none"?1:3,a={HillshadeType:t,SlopeType:r,ZFactor:s.zFactor};return t===0&&(a.Azimuth=s.azimuth,a.Altitude=s.altitude),r===3&&(a.PSPower=s.pixelSizePower,a.PSZFactor=s.pixelSizeFactor),e.functionArguments=a,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",o?a.ColorRamp=pt(s.colorRamp):a.Colormap=ct(s.colorRamp)),o?new w({rasterFunctionDefinition:X(e)}):e}function Ni(s,i){var u;const o=i.convertToRFT,e=new w;e.functionName="Stretch";const t=Fe[Yt.toJSON(s.stretchType)],r="u8",a={StretchType:t,Statistics:ji(s.statistics??[]),DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(a.Min=s.outputMin),s.outputMax!=null&&(a.Max=s.outputMax),t===Fe.standardDeviation?(a.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=r):t===Fe.percentClip?(a.MinPercent=s.minPercent,a.MaxPercent=s.maxPercent,e.outputPixelType=r):t===Fe.minMax?e.outputPixelType=r:t===Fe.sigmoid&&(a.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=a,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,m=new w;if(o)m.functionArguments={ColorRamp:pt(p)};else{const c=ei(p);if(c)m.functionArguments={colorRamp:c};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=s.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&((u=d.colorRamps)!=null&&u.length)&&d.colorRamps.forEach(y=>y.algorithm=y.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:ct(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,o?new w({rasterFunctionDefinition:X(m)}):m}return o?new w({rasterFunctionDefinition:X(e)}):e}function Ci(s,i){const o=[],e=[],t=[],r=[],{pixelType:u,rasterAttributeTable:p}=i,m=p==null?null:p.features,c=ft(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((h,g)=>{var O;const b=(O=h.symbol)==null?void 0:O.color;let S;b!=null&&b.a&&h.minValue!=null&&h.maxValue!=null&&m.forEach(V=>{h.minValue!=null&&h.maxValue!=null&&(S=V.attributes[s.field],(S>=h.minValue&&S<h.maxValue||g===s.classBreakInfos.length-1&&S>=h.minValue)&&r.push([V.attributes[c],b.r,b.g,b.b]))})});const f=u?Me(r,u):r,R=new w;return R.functionName="Colormap",R.functionArguments={},R.functionArguments.Colormap=f,R.variableName="Raster",i.convertToRFT?new w({rasterFunctionDefinition:X(R)}):R}s.classBreakInfos.forEach((f,R)=>{if(f.minValue==null||f.maxValue==null)return;const h=f.symbol&&f.symbol.color;h!=null&&h.a?(R===0?o.push(f.minValue,f.maxValue+1e-6):o.push(f.minValue+1e-6,f.maxValue+1e-6),e.push(R),r.push([R,h.r,h.g,h.b])):t.push(f.minValue,f.maxValue)});const d=u?Me(r,u):r,y=new w;y.functionName="Remap",y.functionArguments={InputRanges:o,OutputValues:e,NoDataRanges:t},y.variableName="Raster";const v=new w;return v.functionName="Colormap",v.functionArguments={Colormap:d,Raster:y},i.convertToRFT?new w({rasterFunctionDefinition:X(v)}):v}function Me(s,i){const o=Fi.has(i)?ti(i):null;return o&&s.push([Math.floor(o[0]-1),0,0,0],[Math.ceil(o[1]+1),0,0,0]),s}function ft(s){if(s==null)return;const{fields:i}=s,o=i&&i.find(e=>e&&e.name&&e.name.toLowerCase()==="value");return o&&o.name}function Oi(s,i){var d,y,v;const o=[],{pixelType:e,rasterAttributeTable:t}=i,r=t==null?null:t.features,a=ft(t),u=(y=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:y.toRgb(),p=s.uniqueValueInfos;if(p)if(r){if(a){const f=new Map;p.forEach(h=>{var S;const g=h.value,b=(S=h.symbol)==null?void 0:S.color;g!=null&&b&&b.a&&f.set(String(g),b.toRgb())});const R=s.field;r.forEach(({attributes:h})=>{const g=String(h[R]),b=h[a],S=f.get(g);S?o.push([b,...S]):u&&o.push([b,...u])})}}else for(let f=0;f<p.length;f++){const R=p[f],h=(v=R.symbol)==null?void 0:v.color,g=+R.value;if(h!=null&&h.a){if(isNaN(g))return null;o.push([g,h.r,h.g,h.b])}}const m=e&&o.length>0?Me(o,e):o,c=new w;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new w({rasterFunctionDefinition:X(c)}):c}function _i(s,i){const o=s.extractColormap();if(!o||o.length===0)return null;const{pixelType:e}=i,t=e?Me(o,e):o,r=new w;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,i.convertToRFT?new w({rasterFunctionDefinition:X(r)}):r}function ji(s){const i=[];return s==null||s.forEach(o=>{const e=o;if(Array.isArray(e))i.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];i.push(t)}}),i}function Vi(s){const i=[],o=[];return s.forEach(e=>{i.push(e[0]),o.push(ii([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:o}}let P=class extends q{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(i,o,e){this.layer.version<10.3||(o[e]=i)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(i,o,e){this.format&&this.format.toLowerCase().includes("jpg")&&i!=null&&(o[e]=i)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(i,o,e){this.format==="lerc"&&i!=null&&(o[e]=i)}get format(){var i;return((i=this.layer.renderer)==null?void 0:i.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(i,o,e){this.format==="lerc"&&this.layer.version>=10.5&&(o[e]=i)}get version(){const i=this.layer;return i.commitProperty("bandIds"),i.commitProperty("format"),i.commitProperty("compressionQuality"),i.commitProperty("compressionTolerance"),i.commitProperty("interpolation"),i.commitProperty("noData"),i.commitProperty("noDataInterpretation"),i.commitProperty("mosaicRule"),i.commitProperty("rasterFunction"),i.commitProperty("adjustAspectRatio"),i.commitProperty("pixelFilter"),i.commitProperty("definitionExpression"),i.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(i){this._set("version",i)}get mosaicRule(){const i=this.layer;let o=i.mosaicRule;const e=i.definitionExpression;return o?e&&e!==o.where&&(o=o.clone(),o.where=e):e&&(o=new G({where:e})),o}get rasterFunction(){var a,u;const i=this.layer;let{rasterFunction:o}=i;const e=i.pixelFilter,t=!i.format||i.format.includes("jpg")||i.format.includes("png");o=this._addResampleRasterFunction(o);const r=(a=i.multidimensionalSubset)==null?void 0:a.areaOfInterest;return r&&(o=this._addClipFunction(o,r)),t&&!e&&((u=i.renderer)==null?void 0:u.type)!=="vector-field"&&(o=this.combineRendererWithRenderingRule(o)),o}combineRendererWithRenderingRule(i){const o=this.layer,{rasterInfo:e,renderer:t}=o;return i=i||o.rasterFunction,!t||!ht(t)?i:He(Di(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:r})=>r),convertColorRampToColormap:o.version<10.6,convertToRFT:!!(i!=null&&i.rasterFunctionDefinition),bandCount:e.bandCount}),i)}_addResampleRasterFunction(i){var r;if(((r=this.layer.renderer)==null?void 0:r.type)!=="vector-field"||(i==null?void 0:i.functionName)==="Resample")return i;const o=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new w({functionName:"Resample",functionArguments:{ResamplingType:o,InputCellSize:e}});return t=i!=null&&i.rasterFunctionDefinition?new w({rasterFunctionDefinition:X(t)}):t,He(t,i)}_addClipFunction(i,o){const e=new w({functionName:"Clip",functionArguments:{ClippingGeometry:o.toJSON(),ClippingType:1}});return He(e,i)}};n([l()],P.prototype,"layer",void 0),n([l({json:{write:!0}})],P.prototype,"adjustAspectRatio",null),n([D("adjustAspectRatio")],P.prototype,"writeAdjustAspectRatio",null),n([l({json:{write:!0}})],P.prototype,"bandIds",null),n([l({json:{write:!0}})],P.prototype,"compression",void 0),n([l({json:{write:!0}})],P.prototype,"compressionQuality",null),n([D("compressionQuality")],P.prototype,"writeCompressionQuality",null),n([l({json:{write:!0}})],P.prototype,"compressionTolerance",null),n([D("compressionTolerance")],P.prototype,"writeCompressionTolerance",null),n([l({json:{write:!0}})],P.prototype,"format",null),n([l({type:String,json:{read:{reader:oe.read},write:{writer:oe.write}}})],P.prototype,"interpolation",null),n([l({json:{write:!0}})],P.prototype,"noData",null),n([l({type:String,json:{read:{reader:Ie.read},write:{writer:Ie.write}}})],P.prototype,"noDataInterpretation",null),n([l({json:{write:!0}})],P.prototype,"pixelType",void 0),n([l({json:{write:!0}})],P.prototype,"lercVersion",void 0),n([D("lercVersion")],P.prototype,"writeLercVersion",null),n([l({type:Number})],P.prototype,"version",null),n([l({json:{write:!0}})],P.prototype,"mosaicRule",null),n([l({json:{write:!0,name:"renderingRule"}})],P.prototype,"rasterFunction",null),P=n([x("esri.layers.mixins.ExportImageServiceParameters")],P);let Re=class extends q{constructor(i){super(i),this.north=null,this.up=null,this.spatialReference=null}};n([l({type:Number,json:{write:!0}})],Re.prototype,"north",void 0),n([l({type:Number,json:{write:!0}})],Re.prototype,"up",void 0),n([l({type:ye,json:{write:!0}})],Re.prototype,"spatialReference",void 0),Re=n([x("esri.rest.support.ImageAngleResult")],Re);const Ai=Re;let se=class extends q{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};n([l({type:Number,json:{read:!0,write:!0}})],se.prototype,"value",void 0),n([l({type:String,json:{read:!0,write:!0}})],se.prototype,"displayValue",void 0),n([l({type:Number,json:{read:!0,write:!0}})],se.prototype,"uncertainty",void 0),se=n([x("esri.rest.support.ImageMeasureResultValue")],se);let we=class extends se{constructor(){super(...arguments),this.unit=null}};n([l({type:String,json:{read:le.read,write:le.write}})],we.prototype,"unit",void 0),we=n([x("esri.rest.support.ImageMeasureResultLengthValue")],we);let Ne=class extends se{constructor(){super(...arguments),this.unit=null}};n([l({type:String,json:{read:Ve.read,write:Ve.write}})],Ne.prototype,"unit",void 0),Ne=n([x("esri.rest.support.ImageMeasureResultAreaValue")],Ne);let De=class extends se{constructor(){super(...arguments),this.unit=null}};n([l({type:String,json:{read:Ae.read,write:Ae.write}})],De.prototype,"unit",void 0),De=n([x("esri.rest.support.ImageMeasureResultAngleValue")],De);let ae=class extends q{constructor(){super(...arguments),this.name=null,this.sensorName=null}};n([l({type:String,json:{read:!0,write:!0}})],ae.prototype,"name",void 0),n([l({type:String,json:{read:!0,write:!0}})],ae.prototype,"sensorName",void 0),ae=n([x("esri.rest.support.BaseImageMeasureResult")],ae);let xe=class extends ae{constructor(){super(...arguments),this.area=null,this.perimeter=null}};n([l({type:Ne,json:{read:!0,write:!0}})],xe.prototype,"area",void 0),n([l({type:we,json:{read:!0,write:!0}})],xe.prototype,"perimeter",void 0),xe=n([x("esri.rest.support.ImageAreaResult")],xe);const $i=xe;let ve=class extends ae{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};n([l({type:we,json:{read:!0,write:!0}})],ve.prototype,"distance",void 0),n([l({type:De,json:{read:!0,write:!0}})],ve.prototype,"azimuthAngle",void 0),n([l({type:De,json:{read:!0,write:!0}})],ve.prototype,"elevationAngle",void 0),ve=n([x("esri.rest.support.ImageDistanceResult")],ve);const Mi=ve;let Ce=class extends ae{constructor(){super(...arguments),this.height=null}};n([l({type:we,json:{read:!0,write:!0}})],Ce.prototype,"height",void 0),Ce=n([x("esri.rest.support.ImageHeightResult")],Ce);const Ji=Ce;let Q=class extends q{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};n([l({json:{write:!0}})],Q.prototype,"catalogItemVisibilities",void 0),n([l({type:dt,json:{write:!0}})],Q.prototype,"catalogItems",void 0),n([l({type:E,json:{write:!0}})],Q.prototype,"location",void 0),n([l({json:{write:!0}})],Q.prototype,"name",void 0),n([l({json:{write:!0}})],Q.prototype,"objectId",void 0),n([l({json:{write:!0}})],Q.prototype,"processedValues",void 0),n([l({json:{write:!0}})],Q.prototype,"properties",void 0),n([l({json:{write:!0}})],Q.prototype,"value",void 0),Q=n([x("esri.rest.support.ImageIdentifyResult")],Q);const Ei=Q;let Oe=class extends q{constructor(){super(...arguments),this.geometries=null}};n([l({json:{write:!0}})],Oe.prototype,"geometries",void 0),Oe=n([x("esri.rest.support.ImagePixelLocationResult")],Oe);const qi=Oe;let _e=class extends ae{constructor(){super(...arguments),this.point=null}};n([l({type:E,json:{name:"point.value",read:!0,write:!0}})],_e.prototype,"point",void 0),_e=n([x("esri.rest.support.ImagePointResult")],_e);const zi=_e;let ee=class extends q{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};n([l({json:{write:!0}})],ee.prototype,"attributes",void 0),n([l({type:E,json:{write:!0}})],ee.prototype,"location",void 0),n([l({json:{write:!0}})],ee.prototype,"locationId",void 0),n([l({json:{write:!0}})],ee.prototype,"rasterId",void 0),n([l({json:{write:!0}})],ee.prototype,"resolution",void 0),n([l({json:{write:!0}})],ee.prototype,"pixelValue",void 0),ee=n([x("esri.rest.support.ImageSample")],ee);const Li=ee;let je=class extends q{constructor(){super(...arguments),this.samples=null}};n([l({type:[Li],json:{write:!0}})],je.prototype,"samples",void 0),je=n([x("esri.rest.support.ImageSampleResult")],je);const Gi=je;function Rt(s){const i=s==null?void 0:s.time;if(i&&(i.start!=null||i.end!=null)){const o=[];i.start!=null&&o.push(i.start),i.end==null||o.includes(i.end)||o.push(i.end),s.time=o.join(",")}}async function vt(s,i,o){const e=re(s),t=i.geometry?[i.geometry]:[],r=await Je(t),a=i.toJSON();Rt(a);const u=r&&r[0];u!=null&&(a.geometry=u.toJSON());const p=ge({...e.query,f:"json",...a});return fe(p,o)}async function Hi(s,i,o){var p;const e=i.toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),i.point!=null&&((p=i.point.spatialReference)!=null&&p.imageCoordinateSystem)&&(e.point.spatialReference=qe(i.point.spatialReference)),i.spatialReference!=null&&i.spatialReference.imageCoordinateSystem&&(e.spatialReference=bt(i.spatialReference));const t=re(s),r=ge({...t.query,f:"json",...e}),a=fe(r,o),{data:u}=await N(`${t.path}/computeAngles`,a);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new ye({wkid:0,imageCoordinateSystem:u.spatialReference}):ye.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new Ai(u)}async function Ui(s,i,o){var m;const e=i.toJSON(),{geometries:t}=i;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=qe(t[c].spatialReference));const r=re(s),a=ge({...r.query,f:"json",...e}),u=fe(a,o),{data:p}=await N(`${r.path}/computePixelLocation`,u);return qi.fromJSON(p)}async function Bi(s,i,o){const e=await vt(s,i,o),t=re(s),{data:r}=await N(`${t.path}/computeStatisticsHistograms`,e),{statistics:a}=r;return a!=null&&a.length&&a.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:a,histograms:r.histograms}}async function Qi(s,i,o){const e=await vt(s,i,o),t=re(s),{data:r}=await N(`${t.path}/computeHistograms`,e);return{histograms:r.histograms}}async function ki(s,i,o){var d,y;const e=i.toJSON();Rt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Je(i.geometry),r=t==null?void 0:t[0];r!=null&&(e.geometry=r.toJSON());const a=re(s),u=ge({...a.query,f:"json",...e}),p=fe(u,o),{data:m}=await N(`${a.path}/getSamples`,p),c=(y=m==null?void 0:m.samples)==null?void 0:y.map(v=>{const f=v.value==="NaN"||v.value===""?null:v.value.split(" ").map(R=>Number(R));return{...v,pixelValue:f}});return Gi.fromJSON({samples:c})}async function nt(s,i,o){const e=re(s),t=i.geometry?[i.geometry]:[];return Je(t).then(r=>{const a=i.toJSON(),u=r&&r[0];u!=null&&(a.geometry=JSON.stringify(u.toJSON()));const p=ge({...e.query,f:"json",...a}),m=fe(p,o);return N(e.path+"/identify",m)}).then(r=>Ei.fromJSON(r.data))}async function Wi(s,i,o){const e=await Ee(s,i,[i.fromGeometry,i.toGeometry],o);return Ji.fromJSON(e)}async function Ki(s,i,o){const e=await Ee(s,i,[i.geometry],o);return $i.fromJSON(e)}async function Zi(s,i,o){const e=await Ee(s,i,[i.geometry],o);return zi.fromJSON(e)}async function Xi(s,i,o){const e=await Ee(s,i,[i.fromGeometry,i.toGeometry],o);return Mi.fromJSON(e)}async function Ee(s,i,o,e){const t=re(s),r=await Je(o),a=i.toJSON();r[0]!=null&&(a.fromGeometry=JSON.stringify(at(r[0]))),r[1]!=null&&(a.toGeometry=JSON.stringify(at(r[1])));const u=ge({...t.query,f:"json",...a}),p=fe(u,e),{data:m}=await N(t.path+"/measure",p);return m}function at(s){var o;const i=s.toJSON();return(o=s.spatialReference)!=null&&o.imageCoordinateSystem&&(i.spatialReference=qe(s.spatialReference)),i}function qe(s){const{imageCoordinateSystem:i}=s;if(i){const{id:o,referenceServiceName:e}=i;return o!=null?e?{icsid:o,icsns:e}:{icsid:o}:{ics:i}}return s.toJSON()}function bt(s,i){const o=qe(s),{icsid:e,icsns:t,wkid:r}=o;return e!=null?t==null||i!=null&&i.toLowerCase().includes("/"+t.toLowerCase()+"/")?`0:${e}`:JSON.stringify(o):r?r.toString():JSON.stringify(o)}async function Yi(s,i,o){var O,V;const e=re(s),t=ge({...e==null?void 0:e.query,f:"json"}),r=fe(t,o),a=`${e==null?void 0:e.path}/${i}/info`,u=N(`${a}`,r),p=N(`${a}/keyProperties`,r),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let y=null;(O=c.statistics)!=null&&O.length&&(y=c.statistics.map(T=>({min:T[0],max:T[1],avg:T[2],stddev:T[3]})));const v=Pe.fromJSON(c.extent),f=Math.ceil(v.width/c.pixelSizeX-.1),R=Math.ceil(v.height/c.pixelSizeY-.1),h=v.spatialReference,g=new E({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:h}),b=(V=c.histograms)!=null&&V.length?c.histograms:null,S=new ri({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new mt({width:f,height:R,bandCount:c.bandCount,extent:v,spatialReference:h,pixelSize:g,pixelType:c.pixelType.toLowerCase(),statistics:y,histograms:b,keyProperties:d,storageInfo:S})}var Be;let de=Be=class extends q{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Be(U({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};n([l({type:[String],json:{name:"angleName",write:!0}})],de.prototype,"angleNames",void 0),n([l({type:E,json:{write:!0}})],de.prototype,"point",void 0),n([l({type:ye,json:{write:!0}})],de.prototype,"spatialReference",void 0),n([l({type:$e,json:{write:!0}})],de.prototype,"rasterId",void 0),de=Be=n([x("esri.rest.support.ImageAngleParameters")],de);const er=de,H=new wt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let J=class extends q{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0}get renderingRule(){return ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(i){ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",i)}};n([l()],J.prototype,"type",void 0),n([l({type:H.apiValues,json:{read:H.read,write:H.write}})],J.prototype,"measureOperation",void 0),n([l({type:G,json:{write:!0}})],J.prototype,"mosaicRule",void 0),n([l({type:w})],J.prototype,"renderingRule",null),n([l({type:w,json:{write:!0}})],J.prototype,"rasterFunction",void 0),n([l({type:E,json:{write:!0}})],J.prototype,"pixelSize",void 0),n([l({json:{write:!0}})],J.prototype,"raster",void 0),J=n([x("esri.rest.support.BaseImageMeasureParameters")],J);var Qe;let te=Qe=class extends J{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Qe(U({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster}))}};n([l({types:et,json:{name:"fromGeometry",read:!0,write:!0}})],te.prototype,"geometry",void 0),n([D("geometry")],te.prototype,"writeGeometry",null),n([l({type:H.apiValues,json:{write:H.write}})],te.prototype,"measureOperation",null),n([l({json:{read:!0}})],te.prototype,"is3D",void 0),n([l({type:String,json:{read:le.read,write:le.write}})],te.prototype,"linearUnit",void 0),n([l({type:String,json:{read:Ve.read,write:Ve.write}})],te.prototype,"areaUnit",void 0),te=Qe=n([x("esri.rest.support.ImageAreaParameters")],te);const tr=te;var ke;let K=ke=class extends J{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new ke(U({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster}))}};n([l({type:E,json:{read:!0,write:!0}})],K.prototype,"fromGeometry",void 0),n([D("fromGeometry")],K.prototype,"writeFromGeometry",null),n([l({type:E,json:{read:!0,write:!0}})],K.prototype,"toGeometry",void 0),n([l({type:H.apiValues,json:{write:H.write}})],K.prototype,"measureOperation",null),n([l({json:{read:!0}})],K.prototype,"is3D",void 0),n([l({type:String,json:{read:le.read,write:le.write}})],K.prototype,"linearUnit",void 0),n([l({type:String,json:{read:Ae.read,write:Ae.write}})],K.prototype,"angularUnit",void 0),K=ke=n([x("esri.rest.support.ImageDistanceParameters")],K);const ir=K;var We;let ie=We=class extends J{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new We(U({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster}))}};n([l({type:E,json:{read:!0}})],ie.prototype,"fromGeometry",void 0),n([D("fromGeometry")],ie.prototype,"writeFromGeometry",null),n([l({type:E,json:{read:!0,write:!0}})],ie.prototype,"toGeometry",void 0),n([l({type:H.apiValues,json:{write:H.write}})],ie.prototype,"measureOperation",null),n([l({json:{read:!0}})],ie.prototype,"operationType",void 0),n([l({type:String,json:{read:le.read,write:le.write}})],ie.prototype,"linearUnit",void 0),ie=We=n([x("esri.rest.support.ImageHeightParameters")],ie);const rr=ie;var Ke;let I=Ke=class extends q{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let i=s;i&&i.mosaicMethod&&(i=G.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(s,i,o){s!=null&&(i[o]=JSON.stringify(s.toJSON()))}get renderingRule(){return ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(s){ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",s)}get renderingRules(){return ne(Z.getLogger(this.declaredClass),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(s){ne(Z.getLogger(this.declaredClass),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",s)}set rasterFunction(s){let i=s;i&&i.rasterFunction&&(i=w.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(s,i,o){s!=null&&(i[o]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(i[o]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,i,o){s!=null&&(i[o]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,i,o){s!=null&&(i[o]=JSON.stringify(s))}writeTimeExtent(s,i,o){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;i[o]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new Ke(U({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};n([l({json:{write:!0}})],I.prototype,"geometry",void 0),n([D("geometry")],I.prototype,"writeGeometry",null),n([l({type:G,json:{write:!0}})],I.prototype,"mosaicRule",null),n([D("mosaicRule")],I.prototype,"writeMosaicRule",null),n([l({type:w})],I.prototype,"renderingRule",null),n([l({type:[w]})],I.prototype,"renderingRules",null),n([l({type:w,json:{write:!0}})],I.prototype,"rasterFunction",null),n([D("rasterFunction")],I.prototype,"writeRasterFunction",null),n([l({type:[w],json:{write:!0}})],I.prototype,"rasterFunctions",void 0),n([D("rasterFunctions")],I.prototype,"writeRasterFunctions",null),n([l({type:E,json:{write:!0}})],I.prototype,"pixelSize",void 0),n([D("pixelSize")],I.prototype,"writePixelSize",null),n([l({type:Boolean,json:{write:!0}})],I.prototype,"returnGeometry",void 0),n([l({type:Boolean,json:{write:!0}})],I.prototype,"returnCatalogItems",void 0),n([l({type:Boolean,json:{write:!0}})],I.prototype,"returnPixelValues",void 0),n([l({type:Number,json:{write:!0}})],I.prototype,"maxItemCount",void 0),n([l({type:lt,json:{write:{target:"time"}}})],I.prototype,"timeExtent",void 0),n([D("timeExtent")],I.prototype,"writeTimeExtent",null),n([l({json:{write:!0}})],I.prototype,"raster",void 0),n([l({json:{write:!0}})],I.prototype,"viewId",void 0),n([l({type:Boolean,json:{write:!0}})],I.prototype,"processAsMultidimensional",void 0),I=Ke=n([x("esri.rest.support.ImageIdentifyParameters")],I);const ot=I;var Ze;let be=Ze=class extends q{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,i,o){i.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){var s;return new Ze({geometries:((s=this.geometries)==null?void 0:s.map(i=>i.clone()))??[],rasterId:this.rasterId})}};n([l({type:[E],json:{write:!0}})],be.prototype,"geometries",void 0),n([D("geometries")],be.prototype,"writeGeometry",null),n([l({type:$e,json:{write:!0}})],be.prototype,"rasterId",void 0),be=Ze=n([x("esri.rest.support.ImagePixelLocationParameters")],be);const sr=be;var Xe;let he=Xe=class extends J{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:i}=this;return i.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new Xe(U({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster}))}};n([l({types:et,json:{name:"fromGeometry",read:ut}})],he.prototype,"geometry",void 0),n([D("geometry")],he.prototype,"writeGeometry",null),n([l({type:H.apiValues,json:{read:H.read,write:H.write}})],he.prototype,"measureOperation",null),n([l({json:{read:!0}})],he.prototype,"is3D",void 0),he=Xe=n([x("esri.rest.support.ImagePointParameters")],he);const nr=he;var Ye;let A=Ye=class extends q{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,i,o){s!=null&&(i.geometryType=Se(s),i[o]=s.toJSON())}set locations(s){if(s!=null&&s.length){const i=new St({spatialReference:s[0].spatialReference});i.points=s.map(o=>[o.x,o.y]),this._set("locations",s),this.geometry=i}}clone(){return new Ye(U({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};n([l({types:et,json:{read:ut}})],A.prototype,"geometry",void 0),n([D("geometry")],A.prototype,"writeGeometry",null),n([l()],A.prototype,"locations",null),n([l({type:String,json:{type:oe.jsonValues,read:oe.read,write:oe.write}})],A.prototype,"interpolation",void 0),n([l({type:G,json:{write:!0}})],A.prototype,"mosaicRule",void 0),n([l({type:[String],json:{write:!0}})],A.prototype,"outFields",void 0),n([l({type:E,json:{write:!0}})],A.prototype,"pixelSize",void 0),n([l({type:String,json:{write:!0}})],A.prototype,"raster",void 0),n([l({type:Boolean,json:{write:!0}})],A.prototype,"returnFirstValueOnly",void 0),n([l({type:Number,json:{write:!0}})],A.prototype,"sampleDistance",void 0),n([l({type:Number,json:{write:!0}})],A.prototype,"sampleCount",void 0),n([l({type:Number,json:{write:!0}})],A.prototype,"sliceId",void 0),n([l({type:lt,json:{read:{source:"time"},write:{target:"time"}}})],A.prototype,"timeExtent",void 0),A=Ye=n([x("esri.rest.support.ImageSampleParameters")],A);const ar=A,Ue=Ft()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),or=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),lr=Pt(Nt,{min:0,max:255});function ur(s){if(!s)return null;const i=JSON.stringify(s).match(/"rasterFunction":"(.*?")/gi),o=i==null?void 0:i.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return o?o.join("/"):null}const pr=s=>{let i=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new P({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(r=>typeof r=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){e!=null&&this.format!=="lerc"&&(t[r]=e)}writeCompressionTolerance(e,t,r){this.format==="lerc"&&e!=null&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?G.fromJSON(t):null}get fieldsIndex(){return this.fields?new ui(this.fields):null}set format(e){e&&or.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=G.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?G.fromJSON(r):this._isMosaicRuleSupported(t)?G.fromJSON(t):null}writeMosaicRule(e,t,r){let a=this.mosaicRule;const u=this.definitionExpression;a?u&&u!==a.where&&(a=a.clone(),a.where=u):u&&(a=new G({where:u})),this._isValidCustomizedMosaicRule(a)&&(t[r]=a.toJSON())}writeNoData(e,t,r){e!=null&&typeof e=="number"&&(t[r]=lr(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(a=>a.type==="esriFieldTypeOID"||a.type==="oid");e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return xt(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){var p,m;const a=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=Jt(a,r);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!a.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),ht(u)||Z.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m;const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new me({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new me({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new me({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?U(this.fields):[];u.push(r),(m=this.capabilities)!=null&&m.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&u.push(a),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{u.push(new me({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new me({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new me({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const c=p.fields.filter(d=>d.type!=="esriFieldTypeOID"&&d.name.toLowerCase()!=="value").map(d=>{const y=U(d);return y.name=e+d.name,y});u=u.concat(c)}return u}get renderingRule(){return ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){ne(Z.getLogger(this.declaredClass),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t&&t.rasterFunction&&(t=w.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&r[0].name!=="None"?this._isRFTJson(t.renderingRule)?w.fromJSON({rasterFunctionDefinition:t.renderingRule}):w.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRasterFunction(e,t,r){const a=e.toJSON();a.rasterFunctionDefinition?t.renderingRule=a.rasterFunctionDefinition:t.renderingRule=a}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?ye.fromJSON(r):null}readPixelType(e){return Ue.fromJSON(e)||e}writePixelType(e,t,r){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=Ue.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;const{renderer:a,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&a&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(a.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=a.toJSON());const y=await d.symbolize({bandIds:m,...e},t);r={extent:e.extent,pixelBlock:y}}else r={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new j("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=z(er,e).clone(),Hi(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new j("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=z(sr,e).clone(),Ui(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new j("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=z(it,e).clone(),this._applyMosaicAndRenderingRules(e),Qi(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new j("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=z(it,e).clone(),this._applyMosaicAndRenderingRules(e),Bi(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const r=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?r.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?r.mensuration.supportsHeightFromBaseAndTopShadow:r.mensuration.supportsHeightFromTopAndTopShadow))throw new j("imagery-layer:measure-height","this operation is not supported on the input image service");return e=z(rr,e).clone(),this._applyMosaicAndRenderingRules(e),Wi(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const r=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(r.mensuration.supportsAreaAndPerimeter&&(!e.is3D||r.mensuration.supports3D)))throw new j("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=z(tr,e).clone(),this._applyMosaicAndRenderingRules(e),Ki(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const r=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(r.mensuration.supportsDistanceAndAngle&&(!e.is3D||r.mensuration.supports3D)))throw new j("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=z(ir,e).clone(),this._applyMosaicAndRenderingRules(e),Xi(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const r=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(r.mensuration.supportsPointOrCentroid&&(!e.is3D||r.mensuration.supports3D)))throw new j("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=z(nr,e).clone(),this._applyMosaicAndRenderingRules(e),Zi(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}async fetchImage(e,t,r,a={}){if(e==null||t==null||r==null)throw new j("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this.generateRasterInfo(this.rasterFunction,{signal:a.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,t,r,a.timeExtent);if(u==null){if(a.requestAsImageElement&&this._canRequestImageElement(this.format)){const g=document.createElement("canvas");return g.width=t,g.height=r,a.returnImageBitmap?{imageBitmap:await st(g,`${o(this.parsedUrl)}/exportImage`,a.signal)}:{imageOrCanvasElement:g}}const{bandIds:d,rasterInfo:y}=this,v=((d==null?void 0:d.length)||y.bandCount)??0,f=t*r,R=y.pixelType,h=[];for(let g=0;g<v;g++)h.push(Le.createEmptyBand(R,f));return{pixelData:{pixelBlock:new Le({width:t,height:r,pixels:h,mask:new Uint8Array(f),pixelType:R}),extent:e}}}const p=!!a.requestAsImageElement&&!this.pixelFilter,m=p&&!!a.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:a.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return N(o(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new j("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):N(o(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>dt.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return Yi(o(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){var ce,Y,tt;const{data:r}=await N(o(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),a=r&&r.ics;if(!a)return;let u=null;try{u=(await N(o(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!u||!u.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?N(o(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(F=>F.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},d=N(o(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(F=>F.data).catch(()=>({})),y=5,v=(u.xmin+u.xmax)/2,f=(u.ymax-u.ymin)/(y+1),R=u.ymin+f,h=[];for(let F=0;F<y;F++)h.push({x:v,y:R+f*F});const g={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},b=N(o(this.parsedUrl)+"/project",{query:this._getQueryParams(g),...t}).then(F=>F.data).catch(()=>({})),S=await Promise.all([p,d,b]);let O=S[0].ipxf;if(O==null){const F=(ce=a.geodataXform)==null?void 0:ce.xf_0;((Y=F==null?void 0:F.name)==null?void 0:Y.toLowerCase())==="topup"&&((tt=F==null?void 0:F.coefficients)==null?void 0:tt.length)===6&&(O={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:F.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const V=Pe.fromJSON(S[1]&&S[1].geometries&&S[1].geometries[0]);V&&(V.spatialReference=new ye({wkid:0,imageCoordinateSystem:a}));const T=S[2].geometries?S[2].geometries.filter(F=>F!=null&&F.x!=null&&F.y!=null&&F.x!=="NaN"&&F.y!=="NaN"):[],k=T.length;if(k<3)return{ics:a,icsToPixelTransform:O,icsExtent:V,northDirection:null};let _=0,C=0,$=0,W=0;for(let F=0;F<k;F++)_+=T[F].x,C+=T[F].y,$+=T[F].x*T[F].x,W+=T[F].x*T[F].y;const B=(k*W-_*C)/(k*$-_*_);let ue=0;const Te=T[y-1].x>T[0].x,pe=T[y-1].y>T[0].y;return B===1/0?ue=pe?90:270:B===0?ue=Te?0:180:B>0?ue=Te?180*Math.atan(B)/Math.PI:180*Math.atan(B)/Math.PI+180:B<0&&(ue=pe?180+180*Math.atan(B)/Math.PI:360+180*Math.atan(B)/Math.PI),{ics:a,icsToPixelTransform:O,icsExtent:V,northDirection:ue}}async generateRasterInfo(e,t){var u;if(e=z(w,e),this.serviceRasterInfo&&(!e||((u=e.functionName)==null?void 0:u.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=ur(e);if(!r)return null;if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const a=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=a;try{return await a}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,a){var h;e=e.clone().shiftCentralMeridian();const u=bt(e.spatialReference,o(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const y=(h=this.rasterFunction)==null?void 0:h.rasterFunctionDefinition,v=!this.renderer||this.renderer.type==="raster-stretch";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!y&&v){const g={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")g.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=g;else if(d.rasterFunction==="Colormap"){const b=d.rasterFunctionArguments.Raster;(b==null?void 0:b.rasterFunction)==="Stretch"?(g.rasterFunctionArguments.Raster=b.rasterFunctionArguments.Raster,b.rasterFunctionArguments.Raster=g):(g.rasterFunctionArguments.Raster=b,d.rasterFunctionArguments.Raster=g)}else g.rasterFunctionArguments.Raster=d,d=g;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");c instanceof Array&&c.length>0&&(p.noData=c.join(","));const f=this._processMultidimensionalIntersection(null,a,this.exportImageServiceParameters.mosaicRule);if(f.isOutSide)return null;p.mosaicRule=f.mosaicRule!=null?JSON.stringify(f.mosaicRule):null,a=f.timeExtent,p.renderingRule=this._getRenderingRuleString(w.fromJSON(d));const R={};if(a!=null){const{start:g,end:b}=a.toJSON();g&&b&&g===b?R.time=""+g:g==null&&b==null||(R.time=`${g??"null"},${b??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+r,...p,...R}}async getSamples(e,t){const r=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(r!=null&&r.operations.supportsGetSamples))throw new j("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=z(ar,e).clone();const{raster:a}=this;return a&&e.raster==null&&(e.raster=a),ki(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new j("imagery-layer:identify","identify operation is not supported on the input image service");e=z(ot,e).clone();const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new j("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:a,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),a&&e.raster==null&&(e.raster=a),nt(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Ge;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),pi(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ci(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),mi(this.url,e,t)}async queryVisibleRasters(e,t){var O,V,T,k;if(!e)throw new j("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:a,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const y="raster.servicepixelvalue",v=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some(_=>!_.toLowerCase().includes(y)),this.version>=10.4)){const _=e.outFields.filter($=>$.toLowerCase().includes(y)&&$.length>y.length).map($=>{const W=$.slice(y.length+1);return[this._updateRenderingRulesFunctionName(W,v),W]});c=_.map($=>new w({functionName:$[0]})),d=_.map($=>$[1]);const{rasterFunction:C}=this;c.length===0?C!=null&&C.functionName?(c.push(C),d.push(C.functionName)):c=null:C!=null&&C.functionName&&!c.some($=>$.functionName===C.functionName)&&(c.push(C),d.push(C.functionName))}const f=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:R}=this;let h=e.timeExtent||this.timeExtent;if(R){const{isOutside:_,intersection:C}=ze(R,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(O=this.exportImageServiceParameters.mosaicRule)==null?void 0:O.multidimensionalDefinition});if(_)throw new j("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");C&&C.timeExtent!=null&&(h=C.timeExtent)}const g=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h),b=this._getQueryParams({geometry:e.geometry,timeExtent:h,mosaicRule:g,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:r,returnCatalogItems:m,returnGeometry:f,raster:this.raster,maxItemCount:u?1:null});delete b.f;const S=new ot(b);try{await this.generateRasterInfo(this.rasterFunction);const _=await nt(this.url,S,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),C=e.outFields,$=_.value!=null&&_.value.toLowerCase().includes("nodata");if(!(m&&!f&&((V=_==null?void 0:_.catalogItems)!=null&&V.features.length)&&(p||!$)))return this._processVisibleRastersResponse(_,{returnDomainValues:a,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C});const W=this.objectIdField||"ObjectId",B=((T=_.catalogItems)==null?void 0:T.features)??[],ue=B.map(ce=>{var Y;return(Y=ce.attributes)==null?void 0:Y[W]}),Te=new Ge({objectIds:ue,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[W]}),pe=await this.queryRasters(Te);return(k=pe==null?void 0:pe.features)!=null&&k.length&&pe.features.forEach(ce=>{B.forEach(Y=>{Y.attributes[W]===ce.attributes[W]&&(Y.geometry=new It(ce.geometry),e.outSpatialReference!=null&&(Y.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(_,{returnDomainValues:a,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C})}catch{throw new j("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=N(o(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),a=N(o(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([r,a]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):si(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return Et(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):qt(o(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),p)),a=this._hasRasterFunction(this.rasterFunction)?this.generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([r,a,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Z.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([Dt(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var R;const r=this.timeInfo,{multidimensionalInfo:a}=this.serviceRasterInfo;if(e==null||a==null||t==null||(r==null?void 0:r.startField)==null)return e;const{startField:u}=r,p=a.variables.some(h=>h.dimensions.some(g=>g.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(R=e.multidimensionalDefinition)==null?void 0:R.filter(h=>h.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(h=>h.dimensionName===p),c=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,y=c==null||d==null||c===d,v=y?[c||d]:[[c,d]],f=this.version>=10.8;if(m.length)m.forEach(h=>{h.dimensionName===p&&(f?(h.dimensionName=null,h.isSlice=!1,h.values=[]):(h.isSlice=y,h.values=v))});else if(!f){const h=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);h.length?h.forEach(g=>{g.dimensionName=p,g.isSlice=y,g.values=v}):e.multidimensionalDefinition.push(new zt({variableName:"",dimensionName:p,isSlice:y,values:v}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new j("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?z(Ge,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new kt;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return e.type==="unique-value"&&this._hasRasterFunction(r)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Lt(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var r;let t=this.sourceJSON;if(!t){const{data:a,ssl:u}=await N(o(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=a,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((r=t.capabilities)==null?void 0:r.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly"))>-1)throw new j("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var a;if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((a=e.fields)==null?void 0:a.length)>1);return t||r}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:r}=e,a=(t==null?void 0:t.toLowerCase())==="resample",u=(r==null?void 0:r.ResampleType)||(r==null?void 0:r.resampleType);return a&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var a,u;const t=this._isPicture(),{rasterInfo:r}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&r.bandCount>=3){const m=Gt(r);!m||r.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=Ht(r,{bandIds:this.bandIds,variableName:this.rasterFunction?null:(u=(a=this.mosaicRule)==null?void 0:a.multidimensionalDefinition)==null?void 0:u[0].variableName}));const p=Ut(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=r):this.symbolizer=new ni({rendererJSON:p,rasterInfo:r}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e&&e.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):rt(e,t,r)}async _getRasterFunctionInfos(e){var r;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(r=(await N(o(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:r.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:a,signal:u}=e;if(r&&this._canRequestImageElement(t.format)){const R=`${o(this.parsedUrl)}/exportImage`,{data:h}=await N(R,{responseType:a?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return h instanceof Blob?{imageBitmap:await st(h,R,u),params:t}:{imageOrCanvasElement:h,params:t}}const p=this._initJobHandler(),m=N(o(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let y=d;if(y!=="bsq"&&y!=="bip"&&(y=ai(c)),!y)throw new j("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const v={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(y==="png"||y==="jpg")?rt(c,{useCanvas:!0,...t},v):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},v)),extent:t.extent},params:t}}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return Bt(o(this.parsedUrl),e,r)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var r;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Qt(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new G;const a=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((r=this.rasterFunction.functionName)==null?void 0:r.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(a!=null&&a.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:a,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=e.catalogItems&&e.catalogItems.features,y=e.properties&&e.properties.Values&&e.properties.Values.map(S=>S.replaceAll(/ /gi,", "))||[];const v=this.objectIdField||"ObjectId",f=typeof r=="string"&&r.toLowerCase().includes("nodata"),R=[];if(r&&!d&&!f){const S={};S[v]=0,y=[r],d=[new Tt(this.fullExtent,null,S)]}if(!d)return[];let h,g,b;this._updateResponseFieldNames(d,m),f&&!u&&(d=[]);for(let S=0;S<d.length;S++){if(h=d[S],r!=null){if(g=y[S],b=this.rasterFunction&&c&&c.length>0&&a&&a.length>0&&a.includes(this.rasterFunction.functionName)?c[a.indexOf(this.rasterFunction.functionName)]:r,g.toLowerCase()==="nodata"&&!u)continue;const O="Raster.ItemPixelValue",V="Raster.ServicePixelValue";h.attributes[O]=g,h.attributes[V]=b,this._updateFeatureWithMagDirValues(h,g);const T=this.fields&&this.fields.length>0;let k=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?T?g:r:b;this.rasterFunction||(k=T?g:r),this._updateFeatureWithRasterAttributeTableValues(h,k)}if(h.sourceLayer=h.layer=this,p&&this._updateFeatureWithDomainValues(h),a&&c&&a.length===c.length)for(let O=0;O<a.length;O++){const V="Raster.ServicePixelValue."+a[O];h.attributes[V]=c[O]}R.push(d[S])}return R}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:a}=this;if(!a)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(a){const{isOutside:u,intersection:p}=ze(a,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p&&p.timeExtent!=null&&(t=p.timeExtent)}if((r=this._combineMosaicRuleWithTimeExtent(r,t))!=null&&r.multidimensionalDefinition){const{isOutside:u}=ze(a,{multidimensionalDefinition:r.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(r==null)return;const{features:a,fields:u}=r,p=u.map(d=>d.name).filter(d=>d.toLowerCase()==="value"),m=p&&p[0];if(!m)return;const c=a.filter(d=>d.attributes[m]===(t!=null?parseInt(t,10):null));c&&c[0]&&u.forEach(d=>{const y=this._rasterAttributeTableFieldPrefix+d.name;e.attributes[y]=c[0].attributes[d.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map(c=>parseFloat(c)),a=r.map(c=>[c]),u=r.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new Le({height:1,width:1,pixelType:"f32",pixels:a,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Pe(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:oi([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(r=>r.domain&&r.domain.type==="coded-value");t!=null&&t.forEach(r=>{const a=e.attributes[r.name];if(a!=null){const u=r.domain.codedValues.find(p=>p.code===a);u&&(e.attributes[r.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r!=null&&e.forEach(a=>{var u;if(a&&a.attributes)for(const p of t){const m=(u=r.get(p))==null?void 0:u.name;m&&m!==p&&(a.attributes[p]=a.attributes[m],delete a.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return e!=null&&e.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:a}=this;a&&e.rasterFunction==null&&(e.rasterFunction=a),r&&e.mosaicRule==null&&(e.mosaicRule=r),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:a,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!!(e.spatialReference||e.extent&&e.extent.spatialReference),d=t.includes("edit"),y=t.includes("mensuration")&&c,v=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),f=y&&v.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsMeasure:y,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&p,supportsProject:r>=10.3&&p,supportsComputeStatisticsHistograms:r>=10.4&&p,supportsQueryBoundary:r>=10.6&&p,supportsCalculateVolume:r>=10.7&&m,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(a!=null&&a.supportsStatistics),supportsOrderBy:!!(a!=null&&a.supportsOrderBy),supportsDistinct:!!(a!=null&&a.supportsDistinct),supportsPagination:!!(a!=null&&a.supportsPagination),supportsStandardizedQueriesOnly:!!(a!=null&&a.useStandardizedQueries),supportsPercentileStatistics:!!(a!=null&&a.supportsPercentileStatistics),supportsCentroid:!!(a!=null&&a.supportsReturningGeometryCentroid),supportsDistance:!!(a!=null&&a.supportsQueryWithDistance),supportsExtent:!!(a!=null&&a.supportsReturningQueryExtent),supportsGeometryProperties:!!(a!=null&&a.supportsReturningGeometryProperties),supportsHavingClause:!!(a!=null&&a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(a!=null&&a.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:f,supportsAreaAndPerimeter:f,supportsPointOrCentroid:f,supportsHeightFromBaseAndTop:y&&v.includes("base-top height"),supportsHeightFromBaseAndTopShadow:y&&v.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:y&&v.includes("top-top shadow height"),supports3D:y&&v.includes("3d")}}}};function o(e){return(e==null?void 0:e.path)??""}return n([l()],i.prototype,"_functionRasterInfos",void 0),n([l()],i.prototype,"_rasterJobHandler",void 0),n([l()],i.prototype,"_cachedRendererJson",void 0),n([l({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),n([M("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),n([l()],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),n([l({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),n([l()],i.prototype,"adjustAspectRatio",void 0),n([l({type:[$e],json:{write:!0}})],i.prototype,"bandIds",void 0),n([M("bandIds")],i.prototype,"readBandIds",null),n([l({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),n([M("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),n([l({type:Number})],i.prototype,"compressionQuality",void 0),n([D("compressionQuality")],i.prototype,"writeCompressionQuality",null),n([l({type:Number})],i.prototype,"compressionTolerance",void 0),n([D("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),n([l({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),n([l({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),n([M("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),n([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),n([l({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),n([l()],i.prototype,"rasterInfo",void 0),n([l({readOnly:!0,type:[me]})],i.prototype,"fields",void 0),n([l({readOnly:!0})],i.prototype,"fieldsIndex",null),n([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),n([M("service","format",["serviceDataType"])],i.prototype,"readFormat",null),n([l({type:Pe})],i.prototype,"fullExtent",void 0),n([l({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),n([l({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),n([l({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),n([l({type:String,json:{type:oe.jsonValues,read:oe.read,write:oe.write}})],i.prototype,"interpolation",void 0),n([l()],i.prototype,"minScale",void 0),n([M("service","minScale")],i.prototype,"readMinScale",null),n([l()],i.prototype,"maxScale",void 0),n([M("service","maxScale")],i.prototype,"readMaxScale",null),n([l({type:G})],i.prototype,"mosaicRule",null),n([M("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),n([D("mosaicRule")],i.prototype,"writeMosaicRule",null),n([l()],i.prototype,"multidimensionalInfo",void 0),n([l({type:At,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),n([l({json:{type:$e}})],i.prototype,"noData",void 0),n([D("noData")],i.prototype,"writeNoData",null),n([l({type:String,json:{type:Ie.jsonValues,read:Ie.read,write:Ie.write}})],i.prototype,"noDataInterpretation",void 0),n([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),n([M("objectIdField")],i.prototype,"readObjectIdField",null),n([l({})],i.prototype,"geometryType",void 0),n([l({})],i.prototype,"typeIdField",void 0),n([l({})],i.prototype,"types",void 0),n([l({readOnly:!0})],i.prototype,"parsedUrl",null),n([l({type:Function})],i.prototype,"pixelFilter",void 0),n([l()],i.prototype,"raster",void 0),n([l({readOnly:!0})],i.prototype,"sourceType",void 0),n([M("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),n([l()],i.prototype,"viewId",void 0),n([l({types:$t,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Mt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),n([M("renderer")],i.prototype,"readRenderer",null),n([D("renderer")],i.prototype,"writeRenderer",null),n([l()],i.prototype,"symbolizer",void 0),n([l(Wt)],i.prototype,"opacity",void 0),n([l({readOnly:!0})],i.prototype,"rasterFields",null),n([l({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),n([l({type:w})],i.prototype,"renderingRule",null),n([l({type:w,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),n([M("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),n([D("rasterFunction")],i.prototype,"writeRasterFunction",null),n([l()],i.prototype,"serviceDataType",void 0),n([l({readOnly:!0,type:ye})],i.prototype,"spatialReference",void 0),n([M("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),n([l({json:{type:Ue.jsonValues}})],i.prototype,"pixelType",void 0),n([M("pixelType")],i.prototype,"readPixelType",null),n([D("pixelType")],i.prototype,"writePixelType",null),n([l({constructOnly:!0,type:mt})],i.prototype,"serviceRasterInfo",void 0),n([l()],i.prototype,"sourceJSON",void 0),n([l(Kt)],i.prototype,"url",void 0),n([l({readOnly:!0})],i.prototype,"version",void 0),n([M("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=n([x("esri.layers.mixins.ArcGISImageService")],i),i};let L=class extends hi(vi(Ri(gi(fi(pr(Ct(yi(di(Vt(jt)))))))))){constructor(...s){super(...s),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(s,i){return typeof s=="string"?{url:s,...i}:s}load(s){const i=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(Ot).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(s,i,o){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[o]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(s){const i=this.rasterFields,o=this.title,e=new Set;let t=!1,r=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,r=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const a=new Set;t&&a.add("raster.itempixelvalue");for(const u of i){const p=u.name.toLowerCase();a.has(p)||p.includes("raster.servicepixelvalue.")||e.add(u.name)}return r&&e.add("raster.magnitude").add("raster.direction"),wi({fields:i,title:o},{...s,visibleFieldNames:e})}queryFeatures(s,i){return this.queryRasters(s,i).then(o=>{if(o!=null&&o.features)for(const e of o.features)e.layer=e.sourceLayer=this;return o})}queryFeatureCount(s,i){return this.queryRasterCount(s,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(s){return bi(this,s)}};n([l(Zt)],L.prototype,"legendEnabled",void 0),n([l({type:["show","hide"]})],L.prototype,"listMode",void 0),n([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),n([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],L.prototype,"operationalLayerType",void 0),n([D("web-map","operationalLayerType")],L.prototype,"writeOperationalLayerType",null),n([l(Xt)],L.prototype,"popupEnabled",void 0),n([l({type:_t,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],L.prototype,"popupTemplate",void 0),n([l({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),n([l({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=n([x("esri.layers.ImageryLayer")],L);const us=L;export{us as default};
