import{aP as _,hO as L,an as m,D as v,aZ as u,b2 as c,bf as h,eq as F,V as d,ae as r,af as l,i5 as $,bF as y,ai as g,er as j,cb as M,bt as S,fU as I,Z as P,bG as C,a$ as K}from"./index-3e52b35c.js";import{O as N}from"./MultiOriginJSONSupport-f670b6ba.js";import{a as R}from"./BlendLayer-626e5094.js";import{c as T}from"./OperationalLayer-df3b2587.js";import{j as J}from"./PortalLayer-88116a27.js";import{p as z}from"./RefreshableLayer-06c92bc4.js";import{t as A}from"./ScaleRangeLayer-c1033939.js";import{f as U}from"./commonProperties-0493cb6e.js";import{j as V,S as w,g as x,d as E}from"./kmlUtils-3966d902.js";import"./jsonUtils-7a51ba7d.js";import"./parser-3d96dfad.js";import"./portalItemUtils-6dd219cf.js";import"./ElevationInfo-bc900c05.js";import"./lengthUtils-af74913c.js";import"./jsonUtils-3671c946.js";import"./UniqueValueRenderer-55059987.js";import"./LegendOptions-6fb63299.js";import"./diffUtils-0bb1c07f.js";import"./SizeVariable-19fd8fef.js";import"./colorRamps-ae96b3f1.js";import"./sizeVariableUtils-d4870b0d.js";import"./ColorStop-d7774d44.js";import"./jsonUtils-e52584d0.js";import"./styleUtils-5722cbd3.js";import"./featureFlags-5eac5aca.js";import"./DictionaryLoader-bacd0d70.js";import"./LRUCache-c95257f8.js";import"./MemCache-d9724c39.js";import"./FieldsIndex-7440587e.js";import"./heatmapUtils-655eea95.js";import"./vec4f64-aa64c7e9.js";import"./FeatureSet-97410c4e.js";import"./Field-9316575a.js";import"./fieldType-f9465eea.js";var p;let a=p=class extends _.EventedMixin(L(j)){constructor(...t){super(...t),this.description=null,this.id=null,this.networkLink=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.fullExtent=null,this.addHandles([m(()=>this.sublayers,"after-add",({item:e})=>{e.parent=this,e.layer=this.layer},u),m(()=>this.sublayers,"after-remove",({item:e})=>{e.layer=e.parent=null},u),v(()=>this.sublayers,(e,s)=>{if(s)for(const i of s)i.layer=i.parent=null;if(e)for(const i of e)i.parent=this,i.layer=this.layer},u)])}initialize(){c(()=>this.networkLink).then(()=>c(()=>this.visible===!0)).then(()=>this.load())}load(t){var i;if(!this.networkLink||this.networkLink.viewFormat)return;const e=t!=null?t.signal:null,s=this._fetchService(((i=this._get("networkLink"))==null?void 0:i.href)??"",e).then(n=>{var f;const k=V(n.sublayers);this.fullExtent=h.fromJSON(k),this.sourceJSON=n;const b=F(d.ofType(p),w(p,n));this.sublayers?this.sublayers.addMany(b):this.sublayers=b,(f=this.layer)==null||f.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(s),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(t){this._get("visible")!==t&&(this._set("visible",t),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(t,e){return!!e.visibility}set layer(t){this._set("layer",t),this.sublayers&&this.sublayers.forEach(e=>e.layer=t)}_fetchService(t,e){return x(t,this.layer.outSpatialReference,this.layer.refreshInterval,e).then(s=>E(s.data))}};r([l()],a.prototype,"description",void 0),r([l()],a.prototype,"id",void 0),r([l({readOnly:!0,value:null})],a.prototype,"networkLink",void 0),r([l({json:{write:{allowNull:!0}}})],a.prototype,"parent",void 0),r([l({type:d.ofType(p),json:{write:{allowNull:!0}}})],a.prototype,"sublayers",void 0),r([l({value:null,json:{read:{source:"name",reader:t=>$(t)}}})],a.prototype,"title",void 0),r([l({value:!0})],a.prototype,"visible",null),r([y("visible",["visibility"])],a.prototype,"readVisible",null),r([l()],a.prototype,"sourceJSON",void 0),r([l({value:null})],a.prototype,"layer",null),r([l({type:h})],a.prototype,"fullExtent",void 0),a=p=r([g("esri.layers.support.KMLSublayer")],a);const O=a,W=["kml","xml"];let o=class extends R(z(A(T(J(N(K)))))){constructor(...t){super(...t),this._visibleFolders=[],this.allSublayers=new M({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.outSpatialReference=S.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([v(()=>this.sublayers,(t,e)=>{e&&e.forEach(s=>{s.parent=null,s.layer=null}),t&&t.forEach(s=>{s.parent=this,s.layer=this})},u),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}readSublayersFromItemOrWebMap(t,e){this._visibleFolders=e.visibleFolders}readSublayers(t,e,s){return w(O,e,s,this._visibleFolders)}writeSublayers(t,e){const s=[],i=t.toArray();for(;i.length;){const n=i[0];n.networkLink||(n.visible&&s.push(n.id),n.sublayers&&i.push(...n.sublayers.toArray())),i.shift()}e.visibleFolders=s}get title(){const t=this._get("title");return t&&this.originOf("title")!=="defaults"?t:this.url?I(this.url,W)||"KML":t||""}set title(t){this._set("title",t)}get visibleSublayers(){const t=this.sublayers,e=[],s=i=>{i.visible&&(e.push(i),i.sublayers&&i.sublayers.forEach(s))};return t&&t.forEach(s),e}get fullExtent(){return this._recomputeFullExtent()}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},t).catch(P).then(()=>this._fetchService(e))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(t){const e=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:x(this.url??"",this.outSpatialReference,this.refreshInterval,t)),s=E(e.data);s&&this.read(s,{origin:"service"})}_recomputeFullExtent(){let t=null;this.extent!=null&&(t=this.extent.clone());const e=s=>{if(s.sublayers)for(const i of s.sublayers.items)e(i),i.visible&&i.fullExtent&&(t!=null?t.union(i.fullExtent):t=i.fullExtent.clone())};return e(this),t}};r([l({readOnly:!0})],o.prototype,"allSublayers",void 0),r([l({type:S})],o.prototype,"outSpatialReference",void 0),r([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),r([l({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"legendEnabled",void 0),r([l({type:["show","hide","hide-children"]})],o.prototype,"listMode",void 0),r([l({type:["KML"]})],o.prototype,"operationalLayerType",void 0),r([l({})],o.prototype,"resourceInfo",void 0),r([l({type:d.ofType(O),json:{write:{ignoreOrigin:!0}}})],o.prototype,"sublayers",void 0),r([y(["web-map","portal-item"],"sublayers",["visibleFolders"])],o.prototype,"readSublayersFromItemOrWebMap",null),r([y("service","sublayers",["sublayers"])],o.prototype,"readSublayers",null),r([C("sublayers")],o.prototype,"writeSublayers",null),r([l({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),r([l({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],o.prototype,"title",null),r([l(U)],o.prototype,"url",void 0),r([l({readOnly:!0})],o.prototype,"visibleSublayers",null),r([l({type:h})],o.prototype,"extent",void 0),r([l()],o.prototype,"fullExtent",null),o=r([g("esri.layers.KMLLayer")],o);const kt=o;export{kt as default};
