import{e as n,y as p,n as R}from"./cast-daef7652.js";import{g as W}from"./Graphic-cf98a91a.js";import{s as T,a as F}from"./Error-bd05b442.js";import{r as d,e as z,t as H}from"./typedArrayUtil-2bcf3cee.js";import{x as J,j as I,E as L}from"./promiseUtils-29120e0a.js";import{l as w,w as D,U as N,h as X}from"./reactiveUtils-3c1b281e.js";import"./ensureType-fa162cfc.js";import{m as E}from"./multidimensionalUtils-5ae835b1.js";import{y as Y,d as K}from"./RasterVFDisplayObject-7a90d21c.js";import{y as Z,u as ee}from"./LayerView-8f28f320.js";import{u as O}from"./aaBoundingRect-45a7fe45.js";import{c as te}from"./index-76ada3eb.js";import{p as ie,c as se,d as re}from"./WGLContainer-db0ff963.js";import{e as V}from"./mat3f32-d3d088e8.js";import{r as M,i as j}from"./TileContainer-e69647a1.js";import{I as C}from"./enums-4ca4641f.js";import"./geometry-4b789d90.js";import{d as oe}from"./HandleOwner-78d35324.js";import{a as ae,w as le}from"./Extent-7f29a1bb.js";import{g as ne,s as he}from"./pixelUtils-5f39bd45.js";import{j as pe}from"./TileInfo-2e5a94dc.js";import{g as $,f as G,u as ue,a as ce}from"./RawBlockCache-204337b6.js";import{U as me,i as de,v as B,J as ye}from"./rasterProjectionHelper-0bcfa8ae.js";import{r as q,y as fe}from"./TileStrategy-a62d1e84.js";import{h as ge}from"./TileStore-4c0c3140.js";import"./TileKey-ab325718.js";import{l as be}from"./capabilities-320386e9.js";import{r as A}from"./util-7859c103.js";import{j as we}from"./dataUtils-0f7e9d2b.js";import{s as _e,i as ve}from"./mat3-45e3f2eb.js";import{g as Pe}from"./OperationalLayer-7b681a2a.js";import{s as Te}from"./popupUtils-5aeaeb48.js";import{i as Ie}from"./RefreshableLayerView-1be6c989.js";import"./string-3d0ebcd3.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-343851b8.js";import"./Clonable-f249bc0f.js";import"./Collection-e2259e32.js";import"./Evented-d8fc77f0.js";import"./SimpleObservable-7c382d01.js";import"./fieldUtils-021fea8a.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-87969052.js";import"./jsonMap-a9c94baf.js";import"./enumeration-e46f3fd4.js";import"./number-53937715.js";import"./locale-30120714.js";import"./Identifiable-e3a09883.js";import"./symbols-fce921a6.js";import"./CIMSymbol-d0e12b74.js";import"./Symbol-f45dc441.js";import"./Color-2245b966.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-94fd2faa.js";import"./aaBoundingBox-6fbd5972.js";import"./request-c2b0ab45.js";import"./persistableUrlUtils-7e525def.js";import"./collectionUtils-09289d8f.js";import"./Portal-ac0dca24.js";import"./Loadable-7c89bd10.js";import"./Promise-088a0e17.js";import"./PortalGroup-f3dee6d8.js";import"./PortalUser-cdb4116b.js";import"./jsonUtils-8bd548d9.js";import"./Polyline-c56eca9b.js";import"./VertexArrayObject-8a5c7580.js";import"./Texture-6f3336a0.js";import"./context-util-cb6895d7.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./utils-6c2afd8b.js";import"./parser-e6166e34.js";import"./mat4-62d5e6a4.js";import"./MaterialKey-b4e71fc3.js";import"./Utils-c2939f8d.js";import"./enums-8bf08d0c.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./vec2f32-461e65a9.js";import"./Basemap-8691c5d8.js";import"./deprecate-99da8bee.js";import"./loadAll-6dec1444.js";import"./asyncUtils-59234081.js";import"./PortalItem-07c1e88d.js";import"./assets-4cb15247.js";import"./messages-03a939ad.js";import"./writeUtils-7d75cb47.js";import"./layerUtils-6996b9ea.js";import"./compilerUtils-06ced1a6.js";import"./CollectionFlattener-c6dafa4a.js";import"./TablesMixin-c836f156.js";import"./Layer-8a472a77.js";import"./Cyclical-1a93cb12.js";import"./workers-125ce03d.js";import"./Connection-98b56925.js";import"./Queue-e839cb6a.js";import"./intl-afc91037.js";import"./projection-33a6cba9.js";import"./unitUtils-43365914.js";import"./zscale-a508c8e5.js";import"./widget-8a5f4608.js";import"./uuid-73213768.js";import"./byteSizeEstimations-90c5a50d.js";import"./executeQueryJSON-1890fc00.js";import"./normalizeUtils-d322ac85.js";import"./query-e9f3f48f.js";import"./pbfQueryUtils-21bc0894.js";import"./pbf-c27e6a55.js";import"./OptimizedFeature-9345d11b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-bb883c00.js";import"./FeatureSet-9ea00c01.js";import"./Field-0ac3c9d2.js";import"./fieldType-4ec45634.js";import"./typeUtils-d7b057b5.js";import"./Query-e996b56b.js";import"./TimeExtent-84882adb.js";import"./RelationshipQuery-c22f6308.js";import"./LegendOptions-54bbb61a.js";import"./utils-95450d21.js";import"./ItemCache-9a7b0057.js";import"./MemCache-5bd66e9c.js";import"./jsonUtils-9c255ec7.js";import"./UniqueValueRenderer-83bbe8b7.js";import"./diffUtils-58fbd195.js";import"./colorRamps-3439e132.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-5215af35.js";import"./jsonUtils-f34afef9.js";import"./styleUtils-84c98663.js";import"./DictionaryLoader-d07ab55e.js";import"./LRUCache-36379339.js";import"./featureConversionUtils-7c9ea581.js";import"./TopFeaturesQuery-da583ecc.js";import"./FeatureLayer-029b8c63.js";import"./MultiOriginJSONSupport-03b5d89b.js";import"./LayerFloorInfo-689deffc.js";import"./FeatureLayerBase-eb47a35c.js";import"./HeightModelInfo-15bb1adf.js";import"./arcgisLayerUrl-269cc7a9.js";import"./editsZScale-b69b4057.js";import"./APIKeyMixin-abc940e1.js";import"./ArcGISService-a76daa10.js";import"./BlendLayer-1b58b599.js";import"./CustomParametersMixin-35ce1754.js";import"./EditBusLayer-0384e3a7.js";import"./FeatureReductionLayer-d7ad3b5e.js";import"./labelingInfo-f1d3ed98.js";import"./labelUtils-4072dca9.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-f1fc272b.js";import"./PortalLayer-4d594091.js";import"./RefreshableLayer-b2e977af.js";import"./ScaleRangeLayer-d12362d4.js";import"./TemporalLayer-e6ec9fbe.js";import"./TimeInfo-cbe37d4e.js";import"./FeatureTemplate-a0acfd3d.js";import"./FeatureType-1ca0df1a.js";import"./fieldProperties-6efd2194.js";import"./FieldsIndex-394de0a1.js";import"./versionUtils-95cac3d6.js";import"./styleUtils-77b2285b.js";import"./popupUtils-aa41216c.js";import"./ElevationInfo-4e7fad68.js";import"./mat2d-80bd93af.js";import"./Scheduler-74975675.js";import"./GraphicsCollection-e2a7679b.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./vec2-f978aef8.js";import"./vec2f64-e0301652.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./ProgramTemplate-66c62c24.js";import"./StyleDefinition-3c6a4c69.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";class Re extends M{constructor(t,i,s,r,o,a,l=null){super(t,i,s,r,o,a),this.bitmap=new ie(l,null,null),this.bitmap.coordScale=[o,a],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t){super.setTransform(t),this.bitmap.transforms.dvs=this.transforms.dvs}_createTransforms(){return{dvs:V(),tileMat3:V()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let xe=class extends j{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const i=this._getTileBounds(t),[s,r]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t.level);return new Re(t,o,i[0],i[3],s,r)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (tile)",brushes:[se.raster],target:()=>this.children.map(s=>s.bitmap),drawPhase:C.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===C.MAP&&super.doRender(t)}_getTileBounds(t){const i=this._tileInfoView.getTileBounds(O(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:s}=this._tileInfoView,r=te(s.spatialReference);if(r){const{resolution:o}=s.lodAt(t.level),a=r/o%s.size[0],l=a?(s.size[0]-a)*o:0;i[0]-=l*t.world,i[2]-=l*t.world}}return i}};const Se=[0,0];let m=class extends oe{constructor(){super(...arguments),this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=null,this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._globalUpdateRequested=!1,this.attached=!1,this.container=null,this.layer=null,this.timeExtent=null,this.redrawOrRefetch=J((e,t)=>!this.previousLOD||this.layerView.suspended?Promise.resolve():e?this.updatingHandles.addPromise(this.doRefresh()):this.updatingHandles.addPromise(this._redrawImage(t)))}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")==null||this._get("useProgressiveUpdate")}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new q({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){var o;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:i,scale:s}=e.state,r=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[r.level],l=t.toJSON?t:ae.fromJSON(t);$(this._blockCacheRegistryUrl,this._blockCacheRegistryId,l,i,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,((o=this.previousLOD)==null?void 0:o.level)!==r.level&&(this.previousLOD=r,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){var e;return((e=this._fetchQueue)==null?void 0:e.updating)||this._globalUpdateRequested||!(!this.updatingHandles||!this.updatingHandles.updating)}attach(){be("2d").supportsTextureFloat||(this.useWebGLForProcessing=!1),this._initializeTileInfo(),this._tileInfoView=new ge(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new fe({tileInfoView:this._tileInfoView,concurrency:e,process:(i,s)=>this._fetchTile1(i,s)});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new q({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,G(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._enqueueTileFetch(t),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",()=>{e.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=e==null||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&d(this._emptyTilePixelBlock))return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[i,s]=e,r=new ne({width:i,height:s,pixels:[new Uint8Array(i*s)],mask:new Uint8Array(i*s),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=r),r}_fetchTile1(e,t){const i=d(t)&&t.signal,s=this.canUseWebGLForProcessing(),{layerView:r}=this,o=!r.tileInfo.isWrappable&&d(me(r.view.spatialReference)),a={allowPartialFill:!0,datumTransformation:r.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:s,signal:z(i),srcResolution:this._srcResolutions[e.level],timeExtent:r.timeExtent,tileInfo:r.tileInfo,disableWrapAround:o};return this.fetchTile(e,a)}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const e=this.layerView.view.spatialReference,t=new le({x:this.layerView.fullExtent.xmin,y:this.layerView.fullExtent.ymax,spatialReference:e}),{scales:i,srcResolutions:s,isCustomTilingScheme:r}=de(this.layer.rasterInfo,e),o=pe.create({spatialReference:e,size:512,scales:i});(o.origin.x===0||o.origin.x>t.x)&&(o.origin=t),this._isCustomTilingScheme=r,this.layerView.set("tileInfo",o),this._srcResolutions=s??[]}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.rasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){this.updatingHandles.addPromise(this._enqueueTileFetch1(e,t))}async _enqueueTileFetch1(e,t){if(!this._fetchQueue.has(e.key.id)){try{const i=await this._fetchQueue.push(e.key),{bandIds:s}=this.layer;let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){r=!1;try{await this._redrawImage(this._abortController&&this._abortController.signal)}catch(l){I(l)&&T.getLogger(this.declaredClass).error(l)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const o=this._tileInfoView.getTileCoords(Se,e.key),a=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:i,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:s,coords:o,resolution:a}),e.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(e)}catch(i){I(i)||T.getLogger(this.declaredClass).error(i)}this.layerView.requestUpdate()}}async _redrawImage(e){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map(async i=>this.updateTileSymbolizerParameters(i,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await L(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t={srcResolution:this._srcResolutions[this.previousLOD.level],registryId:this._blockCacheRegistryId,signal:e},i=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,t);if(!i||!i.pixelBlock)return;const s=this.layer.symbolizer.generateWebGLParameters({pixelBlock:he(i.pixelBlock,this.layer.bandIds),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds});!this.canUseWebGLForProcessing()&&s&&s.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(s.factor=s.factor.map(r=>255*r),s.outMin=Math.round(255*s.outMin),s.outMax=Math.round(255*s.outMax)),this._globalSymbolizerParams=s}_updateSymbolizerParams(){this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:this.previousLOD.resolution,y:this.previousLOD.resolution},bandIds:this.layer.bandIds})}_updateBlockCacheRegistry(e=!1){const{url:t,rasterInfo:i,raster:s}=this.layer,{multidimensionalDefinition:r}=this.layer.normalizeRasterFetchOptions({multidimensionalDefinition:this.layer.multidimensionalDefinition,timeExtent:this.layerView.timeExtent}),o=i!=null&&i.multidimensionalInfo?s.getSliceIndex(r):null,a=ce(t,o);if(a!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&G(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=ue(a,this.layer.raster.rasterInfo),e){const l=this._tileInfoView.getClosestInfoForScale(this.layerView.view.scale),u=this._srcResolutions[l.level];$(a,this._blockCacheRegistryId,this.layerView.view.extent,this.layerView.view.resolution,u,this.layer.raster.ioConfig.sampling)}this._blockCacheRegistryUrl=a}}async doRefresh(){if(!this.attached)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.tiles.forEach(t=>e.push(this._enqueueTileFetch(t))),await L(e)}};n([p()],m.prototype,"_fetchQueue",void 0),n([p()],m.prototype,"_globalUpdateRequested",void 0),n([p()],m.prototype,"attached",void 0),n([p()],m.prototype,"container",void 0),n([p()],m.prototype,"layer",void 0),n([p()],m.prototype,"layerView",void 0),n([p()],m.prototype,"type",void 0),n([p()],m.prototype,"useWebGLForProcessing",null),n([p()],m.prototype,"useProgressiveUpdate",null),n([p()],m.prototype,"timeExtent",void 0),n([p()],m.prototype,"updating",null),m=n([R("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],m);let _=class extends m{constructor(){super(...arguments),this.container=null,this.layer=null,this.type="raster"}attach(){super.attach(),this.container=new xe(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){return this.useWebGLForProcessing&&this.layer.symbolizer.canRenderInWebGL&&!(this.layer.interpolation==="majority"&&A(this.layer))}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}async updateTileSource(e,t){const{bandIds:i}=this.layer,s=this._getLayerInterpolation(),r=this.canUseWebGLForProcessing(),{source:o,globalSymbolizerParams:a,suspended:l,coords:u,resolution:c}=t,f=this.layerView.hasTilingEffects?a:t.symbolizerParams,{bitmap:h}=e;if([h.x,h.y]=u,h.resolution=c,o&&d(o)&&d(o.pixelBlock)){const y={extent:o.extent,pixelBlock:o.pixelBlock};if(h.rawPixelData=y,r)h.source=o.pixelBlock,h.isRendereredSource=!1;else{const b=await this.layer.applyRenderer(y,(a==null?void 0:a.type)==="stretch"?a:null);h.source=b,h.isRendereredSource=!0}h.symbolizerParameters=r?f:null,r?h.transformGrid||(h.transformGrid=o.transformGrid):h.transformGrid=null}else{const y=this.createEmptyTilePixelBlock();h.source=y,h.symbolizerParameters=r?f:null,h.transformGrid=null}h.bandIds=r?i:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=s,h.suspended=l,h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:i,global:s}=t,{bandIds:r}=this.layer,o=this._getLayerInterpolation(),a=this.canUseWebGLForProcessing(),{bitmap:l}=e,{rawPixelData:u}=l;!a&&d(u)?(l.source=await this.layer.applyRenderer(u,(s==null?void 0:s.type)==="stretch"?s:null),l.isRendereredSource=!0):(l.isRendereredSource&&d(u)&&(l.source=u.pixelBlock),l.isRendereredSource=!1),l.symbolizerParameters=a?this.layerView.hasTilingEffects?s:i:null,l.bandIds=a?r:null,l.interpolation=o,l.suspended=!1}_getLayerInterpolation(){const e=this.layer.renderer.type;if(e==="raster-colormap"||e==="unique-value"||e==="class-breaks")return"nearest";const{interpolation:t}=this.layer,{renderer:i}=this.layer;return i.type==="raster-stretch"&&i.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};n([p()],_.prototype,"container",void 0),n([p()],_.prototype,"layer",void 0),n([p()],_.prototype,"type",void 0),_=n([R("esri.views.2d.layers.imagery.ImageryTileView2D")],_);const Ve=_;class Ce extends M{constructor(t,i,s,r,o,a,l=null){super(t,i,s,r,o,a),this.tileData=new Y(l),this.tileData.coordScale=[o,a],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(t){this.tileData.stencilRef=t}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{dvs:V(),tileMat3:V()}}setTransform(t){super.setTransform(t);const i=this.resolution/(t.resolution*t.pixelRatio),s=this.transforms.tileMat3,[r,o]=this.tileData.offset,a=[this.x+r*this.resolution,this.y-o*this.resolution],[l,u]=t.toScreenNoRotation([0,0],a),{symbolTileSize:c}=this.tileData.symbolizerParameters,f=Math.round((this.width-this.tileData.offset[0])/c)*c,h=Math.round((this.height-this.tileData.offset[1])/c)*c,y=f/this.rangeX*i,b=h/this.rangeY*i;_e(s,y,0,0,0,b,0,l,u,1),ve(this.transforms.dvs,t.displayViewMat3,s),this.tileData.transforms.dvs=this.transforms.dvs}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Ue extends j{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(t){const i=this._tileInfoView.getTileBounds(O(),t),[s,r]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t.level);return new Ce(t,o,i[0],i[3],s,r)}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf tile)",brushes:[re],target:()=>this.children.map(s=>s.tileData),drawPhase:C.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===C.MAP&&this.symbolTypes.forEach(i=>{t.renderPass=i,super.doRender(t)})}}let v=class extends m{constructor(){super(...arguments),this._handle=null,this.container=null,this.layer=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const i=await this.layer.fetchTile(e.level,e.row,e.col,t);return this.layer.rasterInfo.dataType==="vector-magdir"&&(i!=null&&i.pixelBlock)&&(i.pixelBlock=await this.layer.convertVectorFieldData(i.pixelBlock,t)),i}updateTileSource(e,t){const i=t.symbolizerParams,{tileData:s}=e;s.key=e.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=i,{source:o}=t;if(s.offset=this._getTileSymbolOffset(s.key,r),d(o)&&d(o.pixelBlock)){const a={extent:o.extent,pixelBlock:o.pixelBlock};s.rawPixelData=a,s.symbolizerParameters=i,s.source=this._sampleVectorFieldData(o.pixelBlock,i,s.offset)}else{const a=[Math.round((this._tileInfoView.tileInfo[0]-s.offset[0])/r),Math.round((this._tileInfoView.tileInfo[1]-s.offset[1])/r)],l=this.createEmptyTilePixelBlock(a);s.source=l,s.symbolizerParameters=i}return s.invalidateVAO(),Promise.resolve(null)}updateTileSymbolizerParameters(e,t){var a;const i=t.local,{symbolTileSize:s}=i,{tileData:r}=e;r.offset=this._getTileSymbolOffset(r.key,s);const o=r.symbolizerParameters.symbolTileSize;return r.symbolizerParameters=i,d((a=r.rawPixelData)==null?void 0:a.pixelBlock)&&o!==s&&(r.source=this._sampleVectorFieldData(r.rawPixelData.pixelBlock,r.symbolizerParameters,r.offset)),Promise.resolve(null)}attach(){super.attach(),this.container=new Ue(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=w(()=>this.layer.renderer,e=>this._updateSymbolType(e))}detach(){super.detach(),this.container.removeAllChildren(),this._handle.remove(),this._handle=null}_getTileSymbolOffset(e,t){const i=e.col*this._tileInfoView.tileInfo.size[0]%t,s=e.row*this._tileInfoView.tileInfo.size[1]%t;return[i>t/2?t-i:-i,s>t/2?t-s:-s]}_sampleVectorFieldData(e,t,i){const{symbolTileSize:s}=t;return we(e,"vector-uv",s,i)}_updateSymbolType(e){e.type==="vector-field"&&(this.container.symbolTypes=e.style==="wind-barb"?["scalar","triangle"]:e.style==="simple-scalar"?["scalar"]:["triangle"])}};n([p()],v.prototype,"container",void 0),n([p()],v.prototype,"layer",void 0),n([p()],v.prototype,"type",void 0),v=n([R("esri.views.2d.layers.imagery.VectorFieldTileView2D")],v);const ze=v,ke=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return B(z(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(i){return!!this.projectFullExtent(i)}projectFullExtent(i){const s=z(this.layer.fullExtent),r=B(s,i,!1);return ye(s,i,r)}async fetchPopupFeatures(i,s){const{layer:r}=this;if(!i)throw new F("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:r});const{popupEnabled:o}=r,a=Te(r,s);if(!o||H(a))throw new F("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:o,popupTemplate:a});const l=[],{value:u,magdirValue:c}=await r.identify(i,{timeExtent:this.timeExtent});let f="";if(u&&u.length){f=r.type==="imagery-tile"&&r.hasStandardTime()&&u[0]!=null?u.map(U=>r.getStandardTimeValue(U)).join(", "):u.join(", ");const h={ObjectId:0};h["Raster.ServicePixelValue"]=f;const y=r.rasterInfo.attributeTable;if(d(y)){const{fields:U,features:Q}=y,k=U.find(({name:g})=>g.toLowerCase()==="value"),S=k?Q.find(g=>String(g.attributes[k.name])===f):null;if(S)for(const g in S.attributes)S.attributes.hasOwnProperty(g)&&(h[this._rasterFieldPrefix+g]=S.attributes[g])}const b=r.rasterInfo.dataType;b!=="vector-magdir"&&b!=="vector-uv"||(h["Raster.Magnitude"]=c==null?void 0:c[0],h["Raster.Direction"]=c==null?void 0:c[1]);const x=new W(this.fullExtent.clone(),null,h);x.layer=r,x.sourceLayer=x.layer,l.push(x)}return l}};return n([p()],t.prototype,"layer",void 0),n([p(Pe)],t.prototype,"timeExtent",void 0),n([p()],t.prototype,"view",void 0),n([p()],t.prototype,"fullExtent",null),n([p()],t.prototype,"tileInfo",void 0),n([p({readOnly:!0})],t.prototype,"hasTilingEffects",null),t=n([R("esri.views.layers.ImageryTileLayerView")],t),t};let P=class extends ke(Ie(Z(ee))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}update(e){this.subview.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.handles.add([w(()=>{const{layer:e}=this;return{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition,rasterFunction:e.type==="imagery-tile"?e.rasterFunction:null}},(e,t)=>{var l,u;const i=e.interpolation!==t.interpolation&&(e.interpolation==="majority"||t.interpolation==="majority")&&A(this.layer),s=e.renderer!==t.renderer&&((l=t.renderer)==null?void 0:l.type)!==((u=e.renderer)==null?void 0:u.type);s&&this._updateSubview();const r=e.multidimensionalDefinition!==t.multidimensionalDefinition,o=e.rasterFunction!==t.rasterFunction,a=r||i||s||o;this.subview.redrawOrRefetch(a).catch(c=>{I(c)||T.getLogger(this.declaredClass).error(c)}),this.notifyChange("updating")}),w(()=>this.layer.blendMode??"normal",e=>{this.subview.container.blendMode=e},D),w(()=>this.layer.effect??null,e=>{this.subview.container.effect=e},D),w(()=>this.layer.multidimensionalSubset??null,(e,t)=>{const{multidimensionalDefinition:i}=this.layer;d(i)&&E(i,e)!==E(i,t)&&(this.subview.redrawOrRefetch(!0).catch(s=>{I(s)||T.getLogger(this.declaredClass).error(s)}),this.notifyChange("updating"))},N),w(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch(!0).catch(e=>{I(e)||T.getLogger(this.declaredClass).error(e)})},X)],"attach")}detach(){var e;this.handles.remove("attach"),this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),(e=this.subview)==null||e.destroy(),this.subview=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}async hitTest(e,t){return[{type:"graphic",layer:this.layer,mapPoint:e,graphic:new W({attributes:{},geometry:e.clone()})}]}doRefresh(){var e;return(e=this.subview)==null?void 0:e.doRefresh()}_updateSubview(){var s;const e=this.layer.renderer.type==="vector-field"?"rasterVF":this.layer.renderer.type==="flow"?"flow":"raster";if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),(s=this.subview)==null||s.destroy(),this.subview=null}const{layer:t}=this;let i;i=e==="rasterVF"?new ze({layer:t,layerView:this}):e==="flow"?new K({layer:t,layerView:this}):new Ve({layer:t,layerView:this}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i&&(i.previousLOD=this.subview&&"previousLOD"in this.subview&&this.subview.previousLOD),this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e!=null&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};n([p()],P.prototype,"subview",void 0),n([p()],P.prototype,"useWebGLForProcessing",null),n([p()],P.prototype,"useProgressiveUpdate",null),P=n([R("esri.views.2d.layers.ImageryTileLayerView2D")],P);const Zs=P;export{Zs as default};
