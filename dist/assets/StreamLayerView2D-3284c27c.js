import{af as p,ag as m,aj as d,E as l,a as u,cu as h}from"./index-989909ce.js";import{g as f}from"./FeatureSet-8fc9b923.js";import v from"./FeatureLayerView2D-ecbf5f03.js";import{e as g}from"./util-af5beedd.js";import"./Field-52715ac0.js";import"./fieldType-72d6c895.js";import"./Container-d6a11296.js";import"./parser-39b32429.js";import"./definitions-c7b3085f.js";import"./enums-b14466b3.js";import"./Texture-501dc2a6.js";import"./FeatureEffect-9276c25f.js";import"./jsonUtils-9353bf48.js";import"./Query-a7c50b34.js";import"./LayerView-0c8e3efe.js";import"./AttributeStoreView-d6656c7a.js";import"./TiledDisplayObject-cb1d7c8b.js";import"./sql-926e6229.js";import"./diffUtils-a4f61c8a.js";import"./labelingInfo-3941dab0.js";import"./labelUtils-f745c070.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-8ed38c32.js";import"./color-e690ede3.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-20e8cdd8.js";import"./VertexArrayObject-de8d8d6a.js";import"./ProgramTemplate-9e2e5761.js";import"./GeometryUtils-84a108d1.js";import"./heatmapUtils-8adef46d.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./earcut-27e6c8d6.js";import"./featureConversionUtils-b1362163.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-0f51e147.js";import"./ExpandedCIM-d2c7e7d5.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-611ec4df.js";import"./floatRGBA-5f0a804f.js";import"./clusterUtils-34d60035.js";import"./SizeVariable-3a3f0b31.js";import"./colorRamps-c86b1339.js";import"./LegendOptions-3ac5ff0b.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-32b5157c.js";import"./BitmapTileContainer-b18861eb.js";import"./Bitmap-0eeaf056.js";import"./TileContainer-49ce0aaa.js";import"./CircularArray-ef508845.js";import"./BufferPool-c9355ed2.js";import"./FeatureContainer-9a5fe42d.js";import"./commonProperties-33a052da.js";import"./ElevationInfo-4676a5da.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-517eaedb.js";import"./RefreshableLayerView-e7a40f14.js";function y(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t.toJSON()),e!=null&&(r.where=e),r}let s=class extends v{constructor(){super(...arguments),this._enabledEventTypes=new Set,this._isUserPaused=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._isUserPaused||this._proxy.resumeStream()})],"constructor")}get connectionError(){if(this.errorString)return new u("stream-controller",this.errorString)}pause(){this._isUserPaused=!0,this._proxy.pauseStream()}resume(){this._isUserPaused=!1,this._proxy.resumeStream()}on(e,t){if(Array.isArray(e))return h(e.map(n=>this.on(n,t)));const r=["data-received","message-received"].includes(e);r&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const o=super.on(e,t),i=this;return{remove(){o.remove(),r&&(i._proxy.closed||i.hasEventListener(e)||i._proxy.enableEvent(e,!1))}}}queryLatestObservations(e,t){var r,o,i;if(!((r=this.layer.timeInfo)!=null&&r.endField||(o=this.layer.timeInfo)!=null&&o.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(n=>{const a=f.fromJSON(n);return a.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),a})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(y(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(a=>a.toJSON()),o=g(e.geometryType),i=e.timeInfo&&e.timeInfo.toJSON()||null,n=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:o,objectIdField:t,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:y(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:n,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};p([m()],s.prototype,"errorString",void 0),p([m({readOnly:!0})],s.prototype,"connectionError",null),p([m()],s.prototype,"connectionStatus",void 0),s=p([d("esri.views.2d.layers.StreamLayerView2D")],s);const Ne=s;export{Ne as default};
