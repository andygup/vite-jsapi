import{S as L,s as w,dZ as i,d_ as u}from"./index-af438f1c.js";import{a as S}from"./lazyLayerLoader-fbe80b1c.js";import{getNumLayersAndTables as y,preprocessFSItemData as I,getSubtypeGroupLayerIds as g,getFirstLayerOrTableId as T}from"./layersLoader-05e80f4f.js";import{t as c}from"./fetchService-048e77df.js";import"./jsonContext-dfef0d1b.js";async function q(e){!e.portalItem||e.portalItem instanceof L||(e={...e,portalItem:new L(e.portalItem)});const a=await v(e.portalItem);return new a.constructor({portalItem:e.portalItem,...a.properties})}async function v(e){return await e.load(),F(await $(e))}async function $(e){switch(e.type){case"Map Service":return G(e);case"Feature Service":return M(e);case"Feature Collection":return b(e);case"Scene Service":return h(e);case"Image Service":return C(e);case"Stream Service":return V();case"Vector Tile Service":return j();case"GeoJson":return W();case"CSV":return D();case"KML":return K();case"WFS":return O();case"WMTS":return x();case"WMS":return k();case"Feed":return A();default:throw new w("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function F(e){const a=S[e.className];return{constructor:await a(),properties:e.properties}}async function G(e){return await R(e)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function M(e){if(i(e,"Oriented Imagery Layer"))return J(e);const a=await N(e);if(typeof a=="object"){const t={};return a.id!=null&&(t.layerId=a.id),{className:a.className||"FeatureLayer",properties:t}}return{className:"GroupLayer"}}async function h(e){var t;const a=await N(e);if(typeof a=="object"){const r={};let s;if(a.id!=null?(r.layerId=a.id,s=`${e.url}/layers/${a.id}`):s=e.url,(t=e.typeKeywords)==null?void 0:t.length){for(const o of Object.keys(u))if(e.typeKeywords.includes(o))return{className:u[o]}}const n=await c(s);return{className:u[n==null?void 0:n.layerType]||"SceneLayer",properties:r}}if(a===!1){const r=await c(e.url);return(r==null?void 0:r.layerType)==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}return{className:"GroupLayer"}}async function b(e){await e.load();const a=i(e,"Map Notes"),t=i(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if(i(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return y(r)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function C(e){var m,p,f;await e.load();const a=((m=e.typeKeywords)==null?void 0:m.map(d=>d.toLowerCase()))??[];if(a.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(a.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await e.fetchData(),r=t==null?void 0:t.layerType;if(r==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(r==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const s=await c(e.url),n=(p=s.cacheType)==null?void 0:p.toLowerCase(),o=(f=s.capabilities)==null?void 0:f.toLowerCase().includes("tilesonly");return n==="map"||o?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function V(){return{className:"StreamLayer"}}function j(){return{className:"VectorTileLayer"}}function W(){return{className:"GeoJSONLayer"}}function D(){return{className:"CSVLayer"}}function K(){return{className:"KMLLayer"}}function O(){return{className:"WFSLayer"}}function k(){return{className:"WMSLayer"}}function x(){return{className:"WMTSLayer"}}function A(){return{className:"StreamLayer"}}async function J(e){await e.load();const a=await e.fetchData();return a.coverage?{className:"GroupLayer"}:{className:"OrientedImageryLayer",properties:a}}async function R(e){return(await c(e.url)).tileInfo}async function N(e){const a=e.url;if(!a||a.match(/\/\d+$/))return{};await e.load();const t=await e.fetchData();if(e.type==="Feature Service"){const r=l(await I(t,a));if(typeof r=="object"){const s=g(t);r.className=r.id!=null&&s.includes(r.id)?"SubtypeGroupLayer":"FeatureLayer"}return r}return y(t)>0?l(t):l(await c(a))}function l(e){return y(e)===1&&{id:T(e)}}export{q as fromItem,$ as selectLayerClassPath};
