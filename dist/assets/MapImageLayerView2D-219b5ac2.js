import{ae as r,af as o,ai as n,b5 as l,i as d,L as u,A as c}from"./index-b51e75d5.js";import{B as y}from"./BitmapContainer-849713ca.js";import{L as f,a as w}from"./LayerView-1913516e.js";import{G as x}from"./GraphicsView2D-59a4da9e.js";import{H as V}from"./HighlightGraphicContainer-32246e13.js";import{E as H}from"./ExportStrategy-2958462c.js";import{c as I}from"./commonProperties-c098604c.js";import{E as _}from"./ExportImageParameters-21262e24.js";import{R as v}from"./RefreshableLayerView-590eb1e3.js";import{M as L,c as E}from"./drapedUtils-ef4b8f3c.js";import"./WGLContainer-f8a4fd03.js";import"./definitions-3f56d206.js";import"./VertexArrayObject-d544b58d.js";import"./TextureDescriptor-f92f0319.js";import"./enums-08489827.js";import"./VertexElementDescriptor-24e04d97.js";import"./color-05b85ffd.js";import"./enums-eb6e4255.js";import"./ProgramTemplate-f6686d4d.js";import"./MaterialKey-72fa82a6.js";import"./utils-3a381d3c.js";import"./heatmapUtils-a897c480.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./StyleDefinition-edaaf36e.js";import"./config-c06e4a6d.js";import"./GeometryUtils-0ab64fac.js";import"./Container-f527cc41.js";import"./parser-e88e0cee.js";import"./_commonjsHelpers-725317a4.js";import"./earcut-db592379.js";import"./featureConversionUtils-87949e9d.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./ExpandedCIM-e8dcd3e7.js";import"./BidiEngine-cdaf024a.js";import"./GeometryUtils-26dde58c.js";import"./Rect-df8ea165.js";import"./quantizationUtils-57f47ed2.js";import"./floatRGBA-910d7868.js";import"./normalizeUtilsSync-b52b61c4.js";import"./normalizeUtilsCommon-62742346.js";import"./projectionSupport-73dd9596.js";import"./json-9ae8d6f8.js";import"./labelingInfo-14ab3cff.js";import"./labelUtils-df8241fd.js";import"./defaultsJSON-b396ba80.js";import"./jsonUtils-97563038.js";import"./AttributeStoreView-f4627267.js";import"./TiledDisplayObject-be904313.js";import"./visualVariablesUtils-eb7c5ec6.js";import"./visualVariablesUtils-033c8494.js";import"./Matcher-9ea16ab6.js";import"./tileUtils-fdb57ff2.js";import"./TurboLine-4458975d.js";import"./LRUCache-3f2a86dd.js";import"./MemCache-467264d5.js";import"./devEnvironmentUtils-e2e22b53.js";import"./styleUtils-10d73057.js";import"./featureFlags-dcf59b6a.js";import"./schemaUtils-5b5d772c.js";import"./sql-c1a5e8cf.js";import"./diffUtils-1090f477.js";import"./clusterUtils-5e98e18f.js";import"./SizeVariable-f0de0a1e.js";import"./colorRamps-78691ea3.js";import"./LegendOptions-c1ffbacd.js";import"./sizeVariableUtils-2914222a.js";import"./lengthUtils-59fc3632.js";import"./util-839d3cdf.js";import"./ComputedAttributeStorage-b3278637.js";import"./FieldsIndex-27b25eac.js";import"./arcadeTimeUtils-0b589737.js";import"./executionError-e2eca390.js";import"./centroid-1116d1e7.js";import"./normalizeUtils-ba8520b6.js";import"./BaseGraphicContainer-67f54a99.js";import"./FeatureContainer-da6d15a7.js";import"./TileContainer-5e80ae0f.js";import"./vec3f32-ec4c3c20.js";import"./Bitmap-f73f59b7.js";import"./ElevationInfo-0549af0a.js";import"./floorFilterUtils-0e56040f.js";import"./sublayerUtils-98c5b065.js";import"./scaleUtils-387823df.js";import"./popupUtils-ba18fdc2.js";const b=h=>{let t=class extends h{initialize(){this.exportImageParameters=new _({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!(!super.canResume()||(e=this.timeExtent)!=null&&e.isEmpty)}};return r([o()],t.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],t.prototype,"floors",null),r([o({readOnly:!0})],t.prototype,"exportImageVersion",null),r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"suspended",void 0),r([o(I)],t.prototype,"timeExtent",void 0),t=r([n("esri.views.layers.MapImageLayerView")],t),t};let a=class extends b(v(f(w))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{d(e)||u.getLogger(this.declaredClass).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,p=e>=10.3,g=e>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new V(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(s,m)=>E(s,m,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,m)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:m})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,p){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,e,p){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],a.prototype,"strategy",void 0);r([o()],a.prototype,"updating",void 0);a=r([n("esri.views.2d.layers.MapImageLayerView2D")],a);const me=a;export{me as default};
