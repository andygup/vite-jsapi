import{p as Yt}from"./colorUtils-c0f43caf.js";import{e as c,y as h,a as y,bB as Vt,af as ve,fF as vt,fy as Q,eK as D,bD as lt,bE as ct,cn as ut,K as Lt,a3 as Zt,by as je}from"./index-d29f6b97.js";import{m as Me,u as d,b as De,o as _e,d as gt,n as Ee,v as be,k as Qt,e as ze,r as Ge,g as bt,i as $t,l as Oe,p as Ae,q as $e,w as Ve,t as E,x as Le,y as Ue,z as Fe,A as We,B as qe,C as Xe,D as At,E as He,M as Je,F as Ke}from"./dataUtils-8e6a5d39.js";import{m as Ye,p as Ze}from"./colorRamps-5cc134e8.js";let yt=class extends Vt{constructor(){super(...arguments),this.raster=void 0}};c([h({json:{write:!0}})],yt.prototype,"raster",void 0),yt=c([y("esri.layers.support.rasterFunctions.AspectFunctionArguments")],yt);const S=yt;var Ft;let It=Ft=class extends S{clone(){return new Ft({raster:this.raster})}};It=Ft=c([y("esri.layers.support.rasterFunctions.AspectFunctionArguments")],It);const Qe=It,ts=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);let F=class extends Vt{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const s=[t],{parameters:e}=t;let r=e.rasters||e.raster&&[e.raster];for(;r!=null&&r.length;){s.unshift(...r);const n=[];for(let u=0;u<r.length;u++){const{parameters:l}=r[u],p=l.rasters||l.raster&&[l.raster];p!=null&&p.length&&n.push(...p)}r=n}for(let n=s.length-1;n>=0;n--)s[n].isNoopProcess&&s.splice(n,1);let i=!1;for(let n=0;n<s.length;n++){const u=s[n];u.id=s.length-n-1;const{rasters:l}=u.parameters;i=i||l!=null&&l.length>1}const a=s.some(({name:n})=>ts.has(n.toLowerCase()));return{functions:s,hasBranches:i,hasSurfaceFunction:a}}bind(t,s=!1,e=-1){this.id=e+1;const r=this._getRasterValues();let i=!0;for(let a=0;a<r.length;a++){const n=r[a];if(n!=null&&this._isRasterFunctionValue(n)){const u=n.bind(t,s,this.id+a);if(!u.success)return this._bindingResult=u,u;i=i&&u.supportsGPU}}return!this.rasterInfo||s?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=i&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const s=this._getRasterValues(),e=s.length===0?t.pixelBlocks??t.primaryPixelBlocks:s.map(r=>this._readRasterValue(r,t));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(t.length>1){const i=t.map(n=>n.processInputBandIds()[0]);this.rawInputBandIds=i,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((n,u)=>n!==u);const a=t.filter(n=>n.functionName==="ExtractBand");return a.length&&a.forEach((n,u)=>{n.isInputBandIdsSwizzled=!0,n.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const e=t[0];if(e){if(s=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:i}=this.sourceRasterInfos[0];for(let a=0;a<i;a++)s.push(a)}const r=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=r.some((i,a)=>i!==a),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],s=[];return this._getPrimaryRasters(this,t,s),{rasters:t,rasterIds:s}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:s,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map(r=>this._isRasterFunctionValue(r)?r.getWebGLProcessorDefinition():typeof r=="number"?{name:"Constant",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(r=>r!=null)||(t.rasters=null)):this._isRasterFunctionValue(s)&&(t.raster=s.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return((t==null?void 0:t.startsWith("u"))||(t==null?void 0:t.startsWith("s")))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.map(s=>this.functionArguments[s]).flat()}_getSourceRasterInfos(t){const s=this._getRasterValues(),{rasterInfos:e,rasterIds:r}=t;if(s.length===0)return e;const i=s.map(n=>n&&typeof n=="object"&&"bind"in n&&n.rasterInfo?n.rasterInfo:typeof n=="string"&&r.includes(n)?e[r.indexOf(n)]:typeof n!="number"?e[0]:void 0),a=i.find(n=>n)??e[0];return i.forEach((n,u)=>{n===void 0&&(i[u]=a)}),i}_getPrimaryRasterId(t){return t==null?void 0:t.url}_getPrimaryRasters(t,s=[],e=[]){for(let r=0;r<t.sourceRasters.length;r++){const i=t.sourceRasters[r];if(typeof i!="number")if("bind"in i)this._getPrimaryRasters(i,s,e);else{const a=i,n=this._getPrimaryRasterId(a);if(n==null)continue;e.includes(n)||(this.mainPrimaryRasterId===n?(s.unshift(a),e.unshift(n)):(s.push(a),e.push(n)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,s){const{primaryPixelBlocks:e}=s;if(t==null||t==="$$"){const r=e[0];return r==null?null:r.clone()}if(typeof t=="string"){const r=s.primaryRasterIds.indexOf(t);return r===-1?null:e[r]}if(typeof t=="number"){const r=e[0];if(r==null)return null;const{width:i,height:a,pixelType:n,mask:u}=r,l=u?new Uint8Array(u):null,p=new Float32Array(i*a);p.fill(t);const m=this.sourceRasterInfos[0].bandCount,f=new Array(m).fill(p);return new d({width:i,height:a,pixelType:n,pixels:f,mask:l})}return t.process(s)}};c([h({json:{write:!0}})],F.prototype,"functionName",void 0),c([h({json:{write:!0}})],F.prototype,"functionArguments",void 0),c([h()],F.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}}),ve(o=>o==null?void 0:o.toLowerCase())],F.prototype,"outputPixelType",void 0),c([h({json:{write:!0}})],F.prototype,"mainPrimaryRasterId",void 0),c([h()],F.prototype,"sourceRasters",void 0),c([h({type:[Me],json:{write:!0}})],F.prototype,"sourceRasterInfos",void 0),c([h({json:{write:!0}})],F.prototype,"rasterInfo",void 0),c([h({json:{write:!0}})],F.prototype,"readingBufferSize",void 0),c([h({json:{write:!0}})],F.prototype,"id",void 0),c([h()],F.prototype,"isNoopProcess",void 0),c([h()],F.prototype,"supportsGPU",null),c([h()],F.prototype,"rawInputBandIds",void 0),c([h()],F.prototype,"isInputBandIdsSwizzled",void 0),c([h()],F.prototype,"swizzledBandSelection",void 0),c([h()],F.prototype,"isBranch",void 0),c([h()],F.prototype,"flatWebGLFunctionChain",null),c([h()],F.prototype,"_bindingResult",void 0),F=c([y("esri.layers.support.rasterFunctions.BaseRasterFunction")],F);const k=F;let U=class extends k{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;const t=this.sourceRasterInfos[0];this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=[{min:-1,max:360,avg:180,stddev:30}],s.histograms=null,s.colormap=null,s.attributeTable=null,s.bandCount=1,this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){var n;const s=(n=t.pixelBlocks)==null?void 0:n[0];if(s==null)return null;const{extent:e,primaryPixelSizes:r}=t,i=r==null?void 0:r[0],a=i??(e?{x:e.width/s.width,y:e.height/s.height}:{x:1,y:1});return De(s,{resolution:a})}};c([h({json:{write:!0,name:"rasterFunction"}})],U.prototype,"functionName",void 0),c([h({type:Qe,json:{write:!0,name:"rasterFunctionArguments"}})],U.prototype,"functionArguments",void 0),c([h()],U.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],U.prototype,"isGCS",void 0),U=c([y("esri.layers.support.rasterFunctions.AspectFunction")],U);const es=U,ss=new Set(["+","-","*","/","(",")"]);function ns(o,t){(o=o.replaceAll(" ","")).startsWith("-")&&(o="0"+o),o.startsWith("+")&&(o=o.slice(1,o.length));const s=o.split(""),e=[],r=[];let i="";for(let a=0;a<s.length;a++){const n=s[a];if(ss.has(n))i!==""&&r.push(parseFloat(i)),e.push(n),i="";else{if(n.toLowerCase()==="b"){a++,i=n.concat(s[a]),r.push(t[parseInt(i[1],10)-1]),i="";continue}i=i.concat(n),a===s.length-1&&r.push(parseFloat(i))}}return{ops:e,nums:r}}function rs(o,t,s,e){if(typeof s=="number"&&typeof e=="number")return s+e;let r,i,a;typeof s=="number"?(a=e,r=a.length,i=new Float32Array(r),i.fill(s)):(r=s.length,i=s,e.constructor===Number?(a=new Float32Array(r),a.fill(e)):a=e);const n=new Float32Array(r);switch(t){case"+":for(let u=0;u<r;u++)(o==null||o[u])&&(n[u]=i[u]+a[u]);break;case"-":for(let u=0;u<r;u++)(o==null||o[u])&&(n[u]=i[u]-a[u]);break;case"*":for(let u=0;u<r;u++)(o==null||o[u])&&(n[u]=i[u]*a[u]);break;case"/":for(let u=0;u<r;u++)(o==null||o[u])&&a[u]&&(n[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return n}function os(o,t){o.splice(t,1);let s=0,e=0;do{s=0,e=0;for(let r=0;r<o.length;r++)if(o[r]==="(")s=r;else if(o[r]===")"){e=r;break}e===s+1&&o.splice(s,2)}while(e===s+1);return o}function is(o){if(o.length===1)return{opIndex:0,numIndex:0};let t=0,s=0;for(let a=0;a<o.length;a++)if(o[a]==="(")t=a;else if(o[a]===")"){s=a;break}const e=s===0?o:o.slice(t+1,s);let r=-1;for(let a=0;a<e.length;a++)if(e[a]==="*"||e[a]==="/"){r=a;break}if(r>-1)s>0&&(r+=t+1);else{for(let a=0;a<e.length;a++)if(e[a]==="+"||e[a]==="-"){r=a;break}s>0&&(r+=t+1)}let i=0;for(let a=0;a<r;a++)o[a]==="("&&i++;return{opIndex:r,numIndex:r-i}}function as(o,t,s){let e,{ops:r,nums:i}=ns(s,t);if(r.length===0){const a=i.length===1?i[0]:t[0];if(a instanceof Float32Array)return[a];const n=new Float32Array(t[0].length);return typeof a=="number"?n.fill(a):n.set(a),[n]}for(;r.length>0;){const{numIndex:a,opIndex:n}=is(r);if(e=rs(o,r[n],i[a],i[a+1]),r.length===1)break;r=os(r,n),i.splice(a,2,e)}return[e]}const us=new vt({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function ls(o,t){if(!_e(o))return o;const{equation:s,method:e}=t,r=t.bandIndexes.map(p=>p-1),{pixels:i,mask:a}=o;let n;switch(e){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=te(a,i[r[0]],i[r[1]]);break;case"ndwi":n=te(a,i[r[1]],i[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=ps(a,i[r[0]],i[r[1]]);break;case"ci-g":case"ci-re":n=hs(a,i[r[0]],i[r[1]]);break;case"savi":n=ms(a,i[r[0]],i[r[1]],r[2]+1);break;case"tsavi":n=fs(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":n=ds(a,i[r[0]],i[r[1]]);break;case"gemi":n=gs(a,i[r[0]],i[r[1]]);break;case"pvi":n=ys(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1);break;case"gvitm":n=xs(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"sultan":n=ws(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"vari":n=vs(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"mtvi2":n=bs(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"rtvi-core":n=As(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"evi":n=$s(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"wndwi":n=Fs(a,[i[r[0]],i[r[1]],i[r[2]]],r[3]?r[3]+1:.5);break;case"bai":n=Is(a,i[r[0]],i[r[1]]);break;case"custom":n=as(a,i,s);break;default:return o}const u=a!=null?new Uint8Array(a.length):null;a!=null&&u!=null&&u.set(a);const l=new d({width:o.width,height:o.height,pixelType:"f32",pixels:n,mask:u});return l.updateStatistics(),l}function cs(o,t,s,e){const{mask:r,pixels:i,width:a,height:n}=o,u=i[s],l=i[t],p=l.length,m=e?new Uint8Array(p):new Float32Array(p),f=e?100:1,w=e?100.5:0;for(let b=0;b<p;b++)if(r==null||r[b]){const T=u[b],Jt=l[b],Kt=T+Jt;Kt&&(m[b]=(T-Jt)/Kt*f+w)}const v=new d({width:a,height:n,mask:r,pixelType:e?"u8":"f32",pixels:[m]});return v.updateStatistics(),v}function P(o){const t=new Float32Array(9);return t[3*o[0]]=1,t[3*o[1]+1]=1,t[3*o[2]+2]=1,t}function te(o,t,s){const e=s.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i]){const a=t[i],n=s[i],u=a+n;u&&(r[i]=(a-n)/u)}return[r]}function ps(o,t,s){const e=s.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i]){const a=t[i],n=s[i];n&&(r[i]=a/n)}return[r]}function hs(o,t,s){const e=t.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i]){const a=t[i],n=s[i];n&&(r[i]=a/n-1)}return[r]}function ms(o,t,s,e){const r=s.length,i=new Float32Array(r);for(let a=0;a<r;a++)if(o==null||o[a]){const n=s[a],u=t[a],l=u+n+e;l&&(i[a]=(u-n)/l*(1+e))}return[i]}function fs(o,t,s,e,r,i){const a=s.length,n=new Float32Array(a),u=-r*e+i*(1+e*e);for(let l=0;l<a;l++)if(o==null||o[l]){const p=s[l],m=t[l],f=r*m+p+u;f&&(n[l]=e*(m-e*p-r)/f)}return[n]}function ds(o,t,s){const e=s.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i]){const a=s[i],n=t[i];r[i]=.5*(2*(n+1)-Math.sqrt((2*n+1)**2-8*(n-a)))}return[r]}function gs(o,t,s){const e=s.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i]){const a=s[i],n=t[i];if(a!==1){const u=(2*(n*n-a*a)+1.5*n+.5*a)/(n+a+.5);r[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[r]}function ys(o,t,s,e,r){const i=s.length,a=new Float32Array(i),n=Math.sqrt(1+e*e);for(let u=0;u<i;u++)if(o==null||o[u]){const l=s[u],p=t[u];a[u]=(p-e*l-r)/n}return[a]}function xs(o,t){const[s,e,r,i,a,n]=t,u=s.length,l=new Float32Array(u);for(let p=0;p<u;p++)(o==null||o[p])&&(l[p]=-.2848*s[p]-.2435*e[p]-.5436*r[p]+.7243*i[p]+.084*a[p]-1.18*n[p]);return[l]}function ws(o,t){const[s,,e,r,i,a]=t,n=s.length,u=new Float32Array(n),l=new Float32Array(n),p=new Float32Array(n);for(let m=0;m<n;m++)(o==null||o[m])&&(u[m]=a[m]?i[m]/a[m]*100:0,l[m]=s[m]?i[m]/s[m]*100:0,p[m]=r[m]?e[m]/r[m]*(i[m]/r[m])*100:0);return[u,l,p]}function vs(o,t){const[s,e,r]=t,i=s.length,a=new Float32Array(i);for(let n=0;n<i;n++)if(o==null||o[n])for(n=0;n<i;n++){const u=s[n],l=e[n],p=l+u-r[n];p&&(a[n]=(l-u)/p)}return[a]}function bs(o,t){const[s,e,r]=t,i=s.length,a=new Float32Array(i);for(let n=0;n<i;n++)if(o==null||o[n])for(n=0;n<i;n++){const u=s[n],l=e[n],p=r[n],m=Math.sqrt((2*u+1)**2-6*u-5*Math.sqrt(l)-.5);a[n]=1.5*(1.2*(u-p)-2.5*(l-p))*m}return[a]}function As(o,t){const[s,e,r]=t,i=s.length,a=new Float32Array(i);for(let n=0;n<i;n++)if(o==null||o[n])for(n=0;n<i;n++){const u=s[n],l=e[n],p=r[n];a[n]=100*(u-l)-10*(u-p)}return[a]}function $s(o,t){const[s,e,r]=t,i=s.length,a=new Float32Array(i);for(let n=0;n<i;n++)if(o==null||o[n])for(n=0;n<i;n++){const u=s[n],l=e[n],p=u+6*l-7.5*r[n]+1;p&&(a[n]=2.5*(u-l)/p)}return[a]}function Fs(o,t,s=.5){const[e,r,i]=t,a=r.length,n=new Float32Array(a);for(let u=0;u<a;u++)if(o==null||o[u])for(u=0;u<a;u++){const l=e[u],p=r[u],m=i[u],f=l+s*p+(1-s)*m;f&&(n[u]=(l-s*p-(1-s)*m)/f)}return[n]}function Is(o,t,s){const e=s.length,r=new Float32Array(e);for(let i=0;i<e;i++)if(o==null||o[i])for(i=0;i<e;i++){const a=(.1-t[i])**2+(.06-s[i])**2;a&&(r[i]=1/a)}return[r]}var Pt;let pt=Pt=class extends S{constructor(){super(...arguments),this.method="custom"}clone(){return new Pt({method:this.method,bandIndexes:this.bandIndexes,raster:D(this.raster)})}};c([h({json:{type:String,write:!0}})],pt.prototype,"bandIndexes",void 0),c([Q(us)],pt.prototype,"method",void 0),pt=Pt=c([y("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],pt);const Ps=pt,Ns=new Set(["vari","mtvi2","rtvi-core","evi"]);let tt=class extends k{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=null,s.histograms=null,s.bandCount=this.functionArguments.method==="sultan"?t.bandCount:1,this.rasterInfo=s,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var a;const s=(a=t.pixelBlocks)==null?void 0:a[0];if(s==null)return s;const{method:e,bandIndexes:r}=this.functionArguments,i=r.split(" ").map(n=>parseFloat(n));return ls(s,{method:e,bandIndexes:i,equation:r})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1);t.length===2&&t.push(0);const s=this.isInputBandIdsSwizzled?[0,1,2]:t;let e,r;const i=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":e=P([s[0],s[1],0]),r="ndxi";break;case"ndwi":e=P([s[1],s[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":e=P([s[0],s[1],0]),r="sr";break;case"ci-g":case"ci-re":e=P([s[0],s[1],0]),r="ci";break;case"savi":e=P([s[0],s[1],0]),r="savi",i[0]=t[2]+1;break;case"tsavi":e=P([s[0],s[1],0]),r="tsavi",i[0]=t[2]+1,i[1]=t[3]+1,i[2]=t[4]+1;break;case"msavi":e=P([s[0],s[1],0]),r="msavi";break;case"gemi":e=P([s[0],s[1],0]),r="gemi";break;case"pvi":e=P([s[0],s[1],0]),r="tsavi",i[0]=t[2]+1,i[1]=t[3]+1;break;case"vari":e=P([s[0],s[1],s[2]]),r="vari";break;case"mtvi2":e=P([s[0],s[1],s[2]]),r="mtvi2";break;case"rtvi-core":e=P([s[0],s[1],s[2]]),r="rtvicore";break;case"evi":e=P([s[0],s[1],s[2]]),r="evi";break;case"wndwi":e=P([s[0],s[1],0]),r="wndwi",i[0]=t[3]?t[3]+1:.5;break;case"bai":e=P([s[1],s[0],0]),r="bai";break;default:e=P([0,1,2]),r="custom"}return{bandIndexMat3:e,indexType:r,adjustments:i}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const s=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1),e=t.length,r=s.map(n=>n>=e?e-1:n),i=Ns.has(this.functionArguments.method)?3:2,a=r.slice(0,i).map(n=>t[n]);return a.length===2&&a.push(0),a}};c([h({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),c([h({type:Ps,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),c([h()],tt.prototype,"rasterArgumentNames",void 0),tt=c([y("esri.layers.support.rasterFunctions.BandArithmeticFunction")],tt);const Ts=tt;var Nt;let _=Nt=class extends S{castColormapName(o){if(!o)return null;const t=o.toLowerCase();return Ee.includes(t)?t:null}readColorRamp(o){return Ze(o)}readColorRampName(o,t){if(!o)return null;const s=gt.jsonValues.find(e=>e.toLowerCase()===o.toLowerCase());return s?gt.fromJSON(s):null}clone(){var o;return new Nt({colormap:D(this.colormap),colormapName:this.colormapName,colorRamp:(o=this.colorRamp)==null?void 0:o.clone(),colorRampName:this.colorRampName})}};c([h({type:[[Number]],json:{write:!0}})],_.prototype,"colormap",void 0),c([h({type:String,json:{write:!0}})],_.prototype,"colormapName",void 0),c([ve("colormapName")],_.prototype,"castColormapName",null),c([h({types:Ye,json:{write:!0}})],_.prototype,"colorRamp",void 0),c([lt("colorRamp")],_.prototype,"readColorRamp",null),c([h({type:gt.apiValues,json:{type:gt.jsonValues,write:gt.write}})],_.prototype,"colorRampName",void 0),c([lt("colorRampName")],_.prototype,"readColorRampName",null),_=Nt=c([y("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],_);const Rs=_,Cs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Bs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Ut(o,t){const s=[],e=[];for(let i=0;i<o.length-1;i++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:o[i].slice(1),toColor:o[i+1].slice(1)}),e.push(o[i+1][0]-o[i][0]);const r=o[o.length-1][0];return be({type:"multipart",colorRamps:s},{numColors:r,weights:t=t??e})}function Ss(){return Ut([[0,0,191,191],[51,0,255,0],[102,255,255,0],[153,255,127,0],[204,191,127,63],[256,20,20,20]])}function ks(){const o=Ut([[0,255,255,255],[70,0,0,255],[80,205,193,173],[100,150,150,150],[110,120,100,51],[130,120,200,100],[140,28,144,3],[160,6,55,0],[180,10,30,25],[201,6,27,7]]);for(let t=o.length;t<256;t++)o.push([6,27,7]);return o}function js(){return be({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Ms(){const o=[];for(let t=0;t<256;t++){const s=[];for(let e=0;e<3;e++)s.push(Math.round(255*Math.random()));o.push(s)}return o}function Ds(){return Ut([[0,38,54,41],[69,79,90,82],[131,156,156,156],[256,253,241,253]],[.268,.238,.495])}function _s(o){let t;switch(o){case"elevation":t=Ss();break;case"gray":t=js();break;case"hillshade":t=Ds();break;case"ndvi":t=Cs;break;case"ndvi2":t=ks();break;case"ndvi3":t=Bs;break;case"random":t=Ms()}return t?(t=t.map((s,e)=>[e,...s]),t):null}let z=class extends k{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:s,colormapName:e,colorRamp:r,colorRampName:i}=this.functionArguments;if(!(s!=null&&s.length))if(r)s=Qt(r,{interpolateAlpha:!0});else if(i){const n=ze(i);n&&(s=Qt(n))}else e&&(s=_s(e));if(!(s!=null&&s.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=s,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var s;return(s=t.pixelBlocks)==null?void 0:s[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],z.prototype,"functionName",void 0),c([h({type:Rs,json:{write:!0,name:"rasterFunctionArguments"}})],z.prototype,"functionArguments",void 0),c([h()],z.prototype,"rasterArgumentNames",void 0),c([h()],z.prototype,"isNoopProcess",void 0),c([h({json:{write:!0}})],z.prototype,"indexedColormap",void 0),z=c([y("esri.layers.support.rasterFunctions.ColormapFunction")],z);const Es=z;var Tt;let ht=Tt=class extends S{constructor(){super(...arguments),this.rasters=[]}writeRasters(o,t){t.rasters=o.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new Tt({rasters:D(this.rasters)})}};c([h({json:{write:!0}})],ht.prototype,"rasters",void 0),c([ct("rasters")],ht.prototype,"writeRasters",null),ht=Tt=c([y("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],ht);const zs=ht;let et=class extends k{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0];this.outputPixelType=this._getOutputPixelType(s.pixelType);const e=s.clone();if(e.attributeTable=null,e.colormap=null,e.pixelType=this.outputPixelType,e.bandCount=t.map(({bandCount:r})=>r).reduce((r,i)=>r+i),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:i})=>i!=null&&r.push(...i)),e.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:i})=>i!=null&&r.push(...i)),e.histograms=r}return e.bandCount>1&&(e.colormap=null,e.attributeTable=null),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:s}=t;return s?(s==null?void 0:s[0])==null?null:Ge(s):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([h({json:{write:!0,name:"rasterFunction"}})],et.prototype,"functionName",void 0),c([h({type:zs,json:{write:!0,name:"rasterFunctionArguments"}})],et.prototype,"functionArguments",void 0),c([h()],et.prototype,"rasterArgumentNames",void 0),et=c([y("esri.layers.support.rasterFunctions.CompositeBandFunction")],et);const Gs=et,x={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Os={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},B={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},M={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Vs={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ie={setNull:50,conditional:78},ee={...Os,...B,...M,...Vs,...Ie},A=new Map;function Ls(o){const t=Math.sqrt(o.length),s=o.slice(0,t),e=[1];for(let r=1;r<t;r++){let i=null;for(let a=0;a<t;a++){const n=o[a+r*t],u=o[a];if(i==null)if(u===0){if(n)return{separable:!1,row:null,col:null}}else i=n/u;else if(n/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};e.push(i)}return{separable:!0,row:s,col:e}}function se(o,t,s,e,r,i,a){const n=new Float32Array(t*s),u=i.length,l=a?0:e,p=a?e:0,m=a?1:t;for(let f=l;f<s-l;f++){const w=f*t;for(let v=p;v<t-p;v++){if(r&&!r[w+v])continue;let b=0;for(let T=0;T<u;T++)b+=o[w+v+(T-e)*m]*i[T];n[w+v]=b}}return n}function Us(o,t,s,e,r,i,a){const n=new Float32Array(t*s),u=Math.floor(e/2),l=Math.floor(r/2);for(let p=u;p<s-u;p++){const m=p*t;for(let f=l;f<t-l;f++){if(i&&!i[m+f])continue;let w=0;for(let v=0;v<e;v++)for(let b=0;b<r;b++)w+=o[m+f+(v-u)*t+b-l]*a[v*r+b];n[m+f]=w}}return n}function Ws(o,t,s=!0){const{pixels:e,width:r,height:i,pixelType:a,mask:n}=o,u=e.length,l=[],{kernel:p,rows:m,cols:f}=t;for(let w=0;w<u;w++){const v=Us(e[w],r,i,m,f,n,p);s&&Pe(v,r,i,m,f),l.push(v)}return new d({width:r,height:i,pixelType:a,pixels:l,mask:n})}function Pe(o,t,s,e,r){const i=Math.floor(e/2);for(let n=0;n<i;n++)for(let u=0;u<t;u++)o[n*t+u]=o[(r-1-n)*t+u],o[(s-1-n)*t+u]=o[(s-r+n)*t+u];const a=Math.floor(r/2);for(let n=0;n<s;n++){const u=n*t;for(let l=0;l<a;l++)o[u+l]=o[u+r-1-l],o[u+t-l-1]=o[u+t+l-r]}}function qs(o,t,s,e=!0){const{pixels:r,width:i,height:a,pixelType:n,mask:u}=o,l=r.length,p=[],m=t.length,f=s.length,w=Math.floor(m/2),v=Math.floor(f/2);for(let b=0;b<l;b++){let T=se(r[b],i,a,w,u,t,!0);T=se(T,i,a,v,u,s,!1),e&&Pe(T,i,a,m,f),p.push(T)}return new d({width:i,height:a,pixelType:n,pixels:p,mask:u})}function Xs(o,t){const s=Ls(t.kernel),e=t.mirrorEdges!==!1,r=s.separable?qs(o,s.row,s.col,e):Ws(o,t,e),{outputPixelType:i}=t;return i&&r.clamp(i),r}A.set(x.none,[0,0,0,0,1,0,0,0,0]),A.set(x.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),A.set(x.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),A.set(x.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),A.set(x.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),A.set(x.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),A.set(x.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),A.set(x.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),A.set(x.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),A.set(x.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),A.set(x.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),A.set(x.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),A.set(x.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),A.set(x.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),A.set(x.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),A.set(x.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),A.set(x.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),A.set(x.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),A.set(x.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),A.set(x.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),A.set(x.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),A.set(x.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),A.set(x.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Rt;let W=Rt=class extends S{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(o){this._set("convolutionType",o);const t=A.get(o);if(!t||o===x.userDefined||o===x.none)return;const s=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",s),this._set("rows",s)}clone(){return new Rt({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:D(this.raster)})}};c([h({json:{type:Number,write:!0}})],W.prototype,"rows",void 0),c([h({json:{type:Number,write:!0}})],W.prototype,"cols",void 0),c([h({json:{name:"type",type:Number,write:!0}})],W.prototype,"convolutionType",null),c([h({json:{type:[Number],write:!0}})],W.prototype,"kernel",void 0),W=Rt=c([y("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],W);const Hs=W,ne=25;let st=class extends k{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:s,cols:e,kernel:r}=this.functionArguments;if(!Object.values(x).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==x.none&&s*e!==r.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const i=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(i.pixelType);const a=i.clone();a.pixelType=this.outputPixelType;const n=[x.none,x.sharpen,x.sharpen2,x.sharpening3x3,x.sharpening5x5];return this.outputPixelType==="u8"||n.includes(t)||(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:r.length<=ne}}_processPixels(t){var n;const s=(n=t.pixelBlocks)==null?void 0:n[0];if(s==null||this.functionArguments.convolutionType===x.none)return s;let{kernel:e,rows:r,cols:i}=this.functionArguments;const a=e.reduce((u,l)=>u+l);return a!==0&&a!==1&&(e=e.map(u=>u/a)),Xs(s,{kernel:e,rows:r,cols:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const s=t.reduce((r,i)=>r+i);s!==0&&s!==1&&(t=t.map(r=>r/s));const e=new Float32Array(ne);return e.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:e,clampRange:bt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0),c([h({type:Hs,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0),c([h()],st.prototype,"rasterArgumentNames",void 0),st=c([y("esri.layers.support.rasterFunctions.ConvolutionFunction")],st);const Js=st;var Ct;const Ne=new vt({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let nt=Ct=class extends S{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(o,t){return Ne.fromJSON(t.type??t.curvatureType??0)}clone(){return new Ct({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([h({json:{write:{target:"type"}}}),Q(Ne)],nt.prototype,"curvatureType",void 0),c([lt("curvatureType",["type","curvatureType"])],nt.prototype,"readCurvatureType",null),c([h({type:Number,json:{write:!0}})],nt.prototype,"zFactor",void 0),nt=Ct=c([y("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],nt);const Ks=nt;let q=class extends k{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const s=(p=t.pixelBlocks)==null?void 0:p[0];if(s==null)return null;const{zFactor:e,curvatureType:r}=this.functionArguments,{extent:i,primaryPixelSizes:a}=t,n=a==null?void 0:a[0],u=n??(i?{x:i.width/s.width,y:i.height/s.height}:{x:1,y:1}),l=this.isGCS&&e>=1?e*$t:e;return Oe(s,{zFactor:l,curvatureType:r,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:s}=this.functionArguments;return{curvatureType:s,zFactor:this.isGCS&&t>=1?t*$t:t}}};c([h({json:{write:!0,name:"rasterFunction"}})],q.prototype,"functionName",void 0),c([h({type:Ks,json:{write:!0,name:"rasterFunctionArguments"}})],q.prototype,"functionArguments",void 0),c([h()],q.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],q.prototype,"isGCS",void 0),q=c([y("esri.layers.support.rasterFunctions.CurvatureFunction")],q);const Ys=q;var Bt;let mt=Bt=class extends S{constructor(){super(...arguments),this.bandIds=[],this.missingBandAction=Ae.bestMatch}clone(){return new Bt({bandIds:[...this.bandIds],missingBandAction:this.missingBandAction})}};c([h({json:{write:!0}})],mt.prototype,"bandIds",void 0),c([h({json:{write:!0}})],mt.prototype,"missingBandAction",void 0),mt=Bt=c([y("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],mt);const Zs=mt;let rt=class extends k{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:e}=s,{bandIds:r,missingBandAction:i}=this.functionArguments;if(i===Ae.fail&&r.some(l=>l<0||l>=e))return{success:!1,supportsGPU:!1,error:"extract-band-function: invalid bandIds"};this.outputPixelType=this._getOutputPixelType("f32");const a=s.clone();a.pixelType=this.outputPixelType,a.bandCount=r.length;const{statistics:n,histograms:u}=a;return n!=null&&n.length&&(a.statistics=r.map(l=>n[l]||n[n.length-1])),u!=null&&u.length&&(a.histograms=r.map(l=>u[l]||u[u.length-1])),this.rasterInfo=a,{success:!0,supportsGPU:a.bandCount<=3}}_processPixels(t){var i;const s=(i=t.pixelBlocks)==null?void 0:i[0];if(s==null)return null;const e=s.pixels.length,r=this.functionArguments.bandIds.map(a=>a>=e?e-1:a);return s.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let s=0;s<3;s++)t[s]=Math.min(t[s],2)}return{bandIndexMat3:P(t)}}_getInputBandIds(t){const s=t.length;return this.functionArguments.bandIds.map(e=>e>=s?s-1:e).map(e=>t[e])}};c([h({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([h({type:Zs,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([h()],rt.prototype,"rasterArgumentNames",void 0),rt=c([y("esri.layers.support.rasterFunctions.ExtractBandFunction")],rt);const Qs=rt;var St;let X=St=class extends S{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(o,t){t.rasters=o.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new St({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:D(this.rasters)})}};c([h({json:{write:!0}})],X.prototype,"operation",void 0),c([h({json:{write:!0}})],X.prototype,"rasters",void 0),c([ct("rasters")],X.prototype,"writeRasters",null),c([h({json:{write:!0}})],X.prototype,"processAsMultiband",void 0),X=St=c([y("esri.layers.support.rasterFunctions.LocalFunctionArguments")],X);const tn=X,N=new Map;function en(o){return N.get(o)}N.set(M.acos,[0,Math.PI]),N.set(M.asin,[-Math.PI/2,Math.PI/2]),N.set(M.atan,[-Math.PI/2,Math.PI/2]),N.set(M.cos,[-1,1]),N.set(M.sin,[-1,1]),N.set(B.booleanAnd,[0,1]),N.set(B.booleanNot,[0,1]),N.set(B.booleanOr,[0,1]),N.set(B.booleanXOr,[0,1]),N.set(B.equalTo,[0,1]),N.set(B.notEqual,[0,1]),N.set(B.greaterThan,[0,1]),N.set(B.greaterThanEqual,[0,1]),N.set(B.lessThan,[0,1]),N.set(B.lessThanEqual,[0,1]),N.set(B.isNull,[0,1]);const re=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function sn(o,t=!1){const s=o.map(n=>n.mask),e=s.filter(n=>n!=null),r=o[0].pixels[0].length;if(e.length===0)return new Uint8Array(r).fill(255);const i=e[0],a=new Uint8Array(i);if(e.length===1)return a;if(!t){for(let n=1;n<e.length;n++){const u=e[n];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}if(e.length!==s.length)return new Uint8Array(r).fill(255);for(let n=1;n<e.length;n++){const u=e[n];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function nn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]+r[n]);return a}function rn(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand("f32",r);return i.set(e),i}function on(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]-r[n]);return a}function an(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]*r[n]);return a}function un(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand(s,r);for(let a=0;a<r;a++)t&&!t[a]||(i[a]=Math.sign(e[a])*Math.floor(Math.abs(e[a])));return i}function Te(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]/r[n]);return a}function ln(o,t,s){return Te(o,t,"f32")}function cn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=Math.floor(e[n]/r[n]));return a}function pn(o,t,s,e){const r=o[0],i=r.length,a=d.createEmptyBand(s,i);if(e===M.atanh){for(let u=0;u<i;u++)if(t[u]){const l=r[u];Math.abs(l)>=1?t[u]=0:a[u]=Math.atanh(l)}return a}const n=e===M.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(t[u]){const l=r[u];Math.abs(l)>1?t[u]=0:a[u]=n(l)}return a}function hn(o,t,s,e){const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e(r[n]));return a}function mn(o,t,s,e){const[r,i]=o,a=r.length,n=d.createEmptyBand(s,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=e(r[u],i[u]));return n}function fn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]&r[n]);return a}function oe(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]<<r[n]);return a}function dn(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand(s,r);for(let a=0;a<r;a++)t&&!t[a]||(i[a]=~e[a]);return i}function gn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]|r[n]);return a}function yn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]>>r[n]);return a}function xn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]^r[n]);return a}function wn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]&&r[n]?1:0);return a}function vn(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand(s,r);for(let a=0;a<r;a++)t&&!t[a]||(i[a]=e[a]?0:1);return i}function bn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]||r[n]?1:0);return a}function An(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=(e[n]?1:0)^(r[n]?1:0));return a}function $n(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]===r[n]?1:0);return a}function Wt(o,t,s,e){const[r]=o,i=r.length,a=d.createEmptyBand(s,i),n=e===Math.E;for(let u=0;u<i;u++)t&&!t[u]||(a[u]=n?Math.exp(r[u]):e**r[u]);return a}function Fn(o,t,s){return Wt(o,t,s,10)}function In(o,t,s){return Wt(o,t,s,2)}function Pn(o,t,s){return Wt(o,t,s,Math.E)}function qt(o,t,s,e){const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(r[n]<=0?t[n]=0:a[n]=e(r[n]));return a}function Nn(o,t,s){return qt(o,t,s,Math.log10)}function Tn(o,t,s){return qt(o,t,s,Math.log2)}function Rn(o,t,s){return qt(o,t,s,Math.log)}function Cn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]>r[n]?1:0);return a}function Bn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]>=r[n]?1:0);return a}function Sn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]<r[n]?1:0);return a}function kn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]<=r[n]?1:0);return a}function jn(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand(s,r);if(!t)return i;for(let a=0;a<r;a++)i[a]=t[a]?0:1;return i}function Mn(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]%r[n]);return a}function Dn(o,t,s){const[e]=o,r=e.length,i=d.createEmptyBand(s,r);for(let a=0;a<r;a++)t&&!t[a]||(i[a]=-e[a]);return i}function _n(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t&&!t[n]||(a[n]=e[n]===r[n]?0:1);return a}function En(o,t,s){const[e,r]=o,i=e.length,a=d.createEmptyBand(s,i),n=new Uint8Array(i);for(let u=0;u<i;u++)t!=null&&!t[u]||e[u]!==0||(a[u]=r[u],n[u]=255);return{band:a,mask:n}}function ie(o,t,s){const[e,r,i]=o,a=e.length,n=d.createEmptyBand(s,a);for(let u=0;u<a;u++)t&&!t[u]||(n[u]=e[u]?r[u]:i[u]);return n}function ae(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<e;l++){const p=o[l][n];u<p&&(u=p)}a[n]=u}return a}function ue(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n]){let u=r[n];for(let l=1;l<e;l++){const p=o[l][n];u>p&&(u=p)}a[n]=u}return a}function le(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n]){let u=r[n],l=u;for(let p=1;p<e;p++){const m=o[p][n];l<m?l=m:u>m&&(u=m)}a[n]=l-u}return a}function ce(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n]){let u=0;for(let l=0;l<e;l++)u+=o[l][n];a[n]=u/e}return a}function pe(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n])for(let u=0;u<e;u++){const l=o[u];a[n]+=l[n]}return a}function he(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)if(!t||t[n]){const u=new Float32Array(e);let l=0;for(let m=0;m<e;m++){const f=o[m];l+=f[n],u[m]=f[n]}l/=e;let p=0;for(let m=0;m<e;m++)p+=(u[m]-l)**2;a[n]=Math.sqrt(p/e)}return a}function me(o,t,s){const e=o.length;if(e<2)return o[0];const r=Math.floor(e/2),[i]=o,a=i.length,n=d.createEmptyBand(s,a),u=new Float32Array(e),l=e%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let m=0;m<e;m++)u[m]=o[m][p];u.sort(),n[p]=l?u[r]:(u[r]+u[r-1])/2}return n}function Re(o,t,s){const[e,r]=o;if(r==null)return e;const i=e.length,a=d.createEmptyBand(s,i);for(let n=0;n<i;n++)t[n]&&(e[n]===r[n]?a[n]=e[n]:t[n]=0);return a}function fe(o,t,s){const e=o.length;if(e<=2)return Re(o,t,s);const r=o[0].length,i=d.createEmptyBand(s,r),a=new Map;for(let n=0;n<r;n++)if(!t||t[n]){let u;a.clear();for(let m=0;m<e;m++)u=o[m][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=0;for(const m of a.keys())l=a.get(m),l>p&&(p=l,u=m);i[n]=u}return i}function de(o,t,s){const e=o.length;if(e<=2)return Re(o,t,s);const r=o[0].length,i=d.createEmptyBand(s,r),a=new Map;for(let n=0;n<r;n++)if(!t||t[n]){let u;a.clear();for(let m=0;m<e;m++)u=o[m][n],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=o.length;for(const m of a.keys())l=a.get(m),l<p&&(p=l,u=m);i[n]=u}return i}function ge(o,t,s){const e=o.length;if(e<2)return o[0];const[r]=o,i=r.length,a=d.createEmptyBand(s,i),n=new Set;for(let u=0;u<i;u++)if(!t||t[u]){let l;n.clear();for(let p=0;p<e;p++)l=o[p][u],n.add(l);a[u]=n.size}return a}const I=new Map,wt=new Map,g=new Map,$=new Map;function zn(){I.size||(I.set(4,Math.sqrt),I.set(6,Math.acos),I.set(7,Math.asin),I.set(8,Math.atan),I.set(9,Math.atanh),I.set(10,Math.abs),I.set(21,Math.cos),I.set(22,Math.cosh),I.set(48,Math.floor),I.set(49,Math.ceil),I.set(51,Math.sin),I.set(52,Math.sinh),I.set(56,Math.tan),I.set(57,Math.tanh),I.set(59,Math.acosh),I.set(60,Math.asinh),I.set(65,Math.floor),wt.set(5,Math.pow),wt.set(61,Math.atan2),g.set(1,nn),g.set(2,on),g.set(3,an),g.set(11,fn),g.set(12,oe),g.set(12,oe),g.set(13,dn),g.set(14,gn),g.set(15,yn),g.set(16,xn),g.set(17,wn),g.set(18,vn),g.set(19,bn),g.set(20,An),g.set(23,Te),g.set(24,$n),g.set(25,Pn),g.set(26,Fn),g.set(27,In),g.set(28,Cn),g.set(29,Bn),g.set(30,un),g.set(31,jn),g.set(32,rn),g.set(33,Sn),g.set(34,kn),g.set(35,Rn),g.set(36,Nn),g.set(37,Tn),g.set(44,Mn),g.set(45,Dn),g.set(46,_n),g.set(64,ln),g.set(65,cn),g.set(76,ie),g.set(78,ie),$.set(38,fe),$.set(39,ae),$.set(40,ce),$.set(41,me),$.set(42,ue),$.set(43,de),$.set(47,le),$.set(54,he),$.set(55,pe),$.set(58,ge),$.set(66,fe),$.set(67,ae),$.set(68,ce),$.set(69,me),$.set(70,ue),$.set(71,de),$.set(72,le),$.set(73,he),$.set(74,pe),$.set(75,ge))}function Gn(o,t,s,e){let[r,i]=bt(s);const a=s.startsWith("u")||s.startsWith("s");a&&(r-=1e-5,i+=1e-5);for(let n=0;n<t.length;n++)if(t[n]){const u=o[n];isNaN(u)||u<r||u>i?t[n]=0:e[n]=a?Math.round(u):u}}function On(o,t,s={}){zn();let e=sn(o,t>=66&&t<=75);const{outputPixelType:r="f32"}=s,i=!$.has(t)||s.processAsMultiband,a=i?o[0].pixels.length:1,n=[];for(let l=0;l<a;l++){const p=$.has(t)&&!i?o.flatMap(w=>w.pixels):o.map(w=>w.pixels[l]);let m,f=!0;if(t===Ie.setNull){const w=En(p,e,r);m=w.band,e=w.mask,f=!1}else g.has(t)?m=g.get(t)(p,e,"f64"):I.has(t)?m=t===M.asin||t===M.acos||t===M.atanh?pn(p,e,"f64",t):hn(p,e,"f64",I.get(t)):wt.has(t)?m=mn(p,e,"f64",wt.get(t)):$.has(t)?m=$.get(t)(p,e,"f64"):(m=p[0],f=!1);if(f&&t!==B.isNull&&!N.has(t)){const w=d.createEmptyBand(r,m.length);e||(e=new Uint8Array(m.length).fill(255)),Gn(m,e,r,w),m=w}n.push(m)}const u=o[0];return new d({width:u.width,height:u.height,pixelType:r,mask:t===B.isNull?null:e,pixels:n})}let ot=class extends k{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,s=t[0],{bandCount:e}=s,{processAsMultiband:r}=this.functionArguments;if(t.some(p=>p.bandCount!==e))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:i,rasters:a}=this.functionArguments,n=re[i];if(!(n===999||a.length===n||a.length<=1&&n===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${n}`};this.outputPixelType=this._getOutputPixelType("f32");const u=s.clone();u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,u.bandCount=n!==999||r?e:1;const l=en(i);if(l){u.statistics=[];for(let p=0;p<u.bandCount;p++)u.statistics[p]={min:l[0],max:l[1],avg:(l[0]+l[1])/2,stddev:(l[0]+l[1])/10}}return this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&n<=3&&(i<11||i>16)}}_processPixels(t){const{pixelBlocks:s}=t;return s==null||s.some(e=>e==null)?null:On(s,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,s=re[t],e=((u=Object.keys(ee).find(l=>ee[l]===t))==null?void 0:u.toLowerCase())??"undefined",r=this.outputPixelType??"f32";let[i,a]=bt(r);const n=r.startsWith("u")||r.startsWith("s");return n&&(i-=1e-4,a+=1e-4),{imageCount:s,operationName:e,domainRange:[i,a],isOutputRounded:n}}};c([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([h({type:tn,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([h()],ot.prototype,"rasterArgumentNames",void 0),ot=c([y("esri.layers.support.rasterFunctions.LocalFunction")],ot);const Vn=ot;var kt;let H=kt=class extends S{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=$e.matchAny}get normalizedNoDataValues(){const{noDataValues:o}=this;if(!(o!=null&&o.length))return null;let t=!1;const s=o.map(e=>{if(typeof e=="number")return t=!0,[e];if(typeof e=="string"){const r=e.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return t=t||r.length>0,r.length===0?null:r}return null});return t?s:null}clone(){var o,t;return new kt({includedRanges:((o=this.includedRanges)==null?void 0:o.slice())??[],noDataValues:((t=this.noDataValues)==null?void 0:t.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([h({json:{write:!0}})],H.prototype,"includedRanges",void 0),c([h({json:{write:!0}})],H.prototype,"noDataValues",void 0),c([h()],H.prototype,"normalizedNoDataValues",null),c([h({json:{write:!0}})],H.prototype,"noDataInterpretation",void 0),H=kt=c([y("esri.layers.support.rasterFunctions.MaskFunctionArguments")],H);const Ln=H;let J=class extends k{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:s}=t;this.outputPixelType=this._getOutputPixelType(s),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:e,normalizedNoDataValues:r}=this.functionArguments;if(!(e!=null&&e.length)&&!(r!=null&&r.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let i=[];for(let n=0;n<t.bandCount;n++){const u=Ve(s,e==null?void 0:e.slice(2*n,2*n+2),r==null?void 0:r[n]);if(u==null){i=null;break}i.push(u)}this.lookups=i;const a=r!=null&&r.every(n=>{var u;return(n==null?void 0:n.length)===((u=r[0])==null?void 0:u.length)});return{success:!0,supportsGPU:(!e||e.length<=2*E)&&(!r||a&&r[0].length<=E)}}_processPixels(t){var l;const s=(l=t.pixelBlocks)==null?void 0:l[0];if(s==null)return null;const{outputPixelType:e,lookups:r}=this,{includedRanges:i,noDataInterpretation:a,normalizedNoDataValues:n}=this.functionArguments,u=a===$e.matchAll;return Le(s,{includedRanges:i,noDataValues:n,outputPixelType:e,matchAll:u,lookups:r})}_getWebGLParameters(){var i;const{includedRanges:t,normalizedNoDataValues:s}=this.functionArguments,e=new Float32Array(E);e.fill(ut),(i=s==null?void 0:s[0])!=null&&i.length&&e.set(s[0]);const r=new Float32Array(E);for(let a=0;a<r.length;a+=2)r[a]=(t==null?void 0:t[a])??-ut,r[a+1]=(t==null?void 0:t[a+1])??ut;return t&&t.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:e,includedRanges:r}}};c([h({json:{write:!0,name:"rasterFunction"}})],J.prototype,"functionName",void 0),c([h({type:Ln,json:{write:!0,name:"rasterFunctionArguments"}})],J.prototype,"functionArguments",void 0),c([h()],J.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],J.prototype,"lookups",void 0),J=c([y("esri.layers.support.rasterFunctions.MaskFunction")],J);const Un=J;var jt;let it=jt=class extends S{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:o,infraredBandID:t,scientificOutput:s}=this;return new jt({visibleBandID:o,infraredBandID:t,scientificOutput:s})}};c([h({json:{write:!0}})],it.prototype,"visibleBandID",void 0),c([h({json:{write:!0}})],it.prototype,"infraredBandID",void 0),c([h({json:{write:!0}})],it.prototype,"scientificOutput",void 0),it=jt=c([y("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],it);const Wn=it;let at=class extends k{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:s,infraredBandID:e}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const r=this.sourceRasterInfos[0],i=Math.max(s,e);if(r.bandCount<2||i>=r.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=r.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1;const[n,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:n,max:u,avg:l,stddev:p}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var a;const s=(a=t.pixelBlocks)==null?void 0:a[0];if(s==null)return null;const{visibleBandID:e,infraredBandID:r,scientificOutput:i}=this.functionArguments;return cs(s,e,r,!i)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:s,scientificOutput:e}=this.functionArguments,r=this.isInputBandIdsSwizzled?[0,1,2]:[s,t,0];return{bandIndexMat3:P(r),scaled:!e}}_getInputBandIds(t){const{visibleBandID:s,infraredBandID:e}=this.functionArguments;return[e,s,0].map(r=>t[r])}};c([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([h({type:Wn,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([h()],at.prototype,"rasterArgumentNames",void 0),at=c([y("esri.layers.support.rasterFunctions.NDVIFunction")],at);const qn=at;var Mt;let G=Mt=class extends S{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Mt({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([h({json:{write:!0}})],G.prototype,"inputRanges",void 0),c([h({json:{write:!0}})],G.prototype,"outputValues",void 0),c([h({json:{write:!0}})],G.prototype,"noDataRanges",void 0),c([h({json:{write:!0}})],G.prototype,"allowUnmatched",void 0),c([h({json:{write:!0}})],G.prototype,"isLastInputRangeInclusive",void 0),G=Mt=c([y("esri.layers.support.rasterFunctions.RemapFunctionArguments")],G);const Xn=G;let K=class extends k{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:s}=t;this.outputPixelType=this._getOutputPixelType(s),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:e}=t,{allowUnmatched:r,outputValues:i,inputRanges:a,noDataRanges:n,isLastInputRangeInclusive:u}=this.functionArguments;if(e!=null&&e.length&&(i!=null&&i.length))if(r){const l=Math.min.apply(null,[...i,e[0].min]),p=Math.max.apply(null,[...i,e[0].max]);t.statistics=[{...e[0],min:l,max:p}]}else{let l=i[0],p=l;for(let m=0;m<i.length;m++)l=l>i[m]?i[m]:l,p=p>i[m]?p:i[m];t.statistics=[{...e[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=r?null:Ue({srcPixelType:s,inputRanges:a,outputValues:i,noDataRanges:n,allowUnmatched:r,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!i||i.length<=E)&&(!n||n.length<=E)}}_processPixels(t){var p;const s=(p=t.pixelBlocks)==null?void 0:p[0];if(s==null)return null;const{lookup:e,outputPixelType:r}=this;if(e){const m=Fe(s,{lut:[e.lut],offset:e.offset,outputPixelType:r});return m!=null&&e.mask&&(m.mask=We(s.pixels[0],s.mask,e.mask,e.offset,"u8")),m}const{inputRanges:i,outputValues:a,noDataRanges:n,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return qe(s,{inputRanges:i,outputValues:a,noDataRanges:n,outputPixelType:r,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:s,isLastInputRangeInclusive:e}=this.functionArguments,r=new Float32Array(3*E),i=1e-5,a=this.functionArguments.inputRanges??[],n=this.functionArguments.outputValues??[],u=n.length;for(let p=0;p<E;p++)r[3*p]=a[2*p]??ut-1,r[3*p+1]=a[2*p+1]??ut,r[3*p+2]=n[p]??0,p<u&&(p>0&&(r[3*p]-=i),(p<u-1||!e)&&(r[3*p+1]-=i));const l=new Float32Array(2*E);return l.fill(ut),s!=null&&s.length&&l.set(s),{allowUnmatched:t,rangeMaps:r,noDataRanges:l,clampRange:bt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],K.prototype,"functionName",void 0),c([h({type:Xn,json:{write:!0,name:"rasterFunctionArguments"}})],K.prototype,"functionArguments",void 0),c([h()],K.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],K.prototype,"lookup",void 0),K=c([y("esri.layers.support.rasterFunctions.RemapFunction")],K);const Hn=K;var Dt;const Jn=new vt({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let O=Dt=class extends S{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Dt({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([Q(Jn)],O.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],O.prototype,"zFactor",void 0),c([h({type:Number,json:{name:"psPower",write:!0}})],O.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{name:"psZFactor",write:!0}})],O.prototype,"pixelSizeFactor",void 0),c([h({type:Boolean,json:{write:!0}})],O.prototype,"removeEdgeEffect",void 0),O=Dt=c([y("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],O);const Kn=O;let Y=class extends k{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var f;const s=(f=t.pixelBlocks)==null?void 0:f[0];if(s==null)return null;const{zFactor:e,slopeType:r,pixelSizePower:i,pixelSizeFactor:a}=this.functionArguments,{isGCS:n}=this,{extent:u,primaryPixelSizes:l}=t,p=l==null?void 0:l[0],m=p??(u?{x:u.width/s.width,y:u.height/s.height}:{x:1,y:1});return Xe(s,{zFactor:e,slopeType:r,pixelSizePower:i,pixelSizeFactor:a,isGCS:n,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:s,pixelSizeFactor:e,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*$t:t,slopeType:s,pixelSizeFactor:e??0,pixelSizePower:r??0}}};c([h({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),c([h({type:Kn,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),c([h()],Y.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Y.prototype,"isGCS",void 0),Y=c([y("esri.layers.support.rasterFunctions.SlopeFunction")],Y);const Yn=Y;var _t;let Z=_t=class extends S{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(o,t){if(!(o!=null&&o.length))return null;const s=[];return o.forEach(e=>{const r={min:e.min,max:e.max,avg:e.avg??e.mean,stddev:e.stddev??e.standardDeviation};s.push(r)}),s}writeStatistics(o,t,s){if(!(o!=null&&o.length))return;const e=[];o.forEach(r=>{const i={...r,mean:r.avg,standardDeviation:r.stddev};delete i.avg,delete i.stddev,e.push(i)}),t[s]=e}clone(){return new _t({statistics:D(this.statistics),histograms:D(this.histograms)})}};c([h({json:{write:!0}})],Z.prototype,"statistics",void 0),c([lt("statistics")],Z.prototype,"readStatistics",null),c([ct("statistics")],Z.prototype,"writeStatistics",null),c([h({json:{write:!0}})],Z.prototype,"histograms",void 0),Z=_t=c([y("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Z);const Zn=Z;let V=class extends k{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const s=t.clone(),{statistics:e,histograms:r}=this.functionArguments;return r&&(s.histograms=r),e&&(s.statistics=e),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){var s;return(s=t.pixelBlocks)==null?void 0:s[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],V.prototype,"functionName",void 0),c([h({type:Zn,json:{write:!0,name:"rasterFunctionArguments"}})],V.prototype,"functionArguments",void 0),c([h()],V.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],V.prototype,"indexedColormap",void 0),c([h()],V.prototype,"isNoopProcess",void 0),V=c([y("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],V);const Qn=V;var Et;const tr=new vt({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let R=Et=class extends S{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(o,t,s){o!=null&&o.length&&(Array.isArray(o[0])||(o=o.map(e=>[e.min,e.max,e.avg,e.stddev])),t[s]=o)}clone(){return new Et({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:D(this.statistics),gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([h({type:Boolean,json:{write:!0}})],R.prototype,"computeGamma",void 0),c([h({type:Boolean,json:{name:"dra",write:!0}})],R.prototype,"dynamicRangeAdjustment",void 0),c([h({type:[Number],json:{write:!0}})],R.prototype,"gamma",void 0),c([h()],R.prototype,"histograms",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"maxPercent",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"minPercent",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"numberOfStandardDeviations",void 0),c([h({type:Number,json:{name:"max",write:!0}})],R.prototype,"outputMax",void 0),c([h({type:Number,json:{name:"min",write:!0}})],R.prototype,"outputMin",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"sigmoidStrengthLevel",void 0),c([h({json:{type:[[Number]],write:!0}})],R.prototype,"statistics",void 0),c([ct("statistics")],R.prototype,"writeStatistics",null),c([Q(tr)],R.prototype,"stretchType",void 0),c([h({type:Boolean,json:{write:!0}})],R.prototype,"useGamma",void 0),R=Et=c([y("esri.layers.support.rasterFunctions.StretchFunctionArguments")],R);const er=R;let L=class extends k{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:s}=t,{functionArguments:e}=this,{dynamicRangeAdjustment:r,gamma:i,useGamma:a}=e;if(!r&&["u8","u16","s8","s16"].includes(s)){const u=At(e.toJSON(),{rasterInfo:t}),l=this._isOutputRoundingNeeded()?"round":"float";this.lookup=He({pixelType:s,...u,gamma:a?i:null,rounding:l}),this.cutOffs=u}else r||(this.cutOffs=At(e.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(s);const n=t.clone();return n.pixelType=this.outputPixelType,n.statistics=null,n.histograms=null,n.colormap=null,n.attributeTable=null,this.outputPixelType==="u8"&&(n.keyProperties.DataType="processed"),this.rasterInfo=n,{success:!0,supportsGPU:!r}}_processPixels(t){var n;const s=(n=t.pixelBlocks)==null?void 0:n[0];if(s==null)return s;const{lookup:e}=this;if(e)return Fe(s,{...e,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,i=this.cutOffs||At(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:s}),a=r.useGamma?r.gamma:null;return Je(s,{...i,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:s=255,gamma:e,useGamma:r}=this.functionArguments,i=this.rasterInfo.bandCount>=2?3:1,a=r&&e&&e.length?Ke(i,e):[1,1,1],{minCutOff:n,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};n.length===1&&(n[1]=n[2]=n[0],u[1]=u[2]=u[0]);const l=new Float32Array(i);let p;for(p=0;p<i;p++)l[p]=(s-t)/(u[p]-n[p]);const m=this._isOutputRoundingNeeded();return{bandCount:i,outMin:t,outMax:s,minCutOff:n,maxCutOff:u,factor:l,useGamma:r,gamma:r&&e?e:[1,1,1],gammaCorrection:r&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};c([h({json:{write:!0,name:"rasterFunction"}})],L.prototype,"functionName",void 0),c([h({type:er,json:{write:!0,name:"rasterFunctionArguments"}})],L.prototype,"functionArguments",void 0),c([h()],L.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],L.prototype,"lookup",void 0),c([h({json:{write:!0}})],L.prototype,"cutOffs",void 0),L=c([y("esri.layers.support.rasterFunctions.StretchFunction")],L);const sr=L,C=new Map;function nr(o,t){const{rasterFunctionArguments:s}=o;s&&(s.rasters||[s.raster]).forEach(e=>{e&&typeof e!="number"&&(typeof e=="string"?e.startsWith("http")&&(t.includes(e)||t.push(e)):"rasterFunctionArguments"in e&&nr(e,t))})}function jr(o,t){if(t=t??{},"function"in(o=D(o))&&"arguments"in o&&o.arguments&&(o=Xt(o,t)),"rasterFunction"in o)return Ce(o=zt(o),t);throw new Lt("raster-function-helper","unsupported raster function json.")}function rr(o,t){return t[0]==="rasters"&&Array.isArray(o.rasters)?o.rasters:t.map(s=>o[s])}function ye(o){return!!(o&&typeof o=="object"&&o.rasterFunction&&o.rasterFunctionArguments)}function zt(o){var r;const{rasterFunction:t,rasterFunctionArguments:s}=o,e={};for(const i in s){let a=s[i];const n=i.toLowerCase();if(n==="rasters"&&Array.isArray(a))e.rasters=a.map(u=>ye(u)?zt(u):u);else switch(ye(a)&&(a=zt(a)),n){case"dra":e.dra=a;break;case"pspower":e.psPower=a;break;case"pszfactor":e.psZFactor=a;break;case"bandids":e.bandIds=a;break;default:e[i[0].toLowerCase()+i.slice(1)]=a}}return t!=="Local"||(r=e.rasters)!=null&&r.length||(e.rasters=["$$"]),{...o,rasterFunctionArguments:e}}function Ce(o,t){var f,w;const{rasterFunction:s,rasterFunctionArguments:e}=o,r=(f=o.outputPixelType)==null?void 0:f.toLowerCase();if(s==null||!C.has(s))throw new Lt("raster-function-helper",`unsupported raster function: ${s}`);const i=C.get(s),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...o,outputPixelType:r}),{rasterArgumentNames:n}=a,u=[],l=rr(e,n),p=n[0]==="rasters",m=[];for(let v=0;v<l.length;v++){const b=l[v];let T;b==null||typeof b=="string"&&b.startsWith("$")?u.push(t==null?void 0:t.raster):typeof b=="string"?t[b]&&u.push(t[b]):typeof b!="number"&&"rasterFunction"in b&&(T=Ce(b,t),p||(a.functionArguments[n[v]]=T),u.push(T)),p&&m.push(T??b)}if(p&&(a.functionArguments.rasters=m),t){a.sourceRasters=u;const v=(w=t.raster)==null?void 0:w.url;v&&(a.mainPrimaryRasterId=v)}return a}function Be(o,t){if(!o||!t)return;let s;for(s in o){const e=o[s];e&&typeof e=="object"&&("function"in e&&e.function&&e.arguments?Be(e.arguments,t):"type"in e&&"value"in e&&e.type==="RasterFunctionVariable"&&t[e.name]!=null&&(e.value=t[e.name]))}}function Gt(o){var t,s;if(!o||typeof o!="object")return o;if(Array.isArray(o)&&o.length===0)return o.length===0?null:["number","string"].includes(typeof o[0])?o:o.map(e=>Gt(e));if("value"in o&&["number","string","boolean"].includes(typeof o.value))return o.value;if(!("type"in o))return o;switch(o.type){case"RasterStatistics":case"RecordSet":default:return o;case"Scalar":return o.value;case"AlgorithmicColorRamp":return xe(o);case"MultiPartColorRamp":return{type:"multipart",colorRamps:o.ArrayOfColorRamp.map(xe)};case"ArgumentArray":{if(!((t=o.elements)!=null&&t.length)||o.elements[0].type==="RasterStatistics")return o.elements;const e=[];for(let r=0;r<o.elements.length;r++){const i=o.elements[r],{type:a}=i;if(a)if(a==="RasterFunctionTemplate")e.push(Xt(i));else{if(a!=="RasterFunctionVariable")throw new Lt("raster-function-helper","unsupported raster function json.");{const n=i.value==null?(s=i.name)!=null&&s.toLowerCase().includes("raster")?"$$":null:Gt(i.value);e.push(n)}}else e.push(i)}return e}}}function xe(o){const t=o.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:e}=o;if(!Array.isArray(s)){const{r,g:i,b:a}=Yt({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,i,a,s.AlphaValue]}if(!Array.isArray(e)){const{r,g:i,b:a}=Yt({h:e.Hue,s:e.Saturation,v:e.Value});e=[r,i,a,e.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:s,toColor:e}}function Xt(o,t){t&&Be(o,t);const s={};return Se(o,s),s}function Se(o,t){if(!o||!t)return;const{function:s,arguments:e}=o;if(!s||!e)return;t.rasterFunction=s.type.replace("Function",""),t.outputPixelType=s.pixelType;const r={};t.rasterFunctionArguments=r;for(const i in e){const a=e[i];typeof a=="object"&&("function"in a&&a.function&&a.arguments?(t.rasterFunctionArguments[i]={},Se(a,t.rasterFunctionArguments[i])):"value"in a&&(r[i]=a.type==="RasterFunctionTemplate"?Xt(a):Gt(a.value)))}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),t.rasterFunction){case"Stretch":or(r);break;case"Colormap":ir(r);break;case"Convolution":ar(r);break;case"Mask":ur(r)}}function or(o){var t;(t=o.Statistics)!=null&&t.length&&typeof o.Statistics=="object"&&(o.Statistics=o.Statistics.map(s=>[s.min,s.max,s.mean,s.standardDeviation])),o.NumberOfStandardDeviation!=null&&(o.NumberOfStandardDeviations=o.NumberOfStandardDeviation,delete o.NumberOfStandardDeviation)}function ir(o){var t,s;((s=(t=o.ColorRamp)==null?void 0:t.type)==null?void 0:s.toLowerCase())==="randomcolorramp"&&(delete o.ColorRamp,o.ColormapName="Random"),o.ColorSchemeType===0&&delete o.ColorRamp}function ar(o){o.ConvolutionType!=null&&(o.Type=o.ConvolutionType,delete o.ConvolutionType)}function ur(o){var t;(t=o.NoDataValues)!=null&&t.length&&typeof o.NoDataValues[0]=="string"&&(o.NoDataValues=o.NoDataValues.filter(s=>s!=="").map(s=>Number(s)))}C.set("Aspect",{desc:"Aspect Function",ctor:es,rasterArgumentNames:["raster"]}),C.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Ts,rasterArgumentNames:["raster"]}),C.set("Colormap",{desc:"Colormap Function",ctor:Es,rasterArgumentNames:["raster"]}),C.set("CompositeBand",{desc:"CompositeBand Function",ctor:Gs,rasterArgumentNames:["rasters"]}),C.set("Convolution",{desc:"Convolution Function",ctor:Js,rasterArgumentNames:["raster"]}),C.set("ExtractBand",{desc:"ExtractBand Function",ctor:Qs,rasterArgumentNames:["raster"]}),C.set("Curvature",{desc:"Curvature Function",ctor:Ys,rasterArgumentNames:["raster"]}),C.set("Local",{desc:"Local Function",ctor:Vn,rasterArgumentNames:["rasters"]}),C.set("Mask",{desc:"Mask Function",ctor:Un,rasterArgumentNames:["raster"]}),C.set("NDVI",{desc:"NDVI Function",ctor:qn,rasterArgumentNames:["raster"]}),C.set("Remap",{desc:"Remap Function",ctor:Hn,rasterArgumentNames:["raster"]}),C.set("Slope",{desc:"Slope Function",ctor:Yn,rasterArgumentNames:["raster"]}),C.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Qn,rasterArgumentNames:["raster"]}),C.set("Stretch",{desc:"Stretch Function",ctor:sr,rasterArgumentNames:["raster"]});let ft=class extends Vt{get affectsPixelSize(){return!1}forwardTransform(o){return o}inverseTransform(o){return o}};c([h()],ft.prototype,"affectsPixelSize",null),c([h({json:{write:!0}})],ft.prototype,"spatialReference",void 0),ft=c([y("esri.layers.support.rasterTransforms.BaseRasterTransform")],ft);const Ht=ft;let dt=class extends Ht{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}};c([Q({GCSShiftXform:"gcs-shift"})],dt.prototype,"type",void 0),c([h()],dt.prototype,"tolerance",void 0),dt=c([y("esri.layers.support.rasterTransforms.GCSShiftTransform")],dt);const lr=dt;let xt=class extends Ht{constructor(){super(...arguments),this.type="identity"}};c([Q({IdentityXform:"identity"})],xt.prototype,"type",void 0),xt=c([y("esri.layers.support.rasterTransforms.IdentityTransform")],xt);const cr=xt;function Ot(o,t,s){const{x:e,y:r}=t;if(s<2)return{x:o[0]+e*o[2]+r*o[4],y:o[1]+e*o[3]+r*o[5]};if(s===2){const f=e*e,w=r*r,v=e*r;return{x:o[0]+e*o[2]+r*o[4]+f*o[6]+v*o[8]+w*o[10],y:o[1]+e*o[3]+r*o[5]+f*o[7]+v*o[9]+w*o[11]}}const i=e*e,a=r*r,n=e*r,u=i*e,l=i*r,p=e*a,m=r*a;return{x:o[0]+e*o[2]+r*o[4]+i*o[6]+n*o[8]+a*o[10]+u*o[12]+l*o[14]+p*o[16]+m*o[18],y:o[1]+e*o[3]+r*o[5]+i*o[7]+n*o[9]+a*o[11]+u*o[13]+l*o[15]+p*o[17]+m*o[19]}}function we(o,t,s){const{xmin:e,ymin:r,xmax:i,ymax:a,spatialReference:n}=t;let u=[];if(s<2)u.push({x:e,y:a}),u.push({x:i,y:a}),u.push({x:e,y:r}),u.push({x:i,y:r});else{let m=10;for(let f=0;f<m;f++)u.push({x:e,y:r+(a-r)*f/(m-1)}),u.push({x:i,y:r+(a-r)*f/(m-1)});m=8;for(let f=1;f<=m;f++)u.push({x:e+(i-e)*f/m,y:r}),u.push({x:e+(i-e)*f/m,y:a})}u=u.map(m=>Ot(o,m,s));const l=u.map(m=>m.x),p=u.map(m=>m.y);return new je({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:n})}function pr(o){const[t,s,e,r,i,a]=o,n=e*a-i*r,u=i*r-e*a;return[(i*s-t*a)/n,(e*s-t*r)/u,a/n,r/u,-i/n,-e/u]}let j=class extends Ht{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(o,t){const{coeffX:s,coeffY:e}=t;if(!(s!=null&&s.length)||!(e!=null&&e.length)||s.length!==e.length)return null;const r=[];for(let i=0;i<s.length;i++)r.push(s[i]),r.push(e[i]);return r}writeForwardCoefficients(o,t,s){const e=[],r=[];for(let i=0;i<(o==null?void 0:o.length);i++)i%2==0?e.push(o[i]):r.push(o[i]);t.coeffX=e,t.coeffY=r}get inverseCoefficients(){let o=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!o&&t&&this.polynomialOrder<2&&(o=pr(t)),o}set inverseCoefficients(o){this._set("inverseCoefficients",o)}readInverseCoefficients(o,t){const{inverseCoeffX:s,inverseCoeffY:e}=t;if(!(s!=null&&s.length)||!(e!=null&&e.length)||s.length!==e.length)return null;const r=[];for(let i=0;i<s.length;i++)r.push(s[i]),r.push(e[i]);return r}writeInverseCoefficients(o,t,s){const e=[],r=[];for(let i=0;i<(o==null?void 0:o.length);i++)i%2==0?e.push(o[i]):r.push(o[i]);t.inverseCoeffX=e,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(o){if(o.type==="point"){const t=Ot(this.forwardCoefficients,o,this.polynomialOrder);return new Zt({x:t.x,y:t.y,spatialReference:o.spatialReference})}return we(this.forwardCoefficients,o,this.polynomialOrder)}inverseTransform(o){if(o.type==="point"){const t=Ot(this.inverseCoefficients,o,this.polynomialOrder);return new Zt({x:t.x,y:t.y,spatialReference:o.spatialReference})}return we(this.inverseCoefficients,o,this.polynomialOrder)}};c([h({json:{write:!0}})],j.prototype,"polynomialOrder",void 0),c([h()],j.prototype,"forwardCoefficients",void 0),c([lt("forwardCoefficients",["coeffX","coeffY"])],j.prototype,"readForwardCoefficients",null),c([ct("forwardCoefficients")],j.prototype,"writeForwardCoefficients",null),c([h({json:{write:!0}})],j.prototype,"inverseCoefficients",null),c([lt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],j.prototype,"readInverseCoefficients",null),c([ct("inverseCoefficients")],j.prototype,"writeInverseCoefficients",null),c([h()],j.prototype,"affectsPixelSize",null),c([Q({PolynomialXform:"polynomial"})],j.prototype,"type",void 0),j=c([y("esri.layers.support.rasterTransforms.PolynomialTransform")],j);const hr=j,ke={GCSShiftXform:lr,IdentityXform:cr,PolynomialXform:hr},mr=Object.keys(ke);function _r(o){const t=o==null?void 0:o.type;return!o||mr.includes(t)}function Er(o){if(!(o==null?void 0:o.type))return null;const s=ke[o==null?void 0:o.type];if(s){const e=new s;return e.read(o),e}return null}export{nr as C,jr as N,lr as c,_r as f,Er as i,hr as m};
