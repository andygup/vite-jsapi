import{d2 as $,f as w,bq as H,bl as W,dB as Z,d4 as j,J,dz as M,aR as c,m,s as B,a as Q,dA as tt}from"./index-d00ae83f.js";import{o as O,h as K,P as N,B as z,C as P,G as L,H as F,K as g,L as k,R as v,W as et,O as st,N as it,a0 as rt}from"./definitions-e9823d3c.js";import{r as nt}from"./TiledDisplayObject-2725afce.js";import{n as ht,l as at,f as A}from"./visualVariablesUtils-ed8b15c7.js";import{W as p,K as dt}from"./color-d08f78cf.js";import{D as Y,L as I,Y as ot,X as ut,G as _t}from"./enums-74e97557.js";import{N as lt}from"./VertexArrayObject-4fb3c3fa.js";import{a as V,u as G}from"./TextureDescriptor-bc67ea5f.js";class ct{acquire(t){return{refCount:1,version:-1,labelMat2d:$(),tileMat3:w(),dvs:w()}}release(t){}}class f extends nt{constructor(t,e,s,i){super(t,e,s,i,O,O)}destroy(){super.destroy(),this._transforms&&f.TransformCache.release(this.key.hash)}setTransform(t){const e=this.resolution/t.resolution,s=this.transforms.tileMat3,[i,r]=t.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*e,a=this.height/this.rangeY*e;H(s,h,0,0,0,a,0,i,r,1),W(this.transforms.dvs,t.displayViewMat3,s);const d=this.transforms.labelMat2d,o=window.devicePixelRatio,u=Z($(),h*o,0,0,a*o,i*o,r*o);j(d,t.viewMat2d,u)}_createTransforms(){return f.TransformCache.acquire(this.key.hash)}}f.TransformCache=new ct;const R=2147483647;class E{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/n.BYTES_PER_RECORD-e){const i=new n(new Int32Array(t,e*n.BYTES_PER_RECORD,s*n.ELEMENTS_PER_RECORD));return new E(i)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const s=this._cursor.size();if(e<s)return this._cursor._index=e,!0;e-=s,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var i;const t=new E((i=this._head)==null?void 0:i.copy());if(!t._head)return t;let e=t._head,s=t._head._link;for(;s;)e._link=s.copy(),e=s,s=e._link;return t}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(s!=null&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}E.ELEMENTS_PER_RECORD=K,E.BYTES_PER_RECORD=E.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class n{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new n(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,s=this.lookup(t);if(s)for(this.id=R,++this._deletedCount;this.next()&&this.id===t;)this.id=R,++this._deletedCount;return this._index=e,s}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(this._offsets.instance==null){this._offsets.instance=new Map;const s=this.copy();s._index=-1;let i=0;for(;s.next();)s.id!==i&&(this._offsets.instance.set(s.id,s._index),i=s.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==R||(this._index=e,!1)}get id(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*n.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*n.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*n.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/n.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===R;);return this._index<this.size()}peekId(){const t=(this._index+1)*n.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new n(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}n.ELEMENTS_PER_RECORD=K,n.BYTES_PER_RECORD=n.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;const b=J.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),y=ht(at,b);class U{constructor(t,e,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:h}=t,a=p(r);this.shared=s,this.pixelType=r,this.size=e,this.textureOnly=h,h||(this.data=new a(i)),this._resetRange()}destroy(){c(this._texture,t=>t.dispose());for(const t in this._fbos)c(this._fbos[t],e=>{t==="0"&&e.detachColorTexture(),e.dispose()}),this._fbos[t]=null;this._texture=null}get _textureDesc(){const t=new V;return t.wrapMode=Y.CLAMP_TO_EDGE,t.samplingMode=I.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,s){const i=A(t),r=this.data,h=i*this.texelSize+e;!r||h>=r.length||(r[h]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(t,e){if(this.data==null)return null;const s=A(t)*this.texelSize+e;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(this._fbos[e]==null){const s={colorTarget:ot.TEXTURE,depthStencilTarget:ut.NONE},i=e===0?this.getTexture(t):this._textureDesc;this._fbos[e]=new lt(t,s,i)}return this._fbos[e]}get locked(){return!(this.pixelType!==_t.UNSIGNED_BYTE||!this.shared||this.textureOnly||!m("esri-atomics")||!this.data)&&Atomics.load(this.data,0)===1}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,e){if(!this.locked){try{const s=this.dirtyStart,i=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=this.data.buffer,h=this.getTexture(t),a=4,d=(s-s%this.size)/this.size,o=(i-i%this.size)/this.size,u=d,_=this.size,l=o,x=d*this.size*a,T=(_+l*this.size)*a-x,C=p(this.pixelType),q=new C(r,x*C.BYTES_PER_ELEMENT,T),X=this.size,D=l-u+1;if(D>this.size)return void b.error(new B("mapview-webgl","Out-of-bounds index when updating AttributeData"));h.updateData(0,0,u,X,D,q)}catch{}e()}}update(t){const{data:e,start:s,end:i}=t;if(e!=null&&this.data!=null){const r=this.data,h=s*this.texelSize;for(let a=0;a<e.length;a++){const d=1<<a%this.texelSize;t.layout&d&&(r[h+a]=e[a])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(t,e){const s=this.size;if(this.size=e,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=p(this.pixelType);this.destroy(),this.data=new i(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new G(t,this._textureDesc,this.data??void 0);if(this._lastTexture!=null&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,h=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(t),d=dt(r),o=new(p(r))(new ArrayBuffer(s*i*d*this.texelSize)),u=t.getBoundFramebufferObject(),{x:_,y:l,width:x,height:T}=t.getViewport();t.bindFramebuffer(a),a.readPixels(0,0,s,i,h,r,o),e.updateData(0,0,0,2*s,i/2,o),t.setViewport(_,l,x,T),t.bindFramebuffer(u)}return this.destroy(),this._texture=e,this._texture}}class yt{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:s,size:i}=t;if(this.shared=s,this.size=i,y("Initializing AttributeStoreView",t),this._data==null)this._data=M(e,r=>new U(r,i,s));else for(let r=0;r<this._data.length;r++){const h=this._data[r],a=e[r];a!=null&&(h==null?this._data[r]=new U(a,i,s):h.resize(a,i))}this._initialized=!0}destroy(){c(this._data,t=>M(t,e=>e.destroy())),c(this._defaultTexture,t=>t.dispose())}isEmpty(){return this._data==null}isUpdating(){const t=this._pendingAttributeUpdate!=null,e=t;return m("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${e}
  -> hasPendingUpdate ${t}`),e}getBlock(t){return this._data==null?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,N,0,0)}getData(t,e,s,i){if(!this._data)return 0;const r=this._data[e];if(r==null)return 0;const h=r.getData(t,s);return h??i}setData(t,e,s,i){this._data[e].setData(t,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(t){if(this._pendingAttributeUpdate)return void b.error(new B("mapview-webgl","Tried to update attribute data with a pending update"));const e=Q();return y("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},this._onUpdate(),e.promise}update(){if(this._initialized&&this._pendingAttributeUpdate!=null){m("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:t,resolver:e}=this._pendingAttributeUpdate,s=this._data;for(let i=0;i<t.blocks.length;i++){const r=t.blocks[i],h=s[i];c(h,a=>c(r,d=>{y(`Updating block ${i}`,d),a.update(d)}))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){var r,h,a,d,o,u,_;const s=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(s,z),void(e&&(t.bindTexture(s,P),t.bindTexture(s,L),t.bindTexture(s,F),t.bindTexture(s,g),t.bindTexture(s,k),t.bindTexture(s,v)));const i=this._data;this._locked&&!this._forceNextUpload||(tt(i,l=>l.updateTexture(t,()=>this._onUpdate())),this._forceNextUpload=!1),t.bindTexture(((r=i[et])==null?void 0:r.getTexture(t))??s,z),e&&(t.bindTexture(((h=i[st])==null?void 0:h.getTexture(t))??s,v),t.bindTexture(((a=i[it])==null?void 0:a.getTexture(t))??s,P),t.bindTexture(((d=i[N])==null?void 0:d.getTexture(t))??s,L),t.bindTexture(((o=i[rt])==null?void 0:o.getTexture(t))??s,F),t.bindTexture(((u=i[g])==null?void 0:u.getTexture(t))??s,g),t.bindTexture(((_=i[k])==null?void 0:_.getTexture(t))??s,k))}_getDefaultTexture(t){if(this._defaultTexture==null){const e=new V;e.wrapMode=Y.CLAMP_TO_EDGE,e.samplingMode=I.NEAREST,e.width=1,e.height=1,this._defaultTexture=new G(t,e,new Uint8Array(4))}return this._defaultTexture}}export{f as m,E as s,yt as v};
