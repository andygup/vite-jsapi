import{ae as m,ai as d,D as u,E as y,m as h}from"./index-6e11f365.js";import{d as b}from"./FeatureEffect-d53e9064.js";import c from"./FeatureLayerView2D-a3db1f2c.js";import"./jsonUtils-ec3bb06d.js";import"./parser-2c9af7f8.js";import"./Query-1f986dc6.js";import"./Field-c6730f31.js";import"./fieldType-4933b961.js";import"./Container-491c9a70.js";import"./definitions-e9823d3c.js";import"./enums-74e97557.js";import"./TextureDescriptor-6f1ebf7c.js";import"./FeatureSet-6fca0780.js";import"./LayerView-05a5b0a6.js";import"./schemaUtils-5636eb98.js";import"./sql-662efd73.js";import"./diffUtils-d7f96f30.js";import"./labelingInfo-ac2c5970.js";import"./labelUtils-01d56de2.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-c398a7e6.js";import"./color-6aa54378.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./utils-3c7bffcd.js";import"./MaterialKey-d4a29da3.js";import"./heatmapUtils-82abfb64.js";import"./vec4f64-aa64c7e9.js";import"./visualVariablesUtils-c6c91d03.js";import"./ExpandedCIM-a7fa0210.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-4a16b4e7.js";import"./floatRGBA-4dfc3dfe.js";import"./featureFlags-47ea12bc.js";import"./clusterUtils-0648c051.js";import"./SizeVariable-5b39cf61.js";import"./colorRamps-4404e80a.js";import"./LegendOptions-1566f85b.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-9743f155.js";import"./util-6683e0c8.js";import"./commonProperties-9de20a68.js";import"./ElevationInfo-4951b744.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-1b9fbfb3.js";import"./RefreshableLayerView-88e5519a.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let p=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};p=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const ue=p;export{ue as default};
