import{h as G,s as P,t as g,r as w,b as ee,a as te}from"./typedArrayUtil-2bcf3cee.js";import{a as F}from"./Error-bd05b442.js";import{y as M}from"./string-3d0ebcd3.js";import{h as ie,r as se}from"./MemCache-5bd66e9c.js";import{$ as q}from"./unitUtils-43365914.js";import{a as W,w as re,C as ae,f as ne}from"./aaBoundingBox-6fbd5972.js";import{o as Z,u as oe}from"./aaBoundingRect-45a7fe45.js";import{c as ue}from"./Polyline-c56eca9b.js";import{v as N,u as ce,y as he}from"./jsonUtils-8bd548d9.js";import{v as H}from"./normalizeUtils-d322ac85.js";import{E as I,I as L}from"./Extent-7f29a1bb.js";import{n as le}from"./featureConversionUtils-7c9ea581.js";import{A as m,q as fe,l as me,c as b,o as de,a as ye,f as pe}from"./QueryEngineResult-5fac197b.js";import{g as v,f as C,M as ge}from"./projectionSupport-1035a977.js";import{t as xe}from"./QueryEngineCapabilities-42e44ded.js";import{t as _e,v as T,n as we,I as U,P as V}from"./timeSupport-21b6beab.js";import{E as j,F as E,z as D,v as Se}from"./utils-f95dbca3.js";import{r as Fe}from"./FieldsIndex-394de0a1.js";import{i as Re}from"./arcadeOnDemand-87969052.js";import{F as J}from"./Scheduler-74975675.js";function Qe(B){return B.every(e=>e.statisticType!=="exceedslimit")}const R="feature-store:unsupported-query",Ie=new ie(2e6);let Ee=0;class De{constructor(e){this.capabilities={query:xe},this.geometryType=e.geometryType,this.hasM=e.hasM,this.hasZ=e.hasZ,this.objectIdField=e.objectIdField,this.spatialReference=e.spatialReference,this.definitionExpression=e.definitionExpression,this.featureStore=e.featureStore,this.aggregateAdapter=e.aggregateAdapter,this._changeHandle=this.featureStore.events.on("changed",()=>this.clearCache()),this.timeInfo=e.timeInfo,e.cacheSpatialQueries&&(this._geometryQueryCache=new se(Ee+++"$$",Ie)),this.fieldsIndex=new Fe(e.fields),e.scheduler&&e.priority&&(this._frameTask=e.scheduler.registerTask(e.priority))}destroy(){this._frameTask=G(this._frameTask),this.clearCache(),P(this._geometryQueryCache),this._changeHandle=G(this._changeHandle),P(this.fieldsIndex)}get featureAdapter(){return this.featureStore.featureAdapter}get fullExtent(){const e=this.featureStore.fullBounds;return g(e)?null:{xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3],spatialReference:j(this.spatialReference)}}get timeExtent(){return this.timeInfo?(this._timeExtent||(this._timeExtent=_e(this.timeInfo,this.featureStore)),this._timeExtent):null}clearCache(){var e;(e=this._geometryQueryCache)==null||e.clear(),this._allItems=null,this._timeExtent=null}async executeQuery(e,t){try{return(await this._executeQuery(e,{},t)).createQueryResponse()}catch(i){if(i!==E)throw i;return new m([],e,this).createQueryResponse()}}async executeQueryForCount(e={},t){try{return(await this._executeQuery(e,{returnGeometry:!1,returnCentroid:!1,outSR:null},t)).createQueryResponseForCount()}catch(i){if(i!==E)throw i;return 0}}async executeQueryForExtent(e,t){const i=e.outSR;try{const s=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),r=s.size;if(!r)return{count:0,extent:null};re(x,ae),this.featureStore.forEachBounds(s.items,o=>ne(x,o),Ae);const n={xmin:x[0],ymin:x[1],xmax:x[3],ymax:x[4],spatialReference:j(this.spatialReference)};this.hasZ&&isFinite(x[2])&&isFinite(x[5])&&(n.zmin=x[2],n.zmax=x[5]);const a=v(n,s.spatialReference,i);if(a.spatialReference=j(i||this.spatialReference),a.xmax-a.xmin==0){const o=q(a.spatialReference);a.xmin-=o,a.xmax+=o}if(a.ymax-a.ymin==0){const o=q(a.spatialReference);a.ymin-=o,a.ymax+=o}if(this.hasZ&&a.zmin!=null&&a.zmax!=null&&a.zmax-a.zmin==0){const o=q(a.spatialReference);a.zmin-=o,a.zmax+=o}return{count:r,extent:a}}catch(s){if(s===E)return{count:0,extent:null};throw s}}async executeQueryForIds(e,t){return this.executeQueryForIdSet(e,t).then(i=>Array.from(i))}async executeQueryForIdSet(e,t){try{const i=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),s=i.items,r=new Set;return await this._reschedule(()=>{for(const n of s)r.add(i.featureAdapter.getObjectId(n))},t),r}catch(i){if(i===E)return new Set;throw i}}async executeQueryForSnapping(e,t){const{point:i,distance:s,types:r}=e;if(r===fe.NONE)return{candidates:[]};const n=await this._reschedule(()=>this._checkQuerySupport(e.query),t),a=!I(i.spatialReference,this.spatialReference);a&&await C(i.spatialReference,this.spatialReference);const o=typeof s=="number"?s:s.x,h=typeof s=="number"?s:s.y,c={xmin:i.x-o,xmax:i.x+o,ymin:i.y-h,ymax:i.y+h,spatialReference:i.spatialReference},u=a?v(c,this.spatialReference):c;if(!u)return{candidates:[]};const d=(await H(N(i),null,{signal:t}))[0],y=(await H(N(u),null,{signal:t}))[0];if(g(d)||g(y))return{candidates:[]};const _=new m(this._searchFeatures(this._getQueryBBoxes(y.toJSON())),n,this);await this._reschedule(()=>this._executeObjectIdsQuery(_),t),await this._reschedule(()=>this._executeTimeQuery(_),t),await this._reschedule(()=>this._executeAttributesQuery(_),t);const l=d.toJSON(),S=a?v(l,this.spatialReference):l,p=a?Math.max(u.xmax-u.xmin,u.ymax-u.ymin)/2:s;return _.createSnappingResponse({...e,point:S,distance:p},i.spatialReference)}async executeQueryForLatestObservations(e,t){if(!this.timeInfo||!this.timeInfo.trackIdField)throw new F(R,"Missing timeInfo or timeInfo.trackIdField",{query:e,timeInfo:this.timeInfo});try{const i=await this._executeQuery(e,{},t);return await this._reschedule(()=>this._filterLatest(i),t),i.createQueryResponse()}catch(i){if(i!==E)throw i;return new m([],e,this).createQueryResponse()}}async executeQueryForSummaryStatistics(e={},t,i){const{field:s,normalizationField:r,valueExpression:n}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:n},i)).createSummaryStatisticsResponse(t)}async executeQueryForUniqueValues(e={},t,i){const{field:s,field2:r,field3:n,valueExpression:a}=t;return(await this._getQueryEngineResultForStats(e,{field:s,field2:r,field3:n,valueExpression:a},i)).createUniqueValuesResponse(t)}async executeQueryForClassBreaks(e={},t,i){const{field:s,normalizationField:r,valueExpression:n}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:n},i)).createClassBreaksResponse(t)}async executeQueryForHistogram(e={},t,i){const{field:s,normalizationField:r,valueExpression:n}=t;return(await this._getQueryEngineResultForStats(e,{field:s,normalizationField:r,valueExpression:n},i)).createHistogramResponse(t)}async _schedule(e,t){return w(this._frameTask)?this._frameTask.schedule(e,t):e(J)}async _reschedule(e,t){return w(this._frameTask)?this._frameTask.reschedule(e,t):e(J)}_getAll(e){return g(this._allItems)&&(this._allItems=this.featureStore.toArray()),new m(this._allItems,e,this)}async _executeQuery(e,t,i){e=M(e),e=await this._schedule(()=>D(e,this.definitionExpression,this.spatialReference),i),e=await this._reschedule(()=>this._checkQuerySupport(e),i),e={...e,...t};const s=await this._reschedule(()=>this._executeSceneFilterQuery(e,i),i),r=await this._reschedule(()=>this._executeGeometryQuery(e,s,i),i);return await this._reschedule(()=>this._executeAggregateIdsQuery(r),i),await this._reschedule(()=>this._executeObjectIdsQuery(r),i),await this._reschedule(()=>this._executeTimeQuery(r),i),await this._reschedule(()=>this._executeAttributesQuery(r),i),r}async _executeSceneFilterQuery(e,t){if(g(e.sceneFilter))return null;const{outSR:i,returnGeometry:s,returnCentroid:r}=e,n=this.featureStore.featureSpatialReference,a=e.sceneFilter.geometry,o=g(n)||I(n,a.spatialReference)?a:v(a,n);if(!o)return null;const h=s||r,c=L(i)&&!I(this.spatialReference,i)&&h?async l=>this._project(l,i):l=>l,u=this.featureAdapter,d=this._searchFeatures(this._getQueryBBoxes(o));if(e.sceneFilter.spatialRelationship==="disjoint"){if(!d.length)return null;const l=new Set;for(const A of d)l.add(u.getObjectId(A));const S=await this._reschedule(()=>this.featureStore.toArray(),t),p=await this._reschedule(async()=>{const A=await T("esriSpatialRelDisjoint",o,this.geometryType,this.hasZ,this.hasM),k=Q=>!l.has(u.getObjectId(Q))||A(u.getGeometry(Q)),f=await this._runSpatialFilter(S,k,t);return new m(f,e,this)},t);return c(p)}if(!d.length)return new m([],e,this);if(this._canExecuteSinglePass(o,e))return c(new m(d,e,this));const y=await T("esriSpatialRelContains",o,this.geometryType,this.hasZ,this.hasM),_=await this._runSpatialFilter(d,l=>y(u.getGeometry(l)),t);return c(new m(_,e,this))}async _executeGeometryQuery(e,t,i){if(w(t)&&t.items.length===0)return t;e=w(t)?t.query:e;const{geometry:s,outSR:r,spatialRel:n,returnGeometry:a,returnCentroid:o}=e,h=this.featureStore.featureSpatialReference,c=!s||g(h)||I(h,s.spatialReference)?s:v(s,h),u=a||o,d=L(r)&&!I(this.spatialReference,r),y=this._geometryQueryCache&&g(t)?JSON.stringify(d&&u?{originalFilterGeometry:s,spatialRelationship:n,outSpatialReference:r}:{originalFilterGeometry:s,spatialRelationship:n}):null,_=y?this._geometryQueryCache.get(y):null;if(w(_))return new m(_,e,this);const l=async f=>(d&&u&&await this._project(f,r),y&&this._geometryQueryCache.put(y,f.items,f.items.length+1),f);if(!c)return l(w(t)?t:this._getAll(e));const S=this.featureAdapter;let p=this._searchFeatures(this._getQueryBBoxes(s));if(n==="esriSpatialRelDisjoint"){if(!p.length)return l(w(t)?t:this._getAll(e));const f=new Set;for(const $ of p)f.add(S.getObjectId($));const Q=w(t)?t.items:await this._reschedule(()=>this.featureStore.toArray(),i),K=await this._reschedule(async()=>{const $=await T(n,c,this.geometryType,this.hasZ,this.hasM),X=O=>!f.has(S.getObjectId(O))||$(S.getGeometry(O)),Y=await this._runSpatialFilter(Q,X,i);return new m(Y,e,this)},i);return l(K)}if(w(t)){const f=new te;p=p.filter(Q=>ee(t.items,Q,t.items.length,f)>=0)}if(!p.length){const f=new m([],e,this);return y&&this._geometryQueryCache.put(y,f.items,1),f}if(this._canExecuteSinglePass(c,e))return l(new m(p,e,this));const A=await T(n,c,this.geometryType,this.hasZ,this.hasM),k=await this._runSpatialFilter(p,f=>A(S.getGeometry(f)),i);return l(new m(k,e,this))}_executeAggregateIdsQuery(e){if(e.items.length===0||!e.query.aggregateIds||!e.query.aggregateIds.length||g(this.aggregateAdapter))return;const t=new Set;for(const s of e.query.aggregateIds)this.aggregateAdapter.getFeatureObjectIds(s).forEach(r=>t.add(r));const i=this.featureAdapter.getObjectId;e.items=e.items.filter(s=>t.has(i(s)))}_executeObjectIdsQuery(e){if(e.items.length===0||!e.query.objectIds||!e.query.objectIds.length)return;const t=new Set(e.query.objectIds),i=this.featureAdapter.getObjectId;e.items=e.items.filter(s=>t.has(i(s)))}_executeTimeQuery(e){if(e.items.length===0)return;const t=we(this.timeInfo,e.query.timeExtent,this.featureAdapter);g(t)||(e.items=e.items.filter(t))}_executeAttributesQuery(e){if(e.items.length===0)return;const t=me(e.query.where,this.fieldsIndex);if(t){if(!t.isStandardized)throw new TypeError("Where clause is not standardized");e.items=e.items.filter(i=>t.testFeature(i,this.featureAdapter))}}async _runSpatialFilter(e,t,i){if(!t)return e;if(g(this._frameTask))return e.filter(a=>t(a));let s=0;const r=new Array,n=async a=>{for(;s<e.length;){const o=e[s++];t(o)&&(r.push(o),a.madeProgress()),a.done&&await this._reschedule(h=>n(h),i)}};return this._reschedule(a=>n(a),i).then(()=>r)}_filterLatest(e){const{trackIdField:t,startTimeField:i,endTimeField:s}=this.timeInfo,r=s||i,n=new Map,a=this.featureAdapter.getAttribute;for(const o of e.items){const h=a(o,t),c=a(o,r),u=n.get(h);(!u||c>a(u,r))&&n.set(h,o)}e.items=Array.from(n.values())}_canExecuteSinglePass(e,t){const{spatialRel:i}=t;return U(e)&&(i==="esriSpatialRelEnvelopeIntersects"||this.geometryType==="esriGeometryPoint"&&(i==="esriSpatialRelIntersects"||i==="esriSpatialRelContains"||i==="esriSpatialRelWithin"))}async _project(e,t){if(!t||I(this.spatialReference,t))return e;const i=this.featureAdapter,s=await ge(e.items.map(r=>Se(this.geometryType,this.hasZ,this.hasM,i.getGeometry(r))),this.spatialReference,t);return e.items=s.map((r,n)=>i.cloneWithGeometry(e.items[n],le(r,this.hasZ,this.hasM))),e}_getQueryBBoxes(e){if(U(e)){if(ce(e))return[Z(e.xmin,e.ymin,e.xmax,e.ymax)];if(he(e))return e.rings.map(t=>Z(Math.min(t[0][0],t[2][0]),Math.min(t[0][1],t[2][1]),Math.max(t[0][0],t[2][0]),Math.max(t[0][1],t[2][1])))}return[ue(oe(),e)]}_searchFeatures(e){for(const i of e)this.featureStore.forEachInBounds(i,s=>z.add(s));const t=Array.from(z.values());return z.clear(),t}async _checkStatisticsSupport(e,t){if(e.distance<0||e.geometryPrecision!=null||e.multipatchOption||e.pixelSize||e.relationParam||e.text||e.outStatistics||e.groupByFieldsForStatistics||e.having||e.orderByFields)throw new F(R,"Unsupported query options",{query:e});return this._checkAttributesQuerySupport(e),Promise.all([this._checkStatisticsParamsSupport(t),V(e,this.geometryType,this.spatialReference),C(this.spatialReference,e.outSR)]).then(()=>e)}async _checkStatisticsParamsSupport(e){let t=[];if(e.valueExpression){const{arcadeUtils:i}=await Re();t=i.extractFieldNames(e.valueExpression)}if(e.field&&t.push(e.field),e.field2&&t.push(e.field2),e.field3&&t.push(e.field3),e.normalizationField&&t.push(e.normalizationField),!t.length)throw new F(R,"params should have at least a field or valueExpression",{params:e});b(this.fieldsIndex,t,"params contains missing fields")}async _checkQuerySupport(e){if(e.distance<0||e.geometryPrecision!=null||e.multipatchOption||e.pixelSize||e.relationParam||e.text)throw new F(R,"Unsupported query options",{query:e});return this._checkAttributesQuerySupport(e),this._checkStatisticsQuerySupport(e),Promise.all([V(e,this.geometryType,this.spatialReference),C(this.spatialReference,e.outSR)]).then(()=>e)}_checkAttributesQuerySupport(e){const{outFields:t,orderByFields:i,returnDistinctValues:s,outStatistics:r}=e,n=r?r.map(a=>a.outStatisticFieldName&&a.outStatisticFieldName.toLowerCase()).filter(Boolean):[];if(i&&i.length>0){const a=" asc",o=" desc",h=i.map(c=>{const u=c.toLowerCase();return u.includes(a)?u.split(a)[0]:u.includes(o)?u.split(o)[0]:c}).filter(c=>!n.includes(c));b(this.fieldsIndex,h,"orderByFields contains missing fields")}if(t&&t.length>0)b(this.fieldsIndex,t,"outFields contains missing fields");else if(s)throw new F(R,"outFields should be specified for returnDistinctValues",{query:e});de(this.fieldsIndex,e.where)}_checkStatisticsQuerySupport(e){const{outStatistics:t,groupByFieldsForStatistics:i,having:s}=e,r=i&&i.length,n=t&&t.length;if(s){if(!r||!n)throw new F(R,"outStatistics and groupByFieldsForStatistics should be specified with having",{query:e});ye(this.fieldsIndex,s,t)}if(n){if(!Qe(t))return;const a=t.map(o=>o.onStatisticField).filter(Boolean);b(this.fieldsIndex,a,"onStatisticFields contains missing fields"),r&&b(this.fieldsIndex,i,"groupByFieldsForStatistics contains missing fields");for(const o of t){const{onStatisticField:h,statisticType:c}=o;if((c==="percentile_disc"||c==="percentile_cont")&&"statisticParameters"in o){const{statisticParameters:u}=o;if(!u)throw new F(R,"statisticParamters should be set for percentile type",{definition:o,query:e})}else if(c!=="count"&&h&&pe(h,this.fieldsIndex))throw new F(R,"outStatistics contains non-numeric fields",{definition:o,query:e})}}}async _getQueryEngineResultForStats(e,t,i){e=M(e);try{e=await this._schedule(()=>D(e,this.definitionExpression,this.spatialReference),i),e=await this._reschedule(()=>this._checkStatisticsSupport(e,t),i);const s=await this._reschedule(()=>this._executeSceneFilterQuery(e,i),i),r=await this._reschedule(()=>this._executeGeometryQuery(e,s,i),i);return await this._reschedule(()=>this._executeAggregateIdsQuery(r),i),await this._reschedule(()=>this._executeObjectIdsQuery(r),i),await this._reschedule(()=>this._executeTimeQuery(r),i),await this._reschedule(()=>this._executeAttributesQuery(r),i),r}catch(s){if(s!==E)throw s;return new m([],e,this)}}}const Ae=W(),x=W(),z=new Set;export{De as Y};
