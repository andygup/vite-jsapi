import{ae as r,af as o,ai as n,b5 as l,i as d,L as u,A as c}from"./index-06bb4acc.js";import{B as y}from"./BitmapContainer-afecf9b0.js";import{L as f,a as w}from"./LayerView-73b5e8d9.js";import{G as x}from"./GraphicsView2D-4501b77e.js";import{H as V}from"./HighlightGraphicContainer-e72783cd.js";import{E as H}from"./ExportStrategy-4132d4d5.js";import{c as I}from"./commonProperties-71483d7b.js";import{E as _}from"./ExportImageParameters-068673c5.js";import{R as v}from"./RefreshableLayerView-f997a78e.js";import{M as L,c as E}from"./drapedUtils-78a8276d.js";import"./WGLContainer-895f473b.js";import"./definitions-3f56d206.js";import"./VertexArrayObject-5e83453c.js";import"./TextureDescriptor-767677c5.js";import"./enums-08489827.js";import"./VertexElementDescriptor-24e04d97.js";import"./color-8e5f8af9.js";import"./enums-eb6e4255.js";import"./ProgramTemplate-26d0268f.js";import"./MaterialKey-434335b3.js";import"./utils-0743b8a6.js";import"./heatmapUtils-97c04762.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./StyleDefinition-edaaf36e.js";import"./config-c06e4a6d.js";import"./GeometryUtils-0ab64fac.js";import"./Container-1a24548e.js";import"./parser-00347674.js";import"./_commonjsHelpers-725317a4.js";import"./earcut-db592379.js";import"./featureConversionUtils-bc1b4ef3.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./ExpandedCIM-027963af.js";import"./BidiEngine-cdaf024a.js";import"./GeometryUtils-26dde58c.js";import"./Rect-df8ea165.js";import"./quantizationUtils-ba99c963.js";import"./floatRGBA-5c78bdf6.js";import"./normalizeUtilsSync-f82a5c04.js";import"./normalizeUtilsCommon-536b62ea.js";import"./projectionSupport-3befedca.js";import"./json-9ae8d6f8.js";import"./labelingInfo-58c23223.js";import"./labelUtils-cc8bf057.js";import"./defaultsJSON-b396ba80.js";import"./jsonUtils-9b46ae66.js";import"./AttributeStoreView-c0301836.js";import"./TiledDisplayObject-e9fe8a28.js";import"./visualVariablesUtils-23d65611.js";import"./visualVariablesUtils-6f58ca97.js";import"./Matcher-39cae5d7.js";import"./tileUtils-fdb57ff2.js";import"./TurboLine-1808062f.js";import"./LRUCache-f0791803.js";import"./MemCache-99f16c60.js";import"./devEnvironmentUtils-e2e22b53.js";import"./styleUtils-69a38ed9.js";import"./featureFlags-21ce0d4c.js";import"./schemaUtils-a6bf3c74.js";import"./sql-4c5205a0.js";import"./diffUtils-c5ae4060.js";import"./clusterUtils-607a2369.js";import"./SizeVariable-c3ec0bb9.js";import"./colorRamps-897fba1f.js";import"./LegendOptions-354afaa6.js";import"./sizeVariableUtils-2914222a.js";import"./lengthUtils-15108784.js";import"./util-9c29c62a.js";import"./ComputedAttributeStorage-72738366.js";import"./FieldsIndex-6063639d.js";import"./arcadeTimeUtils-fc7ee695.js";import"./executionError-e2eca390.js";import"./centroid-1116d1e7.js";import"./normalizeUtils-a2da6bc5.js";import"./BaseGraphicContainer-3e5cceac.js";import"./FeatureContainer-2ecb8459.js";import"./TileContainer-296b6347.js";import"./vec3f32-ec4c3c20.js";import"./Bitmap-ed7e1a9c.js";import"./ElevationInfo-dc27b5b8.js";import"./floorFilterUtils-0e56040f.js";import"./sublayerUtils-ea1c0645.js";import"./scaleUtils-0c909ac2.js";import"./popupUtils-b15b09bb.js";const b=h=>{let t=class extends h{initialize(){this.exportImageParameters=new _({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!(!super.canResume()||(e=this.timeExtent)!=null&&e.isEmpty)}};return r([o()],t.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],t.prototype,"floors",null),r([o({readOnly:!0})],t.prototype,"exportImageVersion",null),r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"suspended",void 0),r([o(I)],t.prototype,"timeExtent",void 0),t=r([n("esri.views.layers.MapImageLayerView")],t),t};let a=class extends b(v(f(w))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{d(e)||u.getLogger(this.declaredClass).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,p=e>=10.3,g=e>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new V(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(s,m)=>E(s,m,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,m)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:m})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,p){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,e,p){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],a.prototype,"strategy",void 0);r([o()],a.prototype,"updating",void 0);a=r([n("esri.views.2d.layers.MapImageLayerView2D")],a);const me=a;export{me as default};
