import{aH as l,e,y as t,a as f,bB as v,bD as u,K as c}from"./index-c18a96f3.js";import h from"./FeatureLayer-737c28ee.js";import"./UniqueValueRenderer-8560c516.js";import"./ColorStop-c5089175.js";import"./diffUtils-2a9fee10.js";import"./colorRamps-8bdec164.js";import"./jsonUtils-976e92af.js";import"./DictionaryLoader-6a0ef31f.js";import"./LRUCache-126d04a0.js";import"./FieldsIndex-b071eb44.js";import"./heatmapUtils-103df89c.js";import"./MultiOriginJSONSupport-309fe89a.js";import"./sql-29d214a6.js";import"./FeatureLayerBase-655f7908.js";import"./commonProperties-797d5904.js";import"./ElevationInfo-6aa5c711.js";import"./AttachmentQuery-79b9f34f.js";import"./Query-f6fbedf0.js";import"./RelationshipQuery-29f696bb.js";import"./serviceCapabilitiesUtils-5f3d913c.js";import"./editsZScale-a9b2e43a.js";import"./queryZScale-275d69e0.js";import"./FeatureSet-037cc3b1.js";import"./APIKeyMixin-66195343.js";import"./ArcGISService-776e388b.js";import"./BlendLayer-1406a3b7.js";import"./jsonUtils-266f6943.js";import"./CustomParametersMixin-22e0ea3b.js";import"./EditBusLayer-b344bcc2.js";import"./FeatureReductionLayer-495f6b53.js";import"./FeatureEffect-01b60f68.js";import"./FeatureFilter-e84ccbbf.js";import"./labelingInfo-75f20c49.js";import"./defaults-2a29a8d1.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-5e561312.js";import"./OrderedLayer-2f918e3b.js";import"./PortalLayer-86ea101d.js";import"./portalItemUtils-8a77bd20.js";import"./ScaleRangeLayer-972bc331.js";import"./TemporalLayer-29628135.js";import"./FeatureTemplate-da015408.js";import"./FeatureType-f1f1b192.js";import"./fieldProperties-c4a286ad.js";import"./versionUtils-cabdac94.js";import"./styleUtils-fd893956.js";import"./TopFeaturesQuery-0b0fa5be.js";import"./popupUtils-0e81192d.js";let r=class extends l(v){constructor(s){super(s)}read(s,p){const y={};for(const d in s)y[d.toLowerCase()]=s[d];super.read(y,p)}};e([t({json:{name:"dempathprefix"}})],r.prototype,"demPathPrefix",void 0),e([t({json:{name:"dempathsuffix"}})],r.prototype,"demPathSuffix",void 0),e([t({json:{name:"imagepathprefix"}})],r.prototype,"imagePathPrefix",void 0),e([t({json:{name:"imagepathsuffix"}})],r.prototype,"imagePathSuffix",void 0),e([t({json:{name:"depthimagepathprefix"}})],r.prototype,"depthImagePathPrefix",void 0),e([t({json:{name:"depthimagepathsuffix"}})],r.prototype,"depthImagePathSuffix",void 0),e([t({json:{name:"localimagepathprefix"}})],r.prototype,"localImagePathPrefix",void 0),e([t({json:{name:"localimagepathsuffix"}})],r.prototype,"localImagePathSuffix",void 0),e([t({json:{name:"videopathprefix"}})],r.prototype,"videoPathPrefix",void 0),e([t({json:{name:"videopathsuffix"}})],r.prototype,"videoPathSuffix",void 0),r=e([f("esri.layers.orientedImagery.core.Affixes")],r);const g=r;let i=class extends v{constructor(n){super(n)}};e([t({type:Number,json:{write:!0}})],i.prototype,"averageHeightAboveGround",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraHeading",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraPitch",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraRoll",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"farDistance",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"horizontalFieldOfView",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"nearDistance",void 0),e([t({json:{write:!0}})],i.prototype,"orientedImageryType",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"verticalFieldOfView",void 0),i=e([f("esri.layers.orientedImagery.core.CameraProperties")],i);const x=i;let o=class extends h{constructor(){super(...arguments),this.affixes=null,this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery",this.elevationSource=null}readElevationSource(n,s){var y;let p=(y=n.url)==null?void 0:y.trim();if(p){const{affixes:d}=this;if(d){const{demPathSuffix:a,demPathPrefix:m}=d;m!=null&&m.trim()&&(p=(m==null?void 0:m.trim())+"/"+p),a!=null&&a.trim()&&(p=p+"/"+(a==null?void 0:a.trim()))}}return{...n,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new c("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({type:g,json:{write:!0}})],o.prototype,"affixes",void 0),e([t({type:x,json:{write:!0}})],o.prototype,"cameraProperties",void 0),e([t({json:{write:!0}})],o.prototype,"coverage",void 0),e([t({json:{write:!0}})],o.prototype,"coveragePercent",void 0),e([t({json:{write:!0}})],o.prototype,"defaultSearchLocation",void 0),e([t({json:{write:!0}})],o.prototype,"depthImage",void 0),e([t({json:{write:!0}})],o.prototype,"geometryType",void 0),e([t()],o.prototype,"imageProperties",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maximumDistance",void 0),e([t({type:["OrientedImageryLayer"]})],o.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],o.prototype,"type",void 0),e([t({json:{write:!0},dependsOn:["affixes"]})],o.prototype,"elevationSource",void 0),e([u("portal-item","elevationSource",["elevationSource"])],o.prototype,"readElevationSource",null),o=e([f("esri.layers.OrientedImageryLayer")],o);const ue=o;export{ue as default};
