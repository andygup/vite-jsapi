import{bp as m,bt as c,bf as L,O as x,r as h,E as d,ae as i,af as n,ai as v,$ as U,a$ as R,cG as P,K as j,hr as r}from"./index-0ea7d266.js";import{M as O}from"./MultiOriginJSONSupport-afa56182.js";import{B as T}from"./BlendLayer-2f1384eb.js";import{R as K}from"./RefreshableLayer-d9688d21.js";import{S as _}from"./ScaleRangeLayer-1e20ff33.js";import{c as M}from"./imageBitmapUtils-3a607ed2.js";import{O as k}from"./OperationalLayer-fd7c639f.js";import"./jsonUtils-16a3028b.js";import"./parser-378b4989.js";import"./_commonjsHelpers-725317a4.js";import"./commonProperties-cee41848.js";import"./ElevationInfo-56c656df.js";import"./lengthUtils-bc57f38a.js";var f;const g=new U("0/0/0",0,0,0,void 0);let y=f=class extends T(_(K(R))){constructor(){super(...arguments),this.tileInfo=m.create({spatialReference:c.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new L(-20037508342787e-6,-2003750834278e-5,2003750834278e-5,20037508342787e-6,c.WebMercator),this.spatialReference=c.WebMercator}getTileBounds(t,e,o,a){const s=a||x();return g.level=t,g.row=e,g.col=o,g.extent=s,this.tileInfo.updateTileInfo(g),g.extent=void 0,s}fetchTile(t,e,o,a={}){const{signal:s}=a,l=this.getTileUrl(t,e,o),p={responseType:"image",signal:s,query:{...this.refreshParameters}};return h(l??"",p).then(b=>b.data)}async fetchImageBitmapTile(t,e,o,a={}){const{signal:s}=a;if(this.fetchTile!==f.prototype.fetchTile){const S=await this.fetchTile(t,e,o,a);return M(S,t,e,o,s)}const l=this.getTileUrl(t,e,o)??"",p={responseType:"blob",signal:s,query:{...this.refreshParameters}},{data:b}=await h(l,p);return M(b,t,e,o,s)}getTileUrl(){throw new d("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};i([n({type:m})],y.prototype,"tileInfo",void 0);i([n({type:["show","hide"]})],y.prototype,"listMode",void 0);i([n({readOnly:!0,value:"base-tile"})],y.prototype,"type",void 0);i([n({nonNullable:!0})],y.prototype,"fullExtent",void 0);i([n()],y.prototype,"spatialReference",void 0);y=f=i([v("esri.layers.BaseTileLayer")],y);const $=y,w=new P({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),q="https://dev.virtualearth.net";let u=class extends T(k(O($))){constructor(t){super(t),this.type="bing-maps",this.tileInfo=new m({size:[256,256],dpi:96,origin:new j({x:-20037508342787e-6,y:20037508342787e-6,spatialReference:c.WebMercator}),spatialReference:c.WebMercator,lods:[new r({level:1,resolution:78271.5169639999,scale:295828763795777e-6}),new r({level:2,resolution:39135.7584820001,scale:147914381897889e-6}),new r({level:3,resolution:19567.8792409999,scale:73957190948944e-6}),new r({level:4,resolution:9783.93962049996,scale:36978595474472e-6}),new r({level:5,resolution:4891.96981024998,scale:18489297737236e-6}),new r({level:6,resolution:2445.98490512499,scale:9244648868618e-6}),new r({level:7,resolution:1222.99245256249,scale:4622324434309e-6}),new r({level:8,resolution:611.49622628138,scale:2311162217155e-6}),new r({level:9,resolution:305.748113140558,scale:1155581108577e-6}),new r({level:10,resolution:152.874056570411,scale:577790.554289}),new r({level:11,resolution:76.4370282850732,scale:288895.277144}),new r({level:12,resolution:38.2185141425366,scale:144447.638572}),new r({level:13,resolution:19.1092570712683,scale:72223.819286}),new r({level:14,resolution:9.55462853563415,scale:36111.909643}),new r({level:15,resolution:4.77731426794937,scale:18055.954822}),new r({level:16,resolution:2.38865713397468,scale:9027.977411}),new r({level:17,resolution:1.19432856685505,scale:4513.988705}),new r({level:18,resolution:.597164283559817,scale:2256.994353}),new r({level:19,resolution:.298582141647617,scale:1128.497176}),new r({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(t){this._set("bingMetadata",t)}get copyright(){return this.bingMetadata!=null?this.bingMetadata.copyright:null}get operationalLayerType(){return w.toJSON(this.style)}get bingLogo(){return this.bingMetadata!=null?this.bingMetadata.brandLogoUri:null}load(t){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then(()=>this._getMetadata())):this.addResolvingPromise(Promise.reject(new d("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(t,e,o){if(!this.loaded||this.bingMetadata==null)return null;const a=this.bingMetadata.resourceSets[0].resources[0],s=a.imageUrlSubdomains[e%a.imageUrlSubdomains.length],l=this._getQuadKey(t,e,o);return a.imageUrl.replace("{subdomain}",s).replace("{quadkey}",l)}async fetchAttributionData(){return this.load().then(()=>this.bingMetadata==null?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map(a=>({attribution:a.attribution,coverageAreas:a.coverageAreas.map(l=>({zoomMin:l.zoomMin,zoomMax:l.zoomMax,score:1,bbox:[l.bbox[0],l.bbox[1],l.bbox[2],l.bbox[3]]}))}))})}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style],o=`${q}/REST/v1/Imagery/Metadata/${e}`;return h(o,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then(a=>{const s=a.data;if(s.statusCode!==200)throw new d("bingmapslayer:getmetadata",s.statusDescription);if(this.bingMetadata=s,this.bingMetadata.resourceSets.length===0)throw new d("bingmapslayer:getmetadata","no bing resourcesets");if(this.bingMetadata.resourceSets[0].resources.length===0)throw new d("bingmapslayer:getmetadata","no bing resources")}).catch(a=>{throw new d("bingmapslayer:getmetadata",a.message)})}_getPortalBingKey(){return h(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then(e=>{if(!e.data.bingKey)throw new d("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey}).catch(e=>{throw new d("bingmapslayer:getportalbingkey",e.message)})}_getQuadKey(t,e,o){let a="";for(let s=t;s>0;s--){let l=0;const p=1<<s-1;o&p&&(l+=1),e&p&&(l+=2),a+=l.toString()}return a}};i([n({json:{read:!1,write:!1},value:null})],u.prototype,"bingMetadata",null);i([n({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],u.prototype,"type",void 0);i([n({type:m})],u.prototype,"tileInfo",void 0);i([n({type:String,readOnly:!0,json:{read:!1,write:!1}})],u.prototype,"copyright",null);i([n({type:String,json:{write:!1,read:!1}})],u.prototype,"key",void 0);i([n({type:w.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:w.read}}})],u.prototype,"style",void 0);i([n({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],u.prototype,"operationalLayerType",null);i([n({type:String,json:{write:!1,read:!1}})],u.prototype,"culture",void 0);i([n({type:String,json:{write:!1,read:!1}})],u.prototype,"region",void 0);i([n({type:String,json:{write:!0,read:!0}})],u.prototype,"portalUrl",void 0);i([n({type:Boolean,json:{write:!1,read:!1}})],u.prototype,"hasAttributionData",void 0);i([n({type:String,readOnly:!0})],u.prototype,"bingLogo",null);u=i([v("esri.layers.BingMapsLayer")],u);const Y=u;export{Y as default};
