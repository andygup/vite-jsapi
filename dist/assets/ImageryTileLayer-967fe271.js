import{b7 as pt,lf as pe,hC as rt,d as ze,K as B,bC as Ee,a3 as A,by as H,L as nt,e1 as yt,r3 as at,eb as gt,e as I,y as R,a as Q,bB as xt,_ as wt,W as Le,bz as q,bD as It,hh as bt,G as ot,ay as Pe,v as St,bm as Rt,T as vt,gY as Tt,h5 as _t,Y as kt,fE as me,g as Ft,fz as Ct,fy as Mt,hd as Pt,a$ as $t}from"./index-0b6846a6.js";import{O as Bt}from"./MultiOriginJSONSupport-8c956d71.js";import{l as Dt}from"./ArcGISService-8aa080ff.js";import{a as Ot}from"./BlendLayer-42ebc769.js";import{o as zt}from"./CustomParametersMixin-1742fbf5.js";import{n as lt,D as Et,r as Nt,s as Jt,p as ct,c as At,w as $e,l as Ht,d as Lt,a as Wt,h as qt,e as We,u as Gt,v as qe,Q as Ge,E as je,g as jt,L as Ut,q as Vt,k as Ue,t as Yt,b as Xt,o as Kt}from"./ImageHistogramParameters-874cfffe.js";import{f as ut,c as Qt}from"./commonProperties-b6e563c7.js";import{U as _e,j as Zt,N as ye,R as ht,I as ei,a as ti,O as ii,a2 as si,u as Z,f as ri,c as ni,s as ai,L as oi,a3 as Ve,m as ge,W as li,h as ci,a4 as Ne,P as ui,a5 as hi,a6 as fi,a7 as di,a8 as mi,a9 as pi,aa as yi,ab as xe,ac as gi,ad as xi,ae as wi}from"./dataUtils-b3cd2d34.js";import{k as Be,K as we,_ as Ye,i as Xe,n as Ii,Q as ke,q as Se,$ as bi,V as Si,C as Ri,J as vi}from"./rasterProjectionHelper-a41a2be2.js";import{N as De,f as Ti,i as _i,m as Je,c as ki,C as Fi}from"./utils-1bd8be66.js";import{c as Ci}from"./OperationalLayer-fa982da8.js";import{j as Mi}from"./PortalLayer-3fdb37ec.js";import{t as Pi}from"./ScaleRangeLayer-a3d27153.js";import{a as $i}from"./TemporalLayer-bc87d9c2.js";import{g as ft}from"./FeatureSet-201dc83e.js";import{n as Bi,z as Di}from"./TilemapCache-58742cd4.js";import{p as Oi}from"./popupUtils-30e2b710.js";import"./jsonUtils-899e4bfe.js";import"./UniqueValueRenderer-69f2a261.js";import"./ColorStop-a9d5adf5.js";import"./diffUtils-c77d4e09.js";import"./colorRamps-c287f076.js";import"./normalizeUtils-671b6bae.js";import"./normalizeUtilsCommon-dd4bd041.js";import"./generateRendererUtils-683e6018.js";import"./ElevationInfo-c6327af8.js";import"./colorUtils-c0f43caf.js";import"./portalItemUtils-224c29e2.js";import"./LRUCache-b7b1b5e3.js";let zi=class{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const n=s.get(t);return n.refCount--,n.refCount<=0&&(s.delete(t),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const n=s.get(t);return n.ts=Date.now(),n.refCount++,s.delete(t),s.set(t,n),n.block}return null}putBlock(e,r,t,s){const n=this._cachedBlocks,a=e+"/"+r;if(n.has(a)){const o=n.get(a);o.ts=Date.now(),o.refCount++}else n.set(a,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,r){const t=this._cachedBlocks,s=e+"/"+r;t.has(s)&&t.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),t=Date.now();for(let s=0;s<r.length&&r[s][1].ts<=t-this._duration;s++)e.delete(r[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let t=0;t<r.length-this._size;t++)e.delete(r[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const ve=new Map,te=new zi;function Ke(i,e){return e==null?i:`${i}?sliceId=${e}`}function Ei(i,e,r){var a,o;const t=ve.get(i);if(!t)return e==null?te.decreaseRefCount(i,r):0;if(e==null||t[e]==null)return te.decreaseRefCount(i,r);const s=(a=t[e])==null?void 0:a.cache,n=s==null?void 0:s.get(r);if(s&&n){if(n.refCount--,n.refCount===0){s.delete(r);for(let l=0;l<t.length;l++)(o=t[l])==null||o.cache.delete(r);n.controller&&n.controller.abort()}return n.refCount}return 0}function Qe(i,e,r){var n,a,o;const t=ve.get(i);if(!t)return e==null?te.getBlock(i,r):null;if(e==null||t[e]==null){for(let l=0;l<t.length;l++){const c=(n=t[l])==null?void 0:n.cache.get(r);if(c)return c.refCount++,c.block}return te.getBlock(i,r)}const s=(a=t[e])==null?void 0:a.cache.get(r);if(s)return s.refCount++,s.block;for(let l=0;l<t.length;l++){if(l===e||!t[l])continue;const c=(o=t[l])==null?void 0:o.cache,u=c==null?void 0:c.get(r);if(c&&u)return u.refCount++,c.set(r,u),u.block}return null}function Ze(i,e,r,t,s=null){var o;const n=ve.get(i);if(!n)return void(e==null&&te.putBlock(i,r,t,s));if(e==null||n[e]==null)return void te.putBlock(i,r,t,s);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:s};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(o=n[e])==null||o.cache.set(r,a)}function Ni(i,e,r){var s;const t=ve.get(i);t?e!=null&&t[e]!=null?(s=t[e])==null||s.cache.delete(r):te.deleteBlock(i,r):e==null&&te.deleteBlock(i,r)}const et=8,Ji=256;let L=class extends pt(xt){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const i=Be();this.addResolvingPromise(i),await this.when()}normalizeCtorArgs(i){return i&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:pe.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=we(i.spatialReference);return e!=null&&i.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:i}=this.rasterInfo;return i==null||i.type==="gcs-shift"}set rasterJobHandler(i){var e,r;this._set("rasterJobHandler",i),this.datasetFormat==="Function"&&((r=(e=this.primaryRasters)==null?void 0:e.rasters)==null||r.forEach(t=>t.rasterJobHandler=i))}set url(i){this._set("url",rt(i,ze.getLogger(this.declaredClass)))}async open(i){throw new B("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(i,e,r,t={}){const s=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(i,e,r,s);return this.fetchPixels(n,s.size[0],s.size[1],t)}async identify(i,e={}){var C;i=Ee(A,i).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=s;let{transposedVariableName:o}=e;const l=a!=null&&n&&(t!=null||lt(r));l&&!o&&(o=r!=null&&r.length>0?r[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let f=Ye(i,c,h);if(!u.intersects(f))return{location:f,value:null};if(s.transform!=null){const P=s.transform.inverseTransform(f);if(!s.nativeExtent.intersects(P))return{location:P,value:null};f=P}let m=0;const p=o!=null&&a!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const P=this.primaryRasters.rasters[0];if(p)return P.identify(f,e);const{pixelSize:N}=s,$=3,M=N.x*$/2,D=N.y*$/2,z=new H({xmin:f.x-M,xmax:f.x+M,ymin:f.y-D,ymax:f.y+D,spatialReference:c}),V={interpolation:"nearest"},{pixelBlock:J}=await P.fetchPixels(z,$,$,V),{pixelBlock:O}=await this.fetchPixels(z,$,$,V);if(J==null)return{location:f,value:null};const j=Math.floor($*$*.5),oe=!J.mask||J.mask[j]?J.pixels.map(G=>G[j]):null;let Y;return O!=null&&(Y=!O.mask||O.mask[j]?O.pixels.map(G=>G[j]):void 0),{location:f,value:oe,processedValue:Y,pyramidLevel:0}}if(!p){if(e.srcResolution)m=Xe(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(i,e),m==null)return{location:f,value:null}}const g=this.identifyPixelLocation(f,m,null,p);if(g===null)return{location:f,value:null};const{row:d,col:y,rowOffset:x,colOffset:w,blockWidth:S}=g,v=o??e.sliceId,T=Ke(this.url,v),F=`${m}/${d}/${y}`;let _=Qe(T,null,F);_==null&&(_=this.fetchRawTile(m,d,y,e),Ze(T,null,F,_));const k=await _;if(k==null||!((C=k.pixels)!=null&&C.length))return{location:f,value:null};const b=x*S+w;return this._processIdentifyResult(k,{srcLocation:f,position:b,pyramidLevel:m,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(i,e,r,t={}){i=Ii(i),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:s}=this;if(t.requestRawData&&s)return this._fetchPixels(i,e,r,t);const n=we(i.spatialReference),a=ke(i);if(n==null||a===0||a===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(i,e,r,t);if(a>=3)return{extent:i,pixelBlock:null};const o=[],{xmin:l,xmax:c}=i,u=Math.round(n/(c-l)*e),h=u-Math.round((n/2-l)/(c-l)*e);let f=0;const m=[];for(let y=0;y<=a;y++){const x=new H({xmin:y===0?l:-n/2,xmax:y===a?c-n*y:n/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),w=y===0?u-h:y===a?e-f:u;f+=w,m.push(w);const S=t.disableWrapAround&&y>0?null:this._fetchPixels(x,w,r,t);o.push(S)}const p=(await Promise.all(o)).map(y=>y==null?void 0:y.pixelBlock);let g=null;const d={width:e,height:r};return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},t)).pixelBlock:g=_e(p,d,{blockWidths:m}),{extent:i,srcExtent:Se(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:g}}async fetchRawPixels(i,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(i,e,r,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**i,c=a.x*l,u=a.y*l,h=new H({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-u*(e.y+r.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=s;if(f.length===1&&f[0]!=null&&f[0].width===r.width&&f[0].height===r.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const p=i>0?o.pyramidBlockWidth:o.blockWidth,g=i>0?o.pyramidBlockHeight:o.blockHeight,d={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:r,clipOffset:d,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=_e(f,m,{clipOffset:d,clipSize:r}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(i,e,r,t){throw new B("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return Se(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?Zt(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:s,query:n,headers:a}=e;r=r??e.retryCount??this.ioConfig.retryCount;const o=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await nt(i,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(r>0)return r--,this.request(i,e,r);throw l}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||i==null||i.length===0?null:Et(i,e)}getTileExtentFromTileInfo(i,e,r,t){const s=yt(t.lodAt(i));return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo;if(!i.tileInfo){const s=[],n=i.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)s.push(new at({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new A({x:r.xmin,y:r.ymax,spatialReference:e});i.tileInfo=new pe({origin:l,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:s}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,r=512,t){const{width:s,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=i,c=new A({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);i.storageInfo=new ye({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,r,t,s,n=0,a=2){if(s.length===1&&n>0){s=[...s];let{x:u,y:h}=s[0];for(let f=0;f<n;f++)u*=a,h*=a,s.push({x:u,y:h})}const o=[],{x:l,y:c}=t;for(let u=0;u<s.length;u++){const{x:h,y:f}=s[u];o.push({minCol:Math.floor((i.xmin-l+.1*h)/e/h),maxCol:Math.floor((i.xmax-l-.1*h)/e/h),minRow:Math.floor((c-i.ymax+.1*f)/r/f),maxRow:Math.floor((c-i.ymin-.1*f)/r/f)})}return o}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(r!=null&&r.length)return r[i-1];const s=t**i;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(i,e,r,t){const{spatialReference:s,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=t&&c!=null?c.tileSize[0]:a.blockWidth,h=t&&c!=null?c.tileSize[1]:a.blockHeight,f=Ye(i,s,r);if(!n.intersects(f)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:p,y:g}=m,d=(l.y-f.y)/g/h,y=(f.x-l.x)/p/u,x=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),w=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:f}}getTileExtent(i,e,r,t,s,n){const[a,o]=n,l=t.x+r*a*i.x,c=l+a*i.x,u=t.y-e*o*i.y,h=u-o*i.y;return new H({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}async _fetchPixels(i,e,r,t={}){let s=ke(i);if(s>=2)return{extent:i,pixelBlock:null};const n=this._getSourceDataInfo(i,e,r,t),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=n;if(c===0||u===0)return{extent:i,srcExtent:l,pixelBlock:null};const{rasterInfo:f}=this,m=f.transform,p=(m==null?void 0:m.type)==="gcs-shift",g=we(i.spatialReference)!=null;!p&&g||(s=ke(n.srcExtent,p));const d=await this._fetchRawTiles(a,h,{width:c,height:u,wrapCount:s},t);if(!d)return{extent:i,srcExtent:l,pixelBlock:null};const y=f.storageInfo,x=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight;let{x:S,y:v}=f.pixelSize;if(a>0){const{pyramidResolutions:G,pyramidScalingFactor:mt}=y;if(G!=null&&G[a-1])({x:S,y:v}=G[a-1]);else{const He=mt**a;S*=He,v*=He}}const T=f.spatialReference,F=new A({x:S,y:v,spatialReference:T}),_=x===c&&w===u&&h.x%x==0&&h.y%w==0,k=new A({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference}),b=!i.spatialReference.equals(T),C=T.isGeographic?1e-9:1e-4,{datumTransformation:P}=t;if(!b&&_&&d.pixelBlocks.length===1&&x===e&&w===r&&this._isSameResolution(o,k,C))return{extent:i,srcExtent:l,srcTilePixelSize:F,pixelBlock:d.pixelBlocks[0]};const N=g&&we(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,$=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");$&&!this.rasterJobHandler&&await Be();const M=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:k.toJSON(),datumTransformation:P,rasterTransform:m,hasWrapAround:s>0||N,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:$},t):bi({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:k,datumTransformation:P,rasterTransform:m,hasWrapAround:s>0||N,isAdaptive:!1,includeGCSGrid:$});let D;const z=!t.requestRawData,V={rows:M.spacing[0],cols:M.spacing[1]},J=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,d.extent.xmin):void 0,{pixelBlocks:O,mosaicSize:j,isPartiallyFilled:oe}=d;let Y=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:Y}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:j,destDimension:z?{width:e,height:r}:null,coefs:z?M.coefficients:null,sampleSpacing:z?V:null,projectDirections:$,gcsGrid:$?M.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:J,blockWidths:null},t));else{const G=_e(O,j,{alignmentInfo:J});D=z?ht(G,{width:e,height:r},M.coefficients,V,t.interpolation):G,$&&M.gcsGrid&&(Y=ei({width:e,height:r},M.gcsGrid),D=ti(D,this.rasterInfo.dataType,Y))}return t.requestRawData||$?{extent:i,srcExtent:l,srcTilePixelSize:F,pixelBlock:D,transformGrid:M,localNorthDirections:Y,isPartiallyFilled:oe}:{extent:i,srcExtent:l,srcTilePixelSize:F,pixelBlock:D}}async _fetchRawTiles(i,e,r,t){const{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(i);let{x:l,y:c}=e,{width:u,height:h,wrapCount:f}=r;const m=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let p=0,g=0,d=0;f&&m!=null&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:p}=m,g*m.blockWidth-p>=l+u&&(p=0));const y=Math.floor(l/a),x=Math.floor(c/o),w=Math.floor((l+u+p-1)/a),S=Math.floor((c+h+p-1)/o),v=n[i];if(!v)return null;const{minRow:T,minCol:F,maxCol:_,maxRow:k}=v;if(f===0&&(S<T||w<F||x>k||y>_))return null;const b=new Array;let C=!1;const P=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let J=x;J<=S;J++)for(let O=y;O<=w;O++){let j=O;if(!t.disableWrapAround&&f&&m!=null&&g<=O&&(j=O-g-d),J>=T&&j>=F&&k>=J&&_>=j){const oe=this._fetchRawTile(i,J,j,t);P?b.push(new Promise(Y=>{oe.then(G=>Y(G)).catch(()=>{C=!0,Y(null)})})):b.push(oe)}else b.push(Promise.resolve(null))}if(b.length===0)return null;const N=await Promise.all(b),$={height:(S-x+1)*o,width:(w-y+1)*a},{spatialReference:M}=this.rasterInfo,D=this.getPyramidPixelSize(i),{x:z,y:V}=D;return{extent:new H({xmin:s.x+y*a*z,xmax:s.x+(w+1)*a*z,ymin:s.y-(S+1)*o*V,ymax:s.y-x*o*V,spatialReference:M}),pixelBlocks:N,mosaicSize:$,isPartiallyFilled:C}}_isSameResolution(i,e,r){return Math.abs(i.x-e.x)<r&&Math.abs(i.y-e.y)<r}_fetchRawTile(i,e,r,t){const s=this.rasterInfo.storageInfo.blockBoundary[i];if(!s)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=s;if(e<n||r<a||e>l||r>o)return Promise.resolve(null);const c=Ke(this.url,t.sliceId),u=`${i}/${e}/${r}`;let h=Qe(c,t.registryId,u);if(h==null){const f=new AbortController;h=this.fetchRawTile(i,e,r,{...t,signal:f.signal}),Ze(c,t.registryId,u,h,f),h.catch(()=>Ni(c,t.registryId,u))}return t.signal&&gt(t,()=>{Ei(c,t.registryId,u)}),h}_computeMagDirValues(i){var l;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(i==null?void 0:i.length)!==2||!((l=i[0])!=null&&l.length))return null;const t=i[0].length;if(r==="vector-magdir"){const c=i[1].map(u=>(u+360)%360);return[i[0],c]}const[s,n]=i,a=[],o=[];for(let c=0;c<t;c++){const[u,h]=ii([s[c],n[c]]);a.push(u),o.push(h)}return[a,o]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Si(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,r,t={}){const s={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(s.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,s));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=s,c=a/e,u=o/r,h=l<n&&c*u>=16,f=l===n&&this._requireTooManySrcTiles(a,o,e,r);if(h||f||a===0||o===0){const m=new A({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference});let p=Ri(m,this.rasterInfo.spatialReference,i,s.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&g){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-l+3>=d){const y=2**d;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(s.srcResolution=p,this._updateSourceDataInfo(i,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(i,e,r,t){const{tileInfo:s}=this.rasterInfo.storageInfo;return Math.ceil(i/s.size[0])*Math.ceil(e/s.size[1])>=Ji||i/r>et||e/t>et}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,t=r.spatialReference,{srcResolution:s,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=Xe(s,r,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||Se(i,t,n);if(c==null)return;const u=r.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:f}=r.storageInfo.origin,m=Math.floor((c.xmin-h)/o.x+.1),p=Math.floor((f-c.ymax)/o.y+.1),g=Math.floor((c.xmax-h)/o.x-.1),d=Math.floor((f-c.ymin)/o.y-.1),y=c.width<.1*o.x?0:g-m+1,x=c.height<.1*o.y?0:d-p+1;e.pyramidLevel=a,e.pyramidResolution=o,e.srcWidth=y,e.srcHeight=x,e.ul={x:m,y:p}}_getRequestOptionsWithSliceId(i){return this.rasterInfo.multidimensionalInfo!=null&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:r,position:t,pyramidLevel:s,useTransposedTile:n}=e,a=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:r,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!n){const d=i.pixels.map(w=>w[t]),y={location:r,value:d,pyramidLevel:s},x=this._computeMagDirValues(d.map(w=>[w]));return x!=null&&x.length&&(y.magdirValue=x.map(w=>w[0])),y}let l=i.pixels.map(d=>d.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Nt(o,h.transposedVariableName);if(u){const d=Jt(f,h.multidimensionalDefinition,h.timeExtent);l=l.map(y=>d.map(x=>y[x])),c=c==null?void 0:c.map(y=>d.map(x=>y[x])),f=d.map(y=>f[y])}const m=i.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:i.pixelType};let g;return m!=null&&(si(p,m),g=p.mask),{location:r,value:null,dataSeries:f.map((d,y)=>{const x={value:(g==null?void 0:g[y])===0?null:l.map(w=>w[y]),multidimensionalDefinition:d.multidimensionalDefinition.map(w=>new ct({...w,isSlice:!0}))};return c!=null&&c.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:s}}};I([R()],L.prototype,"_rasterTileAlighmentInfo",void 0),I([R({readOnly:!0})],L.prototype,"_isGlobalWrappableSource",null),I([R({readOnly:!0})],L.prototype,"_hasNoneOrGCSShiftTransform",null),I([R()],L.prototype,"rasterJobHandler",null),I([R(ut)],L.prototype,"url",null),I([R({type:String,json:{write:!0}})],L.prototype,"datasetName",void 0),I([R({type:String,json:{write:!0}})],L.prototype,"datasetFormat",void 0),I([R()],L.prototype,"hasUniqueSourceStorageInfo",void 0),I([R()],L.prototype,"rasterInfo",void 0),I([R()],L.prototype,"ioConfig",void 0),I([R()],L.prototype,"sourceJSON",void 0),L=I([Q("esri.layers.support.rasterDatasets.BaseRaster")],L);const ae=L;let ie=class extends ae{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){var c,u,h;await this.init();const{rasterFunction:r}=this;(u=(c=this.primaryRasters)==null?void 0:c.rasters)!=null&&u.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&((h=this.primaryRasters.rasters)==null||h.forEach(f=>f.rasterJobHandler=this.rasterJobHandler)));const{rasters:t,rasterIds:s}=this.primaryRasters,n=t.map(f=>f.rasterInfo?void 0:f.open(e));await Promise.all(n);const a=t.map(({rasterInfo:f})=>f),o=r.bind({rasterInfos:a,rasterIds:s});if(!o.success||a.length===0)throw new B("raster-function:open",`cannot bind the function: ${o.error??""}`);await this.syncJobHandler();const l=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(f=>this._hasSameStorageInfo(f,l)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",r.rasterInfo)}async syncJobHandler(){var e;return(e=this.rasterJobHandler)==null?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,r,t,s={}){var w,S;const{rasters:n,rasterIds:a}=this.primaryRasters;let o=!1;const{interpolation:l}=s,c=(w=this.rasterFunction.flatWebGLFunctionChain)==null?void 0:w.hasSurfaceFunction;!s.requestRawData&&l!=="bilinear"&&c&&(o=n.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:o});const u=n.map(v=>v.fetchPixels(e,r,t,s)),h=await Promise.all(u),f=h.map(v=>v.pixelBlock),m=o||s.requestRawData?h.map(v=>v.srcTilePixelSize):null;if(s.skipRasterFunction||f.every(v=>v==null))return h[0];const p=((S=h.find(v=>v.pixelBlock!=null))==null?void 0:S.extent)??e,g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:a}),{transformGrid:d}=h[0];if(!o||g==null||d==null)return{...h[0],pixelBlock:g};const y={rows:d.spacing[0],cols:d.spacing[1]};let x;return this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:r,height:t},coefs:d.coefficients,sampleSpacing:y,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:x=ht(g,{width:r,height:t},d.coefficients,y,l),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}_hasSameStorageInfo(e,r){const{storageInfo:t,pixelSize:s,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:u}=r;return s.x===l.x&&s.y===l.y&&n.equals(c)&&a.equals(u)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};I([R({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),I([R()],ie.prototype,"tileType",void 0),I([R()],ie.prototype,"rasterFunction",void 0),I([R()],ie.prototype,"primaryRasters",void 0),ie=I([Q("esri.layers.support.rasterDatasets.FunctionRaster")],ie);const Oe=ie;function Ai(i,e){if(i.spatialReference.equals(e))return i;const r=Le(i.spatialReference),t=Le(e);if(r===t)return i;const s=r/t;return{x:i.x*s,y:i.y*s}}async function Hi(i,e,r){if(r.type==="extent")return Wi(i,e,r);const{width:t,height:s}=i,n=new Uint8Array(t*s),{contains:a,intersects:o}=await wt(()=>import("./geometryEngine-7307d8db.js"),["assets/geometryEngine-7307d8db.js","assets/geometryEngineBase-2c91de7f.js","assets/index-0b6846a6.js","assets/index-0492b785.css","assets/hydrated-abb6b57b.js"]);return o(e,r)?r.type==="polyline"?qi(i,e,r):a(r,e)?i:Li(i,e,r):new Z({pixelType:i.pixelType,width:t,height:s,mask:n,maskIsAlpha:!1,pixels:[...i.pixels]})}function Li(i,e,r){if(!i)return i;const{width:t,height:s}=i,n=e.width/t,a=e.height/s,{xmin:o,ymax:l}=e;let c;if(r.type==="extent"){const d=(r.xmin-o)/n,y=(r.xmax-o)/n,x=(l-r.ymax)/a,w=(l-r.ymin)/a;c=[[[d,x],[d,w],[y,w],[y,x],[d,x]]]}else c=r.rings.map(d=>d.map(([y,x])=>[(y-o)/n,(l-x)/a]));const u=document.createElement("canvas");u.width=t,u.height=s;const h=u.getContext("2d");h.fillStyle="#f00",c.forEach(d=>{h.beginPath(),h.moveTo(d[0][0],d[0][1]);for(let y=0;y<d.length;y++)h.lineTo(d[y][0],d[y][1]);h.closePath(),h.fill()});const f=h.getImageData(0,0,t,s).data,m=i.mask,p=t*s,g=new Uint8Array(p);for(let d=0;d<p;d++)m&&!m[d]||(g[d]=f[4*d+3]>127?255:0);return new Z({pixelType:i.pixelType,width:t,height:s,mask:g,maskIsAlpha:!1,pixels:[...i.pixels]})}function Wi(i,e,r){const{width:t,height:s}=i,n=new Uint8Array(t*s),a=e.width/t,o=e.height/s;if(r.width/a<.5||r.height/o<.5)return new Z({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:h}=e,{xmin:f,xmax:m,ymin:p,ymax:g}=r,d=Math.max(l,f),y=Math.min(c,m),x=Math.max(u,p),w=Math.min(h,g),S=.5*a,v=.5*o;if(y-d<S||w-x<v||y<l+S||d>c-S||x>h-v||w<u+v)return new Z({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});const T=Math.max(0,(d-l)/a),F=Math.min(t,Math.max(0,(y-l)/a)),_=Math.max(0,(h-w)/o),k=Math.min(s,Math.max(0,(h-x)/o)),b=Math.round(T),C=Math.round(F)-1,P=Math.round(_),N=Math.round(k)-1;if(b===C&&T%1>.5&&F%1<.5||P===N&&_%1>.5&&k%1<.5)return new Z({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});if(b===0&&P===0&&C===t&&N===s)return i;const $=i.mask;for(let M=P;M<=N;M++)for(let D=b;D<=C;D++){const z=M*t+D;n[z]=$?$[z]:255}return new Z({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]})}function qi(i,e,r){const{width:t,height:s}=i,n=new Uint8Array(t*s),a=e.width/t,o=e.height/s,{xmin:l,ymax:c}=e,{paths:u}=r,h=i.mask;for(let f=0;f<u.length;f++){const m=u[f];for(let p=0;p<m.length-1;p++){const[g,d]=m[p],[y,x]=m[p+1];let w=Math.floor((c-d)/o),S=Math.floor((c-x)/o);if(S<w){const T=w;w=S,S=T}w=Math.max(0,w),S=Math.min(s-1,S);const v=(y-g)/(x-d);for(let T=w;T<=S;T++){const F=T===w?Math.max(d,x):(s+1-T)*o,_=T===S?Math.min(d,x):F-o;let k=Math.floor(x===d?(g-l)/a:(v*(F-d)+g-l)/a),b=Math.floor(x===d?(y-l)/a:(v*(_-d)+g-l)/a);if(b<k){const P=k;k=b,b=P}const C=T*t;k=Math.max(0,k),b=Math.min(t-1,b);for(let P=C+k;P<=C+b;P++)n[P]=h?h[P]:255}}}return new Z({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]})}function Gi(i,e,r,t=!0){const{spatialReference:s}=i,{x:n,y:a}=Ai(r,s);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:f,ymax:m,ymin:p}=u;const{xmin:g,ymax:d}=i.extent;return t?(h=g+(h>g?n*Math.round((h-g)/n):0),m=d-(m<d?a*Math.round((d-m)/a):0),f=g+(f>g?n*Math.round((f-g)/n):0),p=d-(p<d?a*Math.round((d-p)/a):0),o=new H({xmin:h,ymax:m,xmax:f,ymin:p,spatialReference:s}),l=Math.round(o.width/n),c=Math.round(o.height/a)):(l=Math.floor((f-h)/n+.8),c=Math.floor((m-p)/a+.8),h=g+(h>g?n*Math.floor((h-g)/n+.1):0),m=d-(m<d?a*Math.floor((d-m)/a+.1):0),f=h+l*n,p=m-c*a,o=new H({xmin:h,ymax:m,xmax:f,ymin:p,spatialReference:s})),{extent:o,width:l,height:c}}const tt=ze.getLogger("esri.layers.mixins.ImageryTileMixin"),ji=i=>{let e=class extends i{constructor(...t){var s,n;super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(s=t[0])==null?void 0:s.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var t;return(t=this.rasterInfo)==null?void 0:t.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){this._set("rasterFunction",t),this.updateRasterFunction()}get tileInfo(){var t;return(t=this.rasterInfo)==null?void 0:t.storageInfo.tileInfo}set url(t){this._set("url",rt(t,tt))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,s,n){var o,l;const a=(l=(o=s==null?void 0:s.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:l.renderer;return Wt(a,n)||void 0}async convertVectorFieldData(t,s){if(t==null||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},s):ri(t,a)}async computeStatisticsHistograms(t,s){t=Ee(qt,t).clone();const{rasterInfo:n}=this,{geometry:a}=t;if(a==null)throw new B("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=a;const{spatialReference:l}=n;a.spatialReference.equals(l)||(await Be(),o=a.type==="extent"?Se(a,l):vi(a,l));const c=t.pixelSize??new A({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:l}),{extent:u,width:h,height:f}=Gi(n,o,c),m=await this.fetchPixels(u,h,f,{...s,interpolation:"nearest"});if(m.pixelBlock==null)throw new B("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await Hi(m.pixelBlock,u,o),g=this._rasterJobHandler.instance;return g?g.computeStatisticsHistograms({pixelBlock:p},s):ni(p)}async createFlowMesh(t,s){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,s):ai(t.meshType,t.simulationSettings,t.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){var o,l;const{multidimensionalInfo:s}=this.rasterInfo??{};if(s==null)return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;n!=null&&n.length||(n=We(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(y=>y.clone());const c=(l=(o=s.variables.find(({name:y})=>y===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:y})=>y==="StdTime"),u=n.find(({dimensionName:y})=>y==="StdTime");if(!c||!u)return{...t,multidimensionalDefinition:null};const{start:h,end:f}=a,m=h==null?null:h.getTime(),p=f==null?null:f.getTime(),g=m??p,d=p??m;if(c.values!=null){const y=c.values.filter(x=>{if(Array.isArray(x)){if(g===d)return x[0]<=g&&x[1]>=g;const w=x[0]<=g&&x[1]>g||x[0]<d&&x[1]>=d,S=x[0]>=g&&x[1]<=d||x[0]<g&&x[1]>d;return w||S}return g===d?x===g:x>=g&&x<=d});if(y.length){const x=y.sort((w,S)=>{const v=Array.isArray(w)?w[0]:w,T=Array.isArray(w)?w[1]:w,F=Array.isArray(S)?S[0]:S,_=Array.isArray(S)?S[1]:S;return g===d?v-F:Math.abs(T-d)-Math.abs(_-d)})[0];u.values=[x]}else n=null}else if(c.hasRegularIntervals&&c.extent){const[y,x]=c.extent;g>x||d<y?n=null:u.values=g===d?[g]:[Math.max(y,g),Math.min(x,d)]}}return n!=null&&Gt(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){var u,h;if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const f=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&f&&this._set("rasterFunction",$e.fromJSON(f)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let t,s=this.raster,n=!1;s.datasetFormat==="Function"?(t=s.primaryRasters.rasters,s=t[0],n=!0):t=[s];const{rasterFunction:a}=this;if(a){const f={raster:s};t.length>1&&t.forEach(g=>f[g.url]=g);const m=De(a.rasterFunctionDefinition??a.toJSON(),f),p=new Oe({rasterFunction:m});p.rasterJobHandler=this._rasterJobHandler.instance,await p.open(),this._cachedRasterFunctionJson=(h=this.rasterFunction)==null?void 0:h.toJSON(),this.raster=p}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o!=null&&o.length?o.some(f=>f>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:s}=this;if(!t||!s||!this.renderer)return;const{rasterInfo:n}=this.raster,a=qe(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=a==null?void 0:a.name,l=Ge({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=je(n,o),s.rendererJSON=l,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=l)}async applyRenderer(t,s){const n=t&&t.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:s,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:s,bandIds:l}),a}getTileUrl(t,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${s}/${n}`:""}getCompatibleTileInfo(t,s,n=!1){if(!this.loaded||s==null)return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=bt(t);return pe.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,s,n,a={}){var l;if(r(this),a.requestAsImageElement){const c=this.getTileUrl(t,s,n);return nt(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(u=>u.data)}const{rasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const c=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,s,n,c),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),((l=this.renderer)==null?void 0:l.type)==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,s,n,a)}async fetchPixels(t,s,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),n=Math.round(n),this.raster.fetchPixels(t,s,n,a))}async identify(t,s={}){var l;const{raster:n,rasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(lt(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:t,value:null};const o=(l=this.multidimensionalSubset)==null?void 0:l.areaOfInterest;if(o&&!o.contains(t))throw new B("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,o,l;const t=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if(t==null||((o=this.rasterInfo)==null?void 0:o.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,n=(l=s==null?void 0:s[0])==null?void 0:l.variableName;return t.variables.some(c=>c.name===n&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){var n;const s=t??((n=this.rasterInfo)==null?void 0:n.multidimensionalInfo);return jt(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=We(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Yt;return this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var t;if(this.interpolation==null){r(this);const{raster:s}=this,n=Ut(s.rasterInfo,s.tileType,(t=this.sourceJSON)==null?void 0:t.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){var u,h;r(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Vt(s));const n=qe(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n==null?void 0:n.name;if(!this.renderer||t==="override"){const f=Ue(s,{bandIds:this.bandIds,variableName:a}),m=s.statistics,p=m&&m.length>0?m[0]:null,g=(p==null?void 0:p.max)??0,d=(p==null?void 0:p.min)??0;this.raster.datasetFormat==="WCSServer"&&f.type==="raster-stretch"&&(g>1e24||d<-1e24)&&(f.dynamicRangeAdjustment=!0,f.statistics=null,f.stretchType==="none"&&(f.stretchType="min-max")),this.renderer=f}const o=Ge({...this.renderer.toJSON(),variableName:a}),l=je(s,a);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new oi({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:f}=this.raster.rasterInfo,m=this.renderer;if(f!=null)if(m.type!=="raster-colormap")this._configDefaultRenderer("override");else{const p=Ue(this.raster.rasterInfo);JSON.stringify(p)!==JSON.stringify(m)&&this._configDefaultRenderer("override")}else if(m.type==="raster-stretch"){const p=(u=this.bandIds)==null?void 0:u.length,g=(h=m.statistics)==null?void 0:h.length;!m.dynamicRangeAdjustment&&g&&p&&g!==p&&this._configDefaultRenderer("override")}}}else tt.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.rasterInfo)throw new B("imagery-tile","no raster")}return I([R()],e.prototype,"_cachedRendererJson",void 0),I([R()],e.prototype,"_cachedRasterFunctionJson",void 0),I([R()],e.prototype,"_compatibleFullExtent",void 0),I([R()],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([R()],e.prototype,"_rasterJobHandler",void 0),I([R()],e.prototype,"bandIds",void 0),I([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([R({json:{read:!1}})],e.prototype,"fullExtent",null),I([R()],e.prototype,"interpolation",void 0),I([R()],e.prototype,"ioConfig",void 0),I([R({type:[ct],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([R({type:At,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([R()],e.prototype,"raster",void 0),I([R({type:$e})],e.prototype,"rasterFunction",null),I([R()],e.prototype,"rasterInfo",void 0),I([R()],e.prototype,"sourceJSON",void 0),I([R({readOnly:!0,type:q,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([R({json:{read:!1}})],e.prototype,"tileInfo",null),I([R(ut)],e.prototype,"url",null),I([R({types:Ht,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var s;const t=((s=this.renderer)==null?void 0:s.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Lt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([It("renderer")],e.prototype,"readRenderer",null),I([R()],e.prototype,"symbolizer",void 0),e=I([Q("esri.layers.ImageryTileMixin")],e),e};function Ui(i){const e=i.fields,r=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=s.map(c=>c.name),a=[];let o=0,l=0;return r.forEach(c=>{const u={};for(u[t]=o++,l=1;l<n.length;l++)u[n[l]]=c[l-1];a.push({attributes:u})}),{displayFieldName:"",fields:s,features:a}}class dt{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const s=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),o={version:t,recordCount:s,headerByteCount:n,recordByteCount:a};let l=32;const c=[],u=[];let h;if(t===3){for(;r.getUint8(l)!==13;)h=String.fromCharCode(r.getUint8(l+11)).trim(),c.push({name:Ve(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:r.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<s&&e.byteLength-l>a;){const f=[];r.getUint8(l)===32?(l+=1,c.forEach(m=>{if(m.type==="C")f.push(Ve(new Uint8Array(e,l,m.length)).trim());else if(m.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if(m.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if(m.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=m.length}),u.push(f)):l+=a}}return{header:o,fields:c,records:u,recordSet:Ui({fields:c,records:u})}}}const se=new Map;se.set("int16","esriFieldTypeSmallInteger"),se.set("int32","esriFieldTypeInteger"),se.set("int64","esriFieldTypeInteger"),se.set("float32","esriFieldTypeSingle"),se.set("float64","esriFieldTypeDouble"),se.set("text","esriFieldTypeString");const it=8;let he=class extends ae{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(r))throw new B("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:s}=this._parseHeader(r);if(s.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();s.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,r,t,s={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=s,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,r,t,s.multidimensionalDefinition,a),u=this._getIndexRecordFromBundle(r,t,o),h=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=new Uint8Array(h.data),m=this._getTileEndAndContentType(f,u);if(m.recordSize===0)return null;const p=await this.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:s.signal});if(!p)return null;const[g,d]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:g,height:d,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const r=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!r.some(t=>!e[t])}_parseHeader(e){var J;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:s,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map(O=>({min:O.min,max:O.max,avg:O.mean,stddev:O.standardDeviation,median:O.median,mode:O.mode})),h=e.extent.spatialReference,f=(J=e.geodataXform)==null?void 0:J.spatialReference,m=new q(h!=null&&h.wkid||h!=null&&h.wkt?h:f);let p=new H({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const g=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),d=Math.round((p.xmax-p.xmin)/g.x),y=Math.round((p.ymax-p.ymin)/g.y),x=this._parseTransform(e.geodataXform),w=x?p:null;x&&(p=x.forwardTransform(p),g.x=(p.xmax-p.xmin)/d,g.y=(p.ymax-p.ymin)/y);const S=e.properties??{},v=e.format.toLowerCase().replace("cache/",""),T=new A(e.origin.x,e.origin.y,m);let F,_,k,b;if(n&&n.colors)for(F=[],_=0;_<n.colors.length;_++)k=n.colors[_],b=n.values?n.values[_]:_,F.push([b,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);const C=e.LODInfos,P=[];for(_=0;_<C.levels.length;_++)P.push(new at({level:C.levels[_],resolution:C.resolutions[_],scale:96/.0254*C.resolutions[_]}));const N=new pe({dpi:96,lods:P,format:v,origin:T,size:[a,o],spatialReference:m}),$={recordSize:it,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*it+64},M=[{maxCol:Math.ceil(d/a)-1,maxRow:Math.ceil(y/o)-1,minCol:0,minRow:0}];let D=2;if(c>0)for(_=0;_<c;_++)M.push({maxCol:Math.ceil(d/D/a)-1,maxRow:Math.ceil(y/D/o)-1,minCol:0,minRow:0}),D*=2;const z=e.mdInfo;let V=null;if(z&&S._yxs){const O=S._yxs;V={packetSize:O.PacketSize,tileSize:[O.TileXSize,O.TileYSize]}}return{storageInfo:$,rasterInfo:new ge({width:d,height:y,pixelType:r,bandCount:t,extent:p,nativeExtent:w,transform:x,spatialReference:m,pixelSize:g,keyProperties:S,statistics:u,histograms:s,multidimensionalInfo:z,colormap:F,storageInfo:new ye({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:T,tileInfo:N,transposeInfo:V,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:M})})}}_parseTransform(e){var t,s;if(!Ti(e))throw new B("cloudraster:open","the data contains unsupported geodata transform types");const r=_i(e);if(r.type==="identity")return null;if(r.type!=="polynomial"||!((t=r.forwardCoefficients)!=null&&t.length)||!((s=r.inverseCoefficients)!=null&&s.length))throw new B("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const r=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),s=await Promise.all([r,t]);let n;if(s[0]){let a=s[0].fields;const o=s[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":se.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&s[1]&&(n=dt.parse(s[1]).recordSet),ft.fromJSON(n)}_buildCacheFilePath(e,r,t,s,n){const a=this._getPackageSize(!!n),o=Math.floor(r/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,f=s==null?void 0:s[0];if(h==null||!f)return`${this.url}/_alllayers/${u}/${c}.bundle`;let m="_yxs";if(!n){m=h.variables.find(d=>d.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const g=4-m.length;for(let d=0;d<g;d++)m="0"+m;m="S"+m}const p=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${p}/${m}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:r}=this.rasterInfo.storageInfo;return e&&r!=null?r.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:r}=this.rasterInfo,{transposeInfo:t}=r;return e&&t!=null?t.tileSize:r.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,r,t=!1){const s=this._getPackageSize(t),n=s*(e%s)+r%s;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,r){const t=e.subarray(r,r+8);let s,n=0;for(s=0;s<5;s++)n|=(255&t[s])<<8*s;const a=0xffffffffff&n;for(n=0,s=5;s<8;s++)n|=(255&t[s])<<8*(s-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let r=e.toString(16);if(r.length!==4){let t=4-r.length;for(;t-- >0;)r="0"+r}return r}};I([R({readOnly:!0})],he.prototype,"storageInfo",void 0),I([R({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=I([Q("esri.layers.support.rasterDatasets.CloudRaster")],he);const Vi=he;let fe=class extends ae{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const r=this.data,{pixelBlock:t,statistics:s,histograms:n,name:a,keyProperties:o,nativeExtent:l,transform:c}=this.data,{width:u,height:h,pixelType:f}=t,m=r.extent??new H({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new q({wkid:3857})}),p=r.isPseudoSpatialReference??!r.extent,g={x:m.width/u,y:m.height/h},d=new ge({width:u,height:h,pixelType:f,extent:m,nativeExtent:l,transform:c,pixelSize:g,spatialReference:m.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:s,isPseudoSpatialReference:p,histograms:n});this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,r,t,s={}){const n=this._pixelBlockTiles.get(`${e}/${r}/${t}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,r,t){var u,h;const s=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:r,maximumPyramidLevel:s},t):Promise.resolve(li(e,r,s)),a=this.rasterInfo.statistics!=null,o=this.rasterInfo.histograms!=null,l=a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},t):Promise.resolve(ci(e)),c=await ot([n,l]);if(!c[0].value&&c[1].value)throw new B("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,a||(this.rasterInfo.statistics=(u=c[1].value)==null?void 0:u.statistics),o||(this.rasterInfo.histograms=(h=c[1].value)==null?void 0:h.histograms)}};I([R({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),I([R()],fe.prototype,"data",void 0),fe=I([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],fe);const Yi=fe;function ce(i,e){if(!i||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=ce(i,r);for(let a=0;a<n.length;a++)ce(n[a],e).forEach(o=>t.push(o));return t}const s=i.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let n=0;n<s.length;n++)t.push(s[n]||s.item(n));return t}function U(i,e){if(!i||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=ce(i,r);return t.length>0?e?U(t[0],e):t[0]:null}function K(i,e=null){const r=e?U(i,e):i;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function Xi(i,e){const r=ce(i,e),t=[];let s;for(let n=0;n<r.length;n++)s=r[n].textContent||r[n].nodeValue,s&&(s=s.trim(),s!==""&&t.push(s));return t}function Ie(i,e){return Xi(i,e).map(r=>Number(r))}function ne(i,e){const r=K(i,e);return Number(r)}function Fe(i,e){var s;const r=(s=i==null?void 0:i.nodeName)==null?void 0:s.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function st(i,e){if(!i||!e)return null;const r=[];for(let t=0;t<i.length;t++)r.push(i[t]),r.push(e[t]);return r}function Ki(i){const e=U(i,"GeodataXform"),r=Te(ne(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=ne(e,"PolynomialOrder")??1,s=Ie(e,"CoeffX/Double"),n=Ie(e,"CoeffY/Double"),a=Ie(e,"InverseCoeffX/Double"),o=Ie(e,"InverseCoeffY/Double"),l=st(s,n),c=st(a,o);return{spatialReference:r,transform:l&&c&&l.length&&c.length?new Je({spatialReference:r,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Qi(i){var f;const e=ne(i,"NoDataValue"),r=U(i,"Histograms/HistItem"),t=ne(r,"HistMin"),s=ne(r,"HistMax"),n=ne(r,"BucketCount"),a=(f=K(r,"HistCounts"))==null?void 0:f.split("|").map(m=>Number(m));let o,l,c,u;ce(i,"Metadata/MDI").forEach(m=>{const p=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":u=p}});const h=ne(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a!=null&&a.length&&t!=null&&s!=null?{min:t,max:s,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function Te(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new q({wkid:e});if((i=String(i)).startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const r=i.indexOf("VERTCS"),t=i.indexOf("PROJCS"),s=t>-1?t:i.indexOf("GEOGCS");if(s===-1)return null;const n=i.slice(s,i.lastIndexOf("]",r)+1).trim(),a=i.slice(r,i.lastIndexOf("]")).trim();e=Ce(n);const o=new q(e?{wkid:e}:{wkt:n}),l=Ce(a);return l&&(o.vcsWkid=l),o}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Ce(i),new q(e!==0?{wkid:e}:{wkt:i})):null}function Ce(i){var s;const e=i.replaceAll("]","[").replaceAll('"',"").split("[").map(n=>n.trim()).filter(n=>n!==""),r=e[e.length-1].split(","),t=(s=r[0])==null?void 0:s.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Ae(i){var t;if(((t=i==null?void 0:i.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Fe(s,"SRS")){if(!e.spatialReference){const n=K(s);e.spatialReference=Te(n)}}else if(Fe(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Ki(s);e.transform=a,e.spatialReference||(e.spatialReference=n)}else ce(s,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Fe(s,"PAMRasterBand")){const n=Qi(s);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const r=e.rasterBands;if(r.length){const s=!!r[0].statistics;e.statistics=s?r.map(a=>a.statistics).filter(Pe):null;const n=!!r[0].histogram;e.histograms=n?r.map(a=>a.histogram).filter(Pe):null}return e}let Re=class extends ae{async open(i){await this.init();const e=await this._fetchData(i);let{spatialReference:r,statistics:t,histograms:s,transform:n}=await this._fetchAuxiliaryData(i);const a=!r;a&&(r=new q({wkid:3857})),s!=null&&s.length&&t==null&&(t=Ne(s));const{width:o,height:l}=e;let c=new H({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const m=n.forwardCoefficients;h=m&&m[1]===0&&m[2]===0,h&&(n=null,c=u)}const f=new Yi({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(i,e,r,t={}){return this._inMemoryRaster.fetchRawTile(i,e,r,t)}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i==null?void 0:i.signal}),r=ui(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new B("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),s=t==="gif"||t==="bmp"||!St("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:s,hasNoZlibMask:!0});if(n==null)throw new B("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(i){var c;const e=i==null?void 0:i.signal,r=this.ioConfig.skipExtensions??[],t=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),s=this.datasetFormat,n=s==="JPG"?"jgw":s==="PNG"?"pgw":s==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ot([t,a]);if(e!=null&&e.aborted)throw Rt();const l=Ae((c=o[0].value)==null?void 0:c.data);if(!l.transform){const u=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(h=>Number(h)):null;l.transform=(u==null?void 0:u.length)===6?new Je({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return l}};I([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=I([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const be=Re;let de=class extends ae{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(i){var F,_;await this.init();const e=i&&i.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=r.data;if(this.sourceJSON=t,!t)throw new B("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new B("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(s.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=((F=t.name)==null?void 0:F.slice(t.name.indexOf("/")+1))??"";const n=await this._fetchRasterInfo({signal:e});if(n==null)throw new B("image-server-raster:open","cannot initialize image service");const a=this.tileType==="Map"?Bi(t.tileInfo,t):pe.fromJSON(t.tileInfo);vt(a);const[o,l]=this._computeMinMaxLOD(n,a),{extent:c,pixelSize:u}=n,h=.5/n.width*u.x,f=Math.max(u.x,u.y),{lods:m}=a;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>h||!m.some(k=>Math.abs(k.resolution-f)<h))&&(u.x=u.y=o.resolution,n.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const p=o.level-l.level,[g,d]=a.size,y=[],x=[];m.forEach((k,b)=>{k.level>=l.level&&k.level<=o.level&&y.push({x:k.resolution,y:k.resolution}),b<m.length-1&&x.push(Math.round(10*k.resolution/m[b+1].resolution)/10)}),y.sort((k,b)=>k.x-b.x);const w=this.computeBlockBoundary(c,g,d,a.origin,y,p),S=y.length>1?y.slice(1):null;let v;t.transposeInfo&&(v={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:((_=n.keyProperties)==null?void 0:_._yxs.PacketSize)??0});const T=x.length<=1||x.length>=3&&x.slice(0,x.length-1).every(k=>k===x[0])?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/p))/10;if(n.storageInfo=new ye({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:S,pyramidScalingFactor:T,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,transposeInfo:v,blockBoundary:w}),this._fixGCSShift(n),this._set("rasterInfo",n),t.capabilities.toLowerCase().includes("tilemap")){const k={tileInfo:n.storageInfo.tileInfo,parsedUrl:Tt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Di({layer:k})}}async fetchRawTile(i,e,r,t={}){const{storageInfo:s,extent:n}=this.rasterInfo,{transposeInfo:a}=s,o=a!=null&&!!t.transposedVariableName;if(this._slices&&!o&&t.sliceId==null)return null;const l=o?0:s.maximumPyramidLevel-i+this._levelOffset,c=`${this.url}/tile/${l}/${e}/${r}`,u=this._slices?o?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!h)return null;const f=o?a.tileSize:s.tileInfo.size,m=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(m==null)return null;const p=s.blockBoundary[i];if(s.compression!=="jpg"||r>p.minCol&&r<p.maxCol&&e>p.minRow&&e<p.maxRow)return m;const{origin:g,blockWidth:d,blockHeight:y}=s,{x,y:w}=this.getPyramidPixelSize(i),S=Math.round((n.xmin-g.x)/x)%d,v=Math.round((n.xmax-g.x)/x)%d||d,T=Math.round((g.y-n.ymax)/w)%y,F=Math.round((g.y-n.ymin)/w)%y||y,_=r===p.minCol?S:0,k=e===p.minRow?T:0,b=r===p.maxCol?v:d,C=e===p.maxRow?F:y;return hi(m,{x:_,y:k},{width:b-_,height:C-k}),m}getSliceIndex(i){if(!this._slices||i==null||i.length===0)return null;const e=i;for(let r=0;r<this._slices.length;r++){const t=this._slices[r].multidimensionalDefinition;if(t.length===e.length&&!t.some(s=>{const n=e.find(a=>s.variableName===a.variableName&&a.dimensionName===s.dimensionName);return n?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return r}return null}async fetchVariableStatisticsHistograms(i,e){const r=this.request(this.url+"/statistics",{query:{variable:i,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.statistics}),t=this.request(this.url+"/histograms",{query:{variable:i,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.histograms}),s=await Promise.all([r,t]);return s[0]&&s[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(i,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(i,0,e.datumTransformation);if(r===null)return null;let t=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let n=s-t+this._levelOffset;const a=r.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,r.row,r.col,e)==="available")break}catch{}if(n--,t++,r=this.identifyPixelLocation(a,t,e.datumTransformation),r===null)return null}return n===-1||r==null?null:t}async _fetchRasterInfo(i){const e=this.sourceJSON;if(this.tileType==="Map"){const a=e.fullExtent||e.extent,o=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),l=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=q.fromJSON(e.spatialReference||a.spatialReference),u=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ge({width:o,height:l,bandCount:3,extent:H.fromJSON(a),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=i,t=Xt(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(a=>a.data&&a.data.slices).catch(()=>null):null,n=await Promise.all([t,s]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_fixGCSShift(i){const{extent:e,spatialReference:r}=i;e.xmin>-1&&e.xmax>181&&(r!=null&&r.wkid)&&r.isGeographic&&(i.nativeExtent=i.extent,i.transform=new ki,i.extent=i.transform.forwardTransform(e))}_computeMinMaxLOD(i,e){const{pixelSize:r}=i,t=.5/i.width*r.x,{lods:s}=e,n=e.lodAt(Math.max.apply(null,s.map(f=>f.level))),a=e.lodAt(Math.min.apply(null,s.map(f=>f.level))),{tileType:o}=this;if(o==="Map")return this._levelOffset=s[0].level,[n,a];if(o==="Raster")return[s.find(f=>f.resolution===r.x)??n,a];const{minScale:l,maxScale:c}=this.sourceJSON;let u=n;c>0&&(u=s.find(f=>Math.abs(f.scale-c)<t),u||(u=s.filter(f=>f.scale>c).sort((f,m)=>f.scale>m.scale?1:-1)[0]??n));let h=a;return l>0&&(h=s.find(f=>Math.abs(f.scale-l)<t)??a,this._levelOffset=h.level-a.level),[u,h]}};I([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),I([R()],de.prototype,"tileType",void 0),de=I([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],de);const Zi=de,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let le=class extends ae{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(i){var g;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?i.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:s}=this._parseHeader(r.data);if(((g=this.ioConfig.skipExtensions)==null?void 0:g.indexOf("aux.xml"))===-1){const d=await this._fetchAuxiliaryData(i);d!=null&&(t.statistics=d.statistics??t.statistics,t.histograms=d.histograms,d.histograms&&t.statistics==null&&(t.statistics=Ne(d.histograms)))}this._set("rasterInfo",t),this._files=s;const n=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let m=0,p=-1;for(;m<this._storageIndex.length;){p++;const d=Math.ceil(c/a/l**p)-1,y=Math.ceil(u/o/l**p)-1;m+=(d+1)*(y+1)*f*4,h.push({maxRow:y,maxCol:d,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(i,e,r,t={}){const{blockWidth:s,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[i];if(!o||o.maxRow<e||o.maxCol<r||o.minRow>e||o.minCol>r)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(i,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const b=new Uint8Array(s*n);return new Z({width:s,height:n,pixels:null,mask:b,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<p;d++)m&&!m.includes(d)||g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(b=>b.data.byteLength).reduce((b,C)=>b+C),w=new Uint8Array(x);let S=0;for(d=0;d<p;d++)w.set(new Uint8Array(y[d].data),S),S+=y[d].data.byteLength;const v=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,T=await this.decodePixelBlock(w.buffer,{width:s,height:n,format:v,planes:(m==null?void 0:m.length)||l,pixelType:c});if(T==null)return null;let{noDataValue:F}=this.rasterInfo;if(F!=null&&v!=="lerc"&&!T.mask&&(F=F[0],F!=null)){const b=T.width*T.height,C=new Uint8Array(b);if(Math.abs(F)>1e24)for(d=0;d<b;d++)Math.abs((T.pixels[0][d]-F)/F)>1e-6&&(C[d]=1);else for(d=0;d<b;d++)T.pixels[0][d]!==F&&(C[d]=1);T.mask=C}let _=0,k=0;if(h!==s||f!==n){let b=T.mask;if(b)for(d=0;d<n;d++)if(k=d*s,d<f)for(_=h;_<s;_++)b[k+_]=0;else for(_=0;_<s;_++)b[k+_]=0;else for(b=new Uint8Array(s*n),T.mask=b,d=0;d<f;d++)for(k=d*s,_=0;_<h;_++)b[k+_]=1}return T}_parseIndex(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,s,n,a;if(fi){for(r=new Uint8Array(i),s=new ArrayBuffer(i.byteLength),t=new Uint8Array(s),n=0;n<i.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=r[4*n+3-a];e=new Uint32Array(s)}else e=new Uint32Array(i);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,r){const{blockWidth:t,blockHeight:s,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,m=0;for(h=0;h<i;h++)m=n**h,c=Math.ceil(a/t/m),u=Math.ceil(o/s/m),f+=c*u;m=n**i,c=Math.ceil(a/t/m),u=Math.ceil(o/s/m),f+=e*c+r,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=p[4*x]*2**32+p[4*x+1],d=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<c-1?t:Math.ceil(a/m)-t*(c-1),actualTileHeight:e<u-1?s:Math.ceil(o/m)-s*(u-1)}}_parseHeader(i){const e=U(i,"MRF_META/Raster");if(!e)throw new B("mrf:open","not a valid MRF format");const r=U(e,"Size"),t=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new B("mrf:open","currently does not support compression "+a);const o=K(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new B("mrf:open","currently does not support pixel type "+o);const c=U(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=U(e,"DataValues");let m,p;if(f&&(p=f.getAttribute("NoData"),p!=null&&(m=p.trim().split(" ").map(C=>parseFloat(C)))),U(i,"MRF_META/CachedSource"))throw new B("mrf:open","currently does not support MRF referencing other data files");const g=U(i,"MRF_META/GeoTags"),d=U(g,"BoundingBox");let y,x=!1;if(d!=null){const C=parseFloat(d.getAttribute("minx")),P=parseFloat(d.getAttribute("miny")),N=parseFloat(d.getAttribute("maxx")),$=parseFloat(d.getAttribute("maxy")),M=K(g,"Projection")||"";let D=q.WGS84;if(M!=="LOCAL_CS[]")if(M.toLowerCase().startsWith("epsg:")){const z=Number(M.slice(5));isNaN(z)||z===0||(D=new q({wkid:z}))}else D=Te(M)??q.WGS84;else x=!0,D=new q({wkid:3857});y=new H(C,P,N,$),y.spatialReference=D}else x=!0,y=new H({xmin:-.5,ymin:.5-s,xmax:t-.5,ymax:.5,spatialReference:new q({wkid:3857})});const w=U(i,"MRF_META/Rsets"),S=parseInt(w&&w.getAttribute("scale")||"2",10),v=y.spatialReference,T=new ye({origin:new A({x:y.xmin,y:y.ymax,spatialReference:v}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:S}),F=new A({x:y.width/t,y:y.height/s,spatialReference:v}),_=new ge({width:t,height:s,extent:y,isPseudoSpatialReference:x,spatialReference:v,bandCount:n,pixelType:l,pixelSize:F,noDataValue:m,storageInfo:T}),k=K(i,"datafile"),b=K(i,"IndexFile");return{rasterInfo:_,files:{mrf:this.url,index:b||this.url.replace(".mrf",".idx"),data:k||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ae(e)}catch{return null}}};I([R()],le.prototype,"_files",void 0),I([R()],le.prototype,"_storageIndex",void 0),I([R({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=I([Q("esri.layers.support.rasterIO.MRFRaster")],le);const es=le,Me=(i,e)=>{var r;return(r=i.get(e))==null?void 0:r.values},ue=(i,e)=>{var r,t;return(t=(r=i.get(e))==null?void 0:r.values)==null?void 0:t[0]};let re=class extends ae{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(i){await this.init();const e=i?i.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new B("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:s,isBigTiff:n}=di(r),a=[];await this._readIFDs(a,r,t,s,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=mi(a),u=pi(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new B("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new B("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const f=await this._fetchAuxiliaryMetaData(i);f!=null&&this._processPAMInfo(f,l)}h.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(i),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(i,e,r,t={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(i,e,r))return null;const s=await this._fetchRawTiffTile(i,e,r,!1,t);if(s!=null&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(i,e,r,!0,t);a!=null&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}_parseIFDs(i){var P,N;const e=yi(i),{width:r,height:t,tileWidth:s,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,tileBoundary:m,affine:p,metadata:g}=e,d=((P=e.extent.spatialReference)==null?void 0:P.wkt)||((N=e.extent.spatialReference)==null?void 0:N.wkid);let y=Te(d),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new q({wkid:3857}));const w=new H({...e.extent,spatialReference:y}),S=new A(w?{x:w.xmin,y:w.ymax,spatialReference:y}:{x:0,y:0}),v=new ye({blockWidth:s,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:S,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),T=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),F=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let _=null;const k=ue(i[0],"PHOTOMETRICINTERPRETATION"),b=Me(i[0],"COLORMAP");if(k<=3&&(b==null?void 0:b.length)>3&&b.length%3==0){_=[];const $=b.length/3;for(let M=0;M<$;M++)_.push([M,b[M]>>>8,b[M+$]>>>8,b[M+2*$]>>>8])}const C=new ge({width:r,height:t,bandCount:a,pixelType:o,pixelSize:T,storageInfo:v,spatialReference:y,isPseudoSpatialReference:x,keyProperties:F,extent:w,colormap:_,statistics:g?g.statistics:null});return p!=null&&p.length&&(C.nativeExtent=new H({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:y}),C.transform=new Je({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new A({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),v.origin.x=-.5,v.origin.y=.5),{imageInfo:e,rasterInfo:C}}_processPAMInfo(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&e.statistics==null&&(e.statistics=Ne(i.histograms)),i.transform&&e.transform==null){e.transform=i.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(i,e,r,t,s,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+s,to:t+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=t+s,t=0);const o=await this._readIFD(e,r,t,s,xe.TIFF_TAGS,n,a);if(i.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(i,e,r,o.nextIFD-s,s,n,a)}async _readIFD(i,e,r,t,s=xe.TIFF_TAGS,n=4,a){var l,c;if(!i)return null;const o=gi(i,e,r,t,s,n);if(o.success){const u=[];if((l=o.ifd)==null||l.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(m=>m.offlineOffsetSize).filter(Pe),f=Math.min.apply(null,h.map(m=>m[0]));if(Math.min.apply(null,h.map(m=>m[0]+m[1]))-f<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:a});i=m,t=f,u.forEach(p=>xi(i,e,p,t))}}if((c=o.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=o.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const m=f[0]+"."+f[1]+"."+f[2],p=await this._readIFD(i,e,h.valueOffset+6-t,t,xe.GEO_KEYS,2,a);h.data=p.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(i,e,0,t,xe.TIFF_TAGS,4,a)}async _fetchRawTiffTile(i,e,r,t,s={}){const n=this._getTileLocation(i,e,r,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,u=a.map(T=>this.request(this.url,{range:T,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),f=h.map(T=>T.data.byteLength).reduce((T,F)=>T+F),m=h.length===1?h[0].data:new ArrayBuffer(f),p=[0],g=[0];if(h.length>1){const T=new Uint8Array(m);for(let F=0,_=0;F<h.length;F++){const k=h[F].data;T.set(new Uint8Array(k),_),p[F]=_,_+=k.byteLength,g[F]=k.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:d,height:y,planes:null,pixelType:null});if(x==null)return null;let w,S,v;if(o!==d||l!==y){let T=x.mask;if(T)for(w=0;w<y;w++)if(v=w*d,w<l)for(S=o;S<d;S++)T[v+S]=0;else for(S=0;S<d;S++)T[v+S]=0;else for(T=new Uint8Array(d*y),x.mask=T,w=0;w<l;w++)for(v=w*d,S=0;S<o;S++)T[v+S]=1}return x}_getTileLocation(i,e,r,t=!1){const{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,a=i===0?0:i-(s-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o==null?void 0:o.ifds[0]:o==null?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=wi(l,o),u=Me(l,"TILEOFFSETS");if(u===void 0)return null;const h=Me(l,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:p,maxCol:g}=n[a];if(e>p||r>g||e<f||r<m)return null;const d=ue(l,"IMAGEWIDTH"),y=ue(l,"IMAGELENGTH"),x=ue(l,"TILEWIDTH"),w=ue(l,"TILELENGTH"),S=c?this.rasterInfo.bandCount:1,v=S*e*(g+1)+r,T=[{from:u[v],to:u[v+S-1]+h[v+S-1]-1}];if(c){let k=!0;for(let b=0;b<S;b++)if(u[v+b]+h[v+b]!==u[v+b+1]){k=!1;break}if(!k)for(let b=0;b<S;b++)T[b]={from:u[v+b],to:u[v+b]+h[v+b]-1}}const F=u[v],_=h[v];return F==null||_==null?null:{ranges:T,ifd:l,actualTileWidth:r===g&&d%x||x,actualTileHeight:e===p&&y%w||w}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i==null?void 0:i.signal});return Ae(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i==null?void 0:i.signal}),r=dt.parse(e);return r!=null&&r.recordSet?ft.fromJSON(r.recordSet):null}catch{return null}}};I([R()],re.prototype,"_files",void 0),I([R()],re.prototype,"_headerInfo",void 0),I([R()],re.prototype,"_bufferSize",void 0),I([R({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),re=I([Q("esri.layers.support.rasterDatasets.TIFFRaster")],re);const ts=re,W=new Map;W.set("CRF",{desc:"Cloud Raster Format",constructor:Vi}),W.set("MRF",{desc:"Meta Raster Format",constructor:es}),W.set("TIFF",{desc:"GeoTIFF",constructor:ts}),W.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Zi}),W.set("JPG",{desc:"JPG Raster Format",constructor:be}),W.set("PNG",{desc:"PNG Raster Format",constructor:be}),W.set("GIF",{desc:"GIF Raster Format",constructor:be}),W.set("BMP",{desc:"BMP Raster Format",constructor:be});class is{static get supportedFormats(){const e=new Set;return W.forEach((r,t)=>e.add(t)),e}static async open(e){const{url:r,ioConfig:t,sourceJSON:s}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:s,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(t!=null&&t.enableCRF))throw new B("rasterfactory:open",`cannot open raster: ${r}`);return o=W.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new B("rasterfactory:open","not a supported format "+n);const c=Array.from(W.keys());let u=0;const h=()=>(n=c[u++],n&&(n!=="CRF"||t!=null&&t.enableCRF)?(o=W.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null);return h()}static register(e,r,t){W.has(e.toUpperCase())||W.set(e.toUpperCase(),{desc:r,constructor:t})}}let E=class extends Ot(Pi(Ci(Mi(zt(ji($i(Dt(_t(Bt($t)))))))))){constructor(...i){super(...i),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(kt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var o;let i=[new me({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,r=e==null?void 0:e.attributeTable,t=r!=null?r.fields:null,s="Raster.";if(t){const l=t.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const u=c.clone();return u.name=s+c.name,u});i=i.concat(l)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){const l=(o=a.variables[0].unit)==null?void 0:o.trim(),c="Magnitude"+(l?` (${l})`:"");i.push(new me({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),i.push(new me({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(i){return Oi({fields:this.rasterFields,title:this.title},i)}async generateRasterInfo(i,e){if(!(i=Ee($e,i)))return this._primaryRasters[0].rasterInfo;try{const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const t=De(i.rasterFunctionDefinition??i.toJSON(),r),s=new Oe({rasterFunction:t});return await s.open(e),s.rasterInfo}catch{return null}}write(i,e){const{raster:r}=this;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new B("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,s=[this.url];t&&Fi(t.toJSON(),s);const n=await Promise.all(s.map(o=>is.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i}))),a=n.findIndex(o=>o==null);if(a>-1)throw new B("imagery-tile-layer:open",`cannot open raster: ${s[a]}`);if(this._primaryRasters=n,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>o[u.url]=u);const l=De(t.rasterFunctionDefinition??t.toJSON(),o),c=new Oe({rasterFunction:l});try{await c.open(),this.raster=c}catch(u){const h=ze.getLogger(this.declaredClass);u instanceof B&&h.error("imagery-tile-layer:open",u.message),h.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const r=this.raster.rasterInfo;if(!r)throw new B("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ft(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};I([R()],E.prototype,"_primaryRasters",void 0),I([R({type:[Ct],json:{write:{overridePolicy(){var i;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((i=this.bandIds)==null?void 0:i.join(","))!=="0,1,2"}}}}})],E.prototype,"bandIds",void 0),I([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Mt(Kt)],E.prototype,"interpolation",void 0),I([R(Qt)],E.prototype,"legendEnabled",void 0),I([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),I([R({type:["show","hide"]})],E.prototype,"listMode",void 0),I([R({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),I([R()],E.prototype,"sourceJSON",void 0),I([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),I([R({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),I([R({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),I([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,r){e[r]=!i}}}})],E.prototype,"popupEnabled",void 0),I([R({type:Pt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],E.prototype,"popupTemplate",void 0),I([R({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),I([R({readOnly:!0,type:[me]})],E.prototype,"fields",void 0),I([R({readOnly:!0,type:[me]})],E.prototype,"rasterFields",null),E=I([Q("esri.layers.ImageryTileLayer")],E);const zs=E;export{zs as default};
