import{ab as s,ac as m,as as C,ad as I,B as M,s as g,d as F,J as E,D as R,ap as q}from"./index-33447e96.js";import{a as b}from"./BitmapContainer-96dd0d06.js";import{f as U,d as V}from"./LayerView-63cfe32c.js";import{v as W}from"./ExportStrategy-f6f28b30.js";import{i as L}from"./RefreshableLayerView-c3fe9435.js";import{l as H}from"./ExportWMSImageParameters-3dc0ca5e.js";import"./WGLContainer-f2db8c6a.js";import"./definitions-43101aab.js";import"./VertexArrayObject-fcc631b6.js";import"./Texture-ae035b7e.js";import"./enums-74e97557.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-4ec871e0.js";import"./enums-55085e26.js";import"./ProgramTemplate-554c3de6.js";import"./MaterialKey-86343bd5.js";import"./utils-d2f94899.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-69bdcc92.js";import"./earcut-61f7b102.js";import"./Bitmap-e2fa9fd7.js";const j=e=>{let t=class extends e{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(r){const{layer:a}=this;if(!r)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const{popupEnabled:p}=a;if(!p)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:p}));const d=this.createFetchPopupFeaturesQuery(r);if(!d)return Promise.resolve([]);const{extent:i,width:o,height:n,x:u,y:c}=d;if(!(i&&o&&n))throw new g("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:o,height:n});return a.fetchFeatureInfo(i,o,n,u,c)}};return s([m()],t.prototype,"exportImageParameters",void 0),s([m({readOnly:!0})],t.prototype,"exportImageVersion",null),s([m()],t.prototype,"layer",void 0),s([m(C)],t.prototype,"timeExtent",void 0),t=s([I("esri.layers.mixins.WMSLayerView")],t),t};let h=class extends j(L(U(V))){constructor(){super(...arguments),this.bitmapContainer=new b}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch(t=>{F(t)||E.getLogger(this.declaredClass).error(t)})}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:r}=e;this.bitmapContainer=new b,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:r}=this,{x:a,y:p}=e,{spatialReference:d}=t;let i,o=0,n=0;if(r.children.some($=>{const{width:x,height:f,resolution:w,x:l,y}=$,v=l+w*x,P=y-w*f;return a>=l&&a<=v&&p<=y&&p>=P&&(i=new q({xmin:l,ymin:P,xmax:v,ymax:y,spatialReference:d}),o=x,n=f,!0)}),!i)return null;const u=i.width/o,c=Math.round((a-i.xmin)/u),S=Math.round((i.ymax-p)/u);return{extent:i,width:o,height:n,x:c,y:S}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,a){return this.layer.fetchImageBitmap(e,t,r,{timeExtent:this.timeExtent,...a})}};s([m()],h.prototype,"strategy",void 0),s([m()],h.prototype,"updating",void 0),h=s([I("esri.views.2d.layers.WMSLayerView2D")],h);const pt=h;export{pt as default};
