import{bL as K,D as I,E as A,aQ as X,w as Z,J as k,s as ee,t as te,b as L,bM as M,bN as re,bO as ie,f as se,bi as oe,bl as ne,M as ae,bj as le,i as he,j as me,bP as pe,bn as ce,V as de,an as W,b7 as ue,b8 as fe,bQ as _e,d as ye,bf as ve,az as ge,ae as x,af as D,ai as we,O as be,bR as Re}from"./index-175d32d0.js";import"./UniqueValueRenderer-288172e9.js";import"./jsonUtils-10bdfdc6.js";import{j as Me,i as z}from"./perspectiveUtils-77c5757f.js";import"./MagnifierPrograms-db14d43e.js";import{a as xe}from"./Container-ca0c82d8.js";import"./BufferPool-1b10a663.js";import{T as Ee}from"./color-5599f865.js";import{i as $e,w as Te}from"./WGLContainer-d2c666b5.js";import{D as Ce,F as H}from"./enums-74e97557.js";import{a as Ve,u as Se}from"./TextureDescriptor-d0f0e66d.js";import"./ProgramTemplate-8ba0c0b6.js";import"./MaterialKey-532bc99f.js";import"./utils-2b389eab.js";import{c as Q,a as qe}from"./VertexArrayObject-90380ad0.js";import"./StyleDefinition-fbc907c2.js";import"./enums-fb086c25.js";import"./OrderIndependentTransparency-5b5adc11.js";import"./floatRGBA-660570aa.js";import"./GraphicsView2D-97791f2f.js";import"./AttributeStoreView-ec64fd81.js";import"./earcut-8a75b10b.js";import"./featureConversionUtils-3787082f.js";import"./lengthUtils-349f6f20.js";import{r as Ae}from"./vec3f32-ad1dc57f.js";import{v as De}from"./normalizeUtils-2391e42c.js";import{e as Ge}from"./mat3f64-221ce671.js";import{f as Pe,d as Oe}from"./LayerView-0bfae0f3.js";import"./LegendOptions-8e12359c.js";import"./diffUtils-1e0b45c5.js";import"./SizeVariable-41a3e64d.js";import"./colorRamps-f4ee9bc5.js";import"./sizeVariableUtils-d4870b0d.js";import"./ColorStop-b164d74d.js";import"./jsonUtils-a54641ba.js";import"./styleUtils-659e6a41.js";import"./featureFlags-a084cf3d.js";import"./DictionaryLoader-9b7beab2.js";import"./LRUCache-05c2e0c8.js";import"./MemCache-8e066c91.js";import"./FieldsIndex-2024344c.js";import"./heatmapUtils-4fba0b55.js";import"./vec4f64-aa64c7e9.js";import"./normalizeUtilsSync-a36bf333.js";import"./normalizeUtilsCommon-b064c045.js";import"./ExpandedCIM-652d49f1.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./enums-55085e26.js";import"./definitions-e9823d3c.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-91ef8d14.js";import"./rasterizingUtils-7aa03a73.js";import"./pbf-5da20d1a.js";import"./GeometryUtils-dd03fc25.js";import"./imageutils-9c353f3a.js";import"./Matcher-a1fdaa6a.js";import"./visualVariablesUtils-ab0340c4.js";import"./visualVariablesUtils-bc0c668d.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-9e8d1948.js";import"./defaultsJSON-b087dd4d.js";import"./OptimizedGeometry-33b2eb0d.js";import"./devEnvironmentUtils-5002a058.js";import"./CircularArray-ef508845.js";import"./DisjointTimerQuery-b21930a9.js";import"./throttle-7bf02de9.js";import"./ComputedAttributeStorage-f8bc0a4c.js";import"./arcadeTimeUtils-b058d7c4.js";import"./executionError-fb3f283a.js";import"./centroid-8e8cfa47.js";import"./parser-be52f54c.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./basicInterfaces-4ab7cc6a.js";import"./projectionSupport-5317a1c8.js";import"./json-48e3ea08.js";import"./labelingInfo-ffafbf0b.js";import"./labelUtils-358af0bc.js";import"./schemaUtils-5e91e5e3.js";import"./sql-d95c95ff.js";import"./clusterUtils-64f88ebd.js";import"./util-63fe79d4.js";import"./TiledDisplayObject-2f7e7371.js";import"./OptimizedFeatureSet-1d1ac4b9.js";const y=Ge();let je=class extends xe{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=K(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(I(()=>this.elementView.element.opacity,t=>this.opacity=t,A),I(()=>[this.elementView.coords],()=>{this.requestRender()},A),X(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&t.content!=null&&this._handles.push(Z(t.content,"play",()=>this.requestRender()))},A)),e.element.load().catch(t=>{k.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new ee("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){this._handles.forEach(e=>e.remove()),this.texture=te(this.texture)}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,i=this.elementView.element.content;if(i!=null){const s=i instanceof HTMLImageElement,o=i instanceof HTMLVideoElement,a=s?i.naturalWidth:o?i.videoWidth:i.width,n=s?i.naturalHeight:o?i.videoHeight:i.height;if(this._updatePerspectiveTransform(a,n),this.texture)o&&!i.paused&&(this.texture.setData(i),this.requestRender(),(t.type===L.WEBGL2||M(a)&&M(n))&&this.texture.generateMipmap());else{const m=new Ve;m.wrapMode=Ce.CLAMP_TO_EDGE,m.preMultiplyAlpha=!0,m.width=a,m.height=n,this.texture=new Se(t,m,i),(t.type===L.WEBGL2||M(a)&&M(n))&&this.texture.generateMipmap(),o&&!i.paused&&this.requestRender()}}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const i=this.elementView.coords;if(i==null)return;const[s,o,a,n]=i.rings[0],m=this._vertices,{x:l,y:h}=e,d=t!==0;d?m.set([o[0]-l,o[1]-h,s[0]-l,s[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h,n[0]-l,n[1]-h,o[0]+t-l,o[1]-h,o[0]+t-l,o[1]-h,s[0]+t-l,s[1]-h,a[0]+t-l,a[1]-h,n[0]+t-l,n[1]-h]):m.set([o[0]-l,o[1]-h,s[0]-l,s[1]-h,a[0]-l,a[1]-h,n[0]-l,n[1]-h]),this.isWrapAround=d}getVAO(e,t,i){if(this.elementView.coords==null)return null;const s=this._vertices;if(this._vao)this._geometryVbo.setData(s);else{this._geometryVbo=Q.createVertex(e,H.DYNAMIC_DRAW,s);const o=Q.createVertex(e,H.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new qe(e,i,t,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(e,t){const i=this._vertices;Me(y,[0,0,e,0,0,t,e,t],[i[0],i[1],i[4],i[5],i[2],i[3],i[6],i[7]]),re(this.perspectiveTransform,y[6]/y[8]*e,y[7]/y[8]*t)}};class Ue extends $e{constructor(){super(...arguments),this._localOrigin=ie(0,0),this._viewStateId=-1,this._dvsMat3=se(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[Te.overlay],target:()=>this.children,drawPhase:Ee.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:i,size:s,pixelRatio:o,resolution:a,rotation:n,viewpoint:m,displayMat3:l}=t;if(this._viewStateId===i)return;const h=Math.PI/180*n,d=o*s[0],f=o*s[1],{x:E,y:g}=m.targetGeometry,$=De(E,t.spatialReference);this._localOrigin.x=$,this._localOrigin.y=g;const T=a*d,w=a*f,p=oe(this._dvsMat3);ne(p,p,l),ae(p,p,le(d/2,f/2)),he(p,p,Ae(d/T,-f/w,1)),me(p,p,-h),this._viewStateId=i}_updateOverlays(e,t){const{state:i}=e,{rotation:s,spatialReference:o,worldScreenWidth:a,size:n,viewpoint:m}=i,l=this._localOrigin;let h=0;const d=pe(o);if(d&&o.isWrappable){const f=n[0],E=n[1],g=180/Math.PI*s,$=Math.abs(Math.cos(g)),T=Math.abs(Math.sin(g)),w=Math.round(f*$+E*T),[p,C]=d.valid,u=ce(o),{x:G,y:F}=m.targetGeometry,N=[G,F],V=[0,0];i.toScreen(V,N);const b=[0,0];let S;S=w>a?.5*a:.5*w;const P=Math.floor((G+.5*u)/u),J=p+P*u,Y=C+P*u,q=[V[0]+S,0];i.toMap(b,q),b[0]>Y&&(h=u),q[0]=V[0]-S,i.toMap(b,q),b[0]<J&&(h=-u);for(const R of t){const O=R.elementView.bounds;if(O==null)continue;const[j,,U]=O;j<p&&U>p?R.updateDrawCoords(l,u):U>C&&j<C?R.updateDrawCoords(l,-u):R.updateDrawCoords(l,h)}}else for(const f of t)f.updateDrawCoords(l,h)}}let _=class extends Pe(Oe){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this._debugGraphicsView=null,this.layer=null,this.elements=new de}attach(){this.addAttachHandles([W(()=>this.layer.effectiveSource,"refresh",()=>{for(const r of this._tileStrategy.tiles)this._updateTile(r);this.requestUpdate()}),W(()=>this.layer.effectiveSource,"change",({element:r})=>this._elementUpdateHandler(r))]),this._overlayContainer=new Ue,this.container.addChild(this._overlayContainer),this._fetchQueue=new ue({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(r,e)=>this._queryElements(r,e)}),this._tileStrategy=new fe({cachePolicy:"purge",resampling:!0,acquireTile:r=>this._acquireTile(r),releaseTile:r=>this._releaseTile(r),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){var r;this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear(),(r=this._debugGraphicsView)==null||r.destroy()}supportsSpatialReference(r){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(r){var e;this._tileStrategy.update(r),(e=this._debugGraphicsView)==null||e.update(r)}async hitTest(r,e){const t=[],i=r.normalize(),s=[i.x,i.y];for(const{projectedElement:{normalizedCoords:o,element:a}}of this._elementReferences.values())o!=null&&_e(o.rings,s)&&t.push({type:"media",element:a,layer:this.layer,mapPoint:r});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(r=>this._updateTile(r))}_acquireTile(r){const e=new Ie(r.clone());return this._updateTile(e),e}_updateTile(r){this.updatingHandles.addPromise(this._fetchQueue.push(r.key).then(e=>{const[t,i]=r.setElements(e);this._referenceElements(r,t),this._dereferenceElements(r,i),this.requestUpdate()},e=>{ye(e)||k.getLogger(this.declaredClass).error(e)}))}_releaseTile(r){this._fetchQueue.abort(r.key.id),r.elements&&this._dereferenceElements(r,r.elements),this.requestUpdate()}async _queryElements(r,e){const t=this.layer.effectiveSource;if(t==null)return[];this.view.featuresTilingScheme.getTileBounds(c,r,!0);const i=new ve({xmin:c[0],ymin:c[1],xmax:c[2],ymax:c[3],spatialReference:this.view.spatialReference});return t.queryElements(i,e)}_referenceElements(r,e){if(this.layer.source!=null)for(const t of e)this._referenceElement(r,t)}_referenceElement(r,e){ge(this._elementReferences,e.uid,()=>{const t=new z({element:e,spatialReference:this.view.spatialReference}),i=new je(t);return this._overlayContainer.addChild(i),this.elements.add(e),{tiles:new Set,projectedElement:t,overlay:i,debugGraphic:null}}).tiles.add(r)}_dereferenceElements(r,e){for(const t of e)this._dereferenceElement(r,t)}_dereferenceElement(r,e){var i;const t=this._elementReferences.get(e.uid);t.tiles.delete(r),t.tiles.size||(this._overlayContainer.removeChild(t.overlay),t.overlay.destroy(),t.projectedElement.destroy(),this._elementReferences.delete(e.uid),this.elements.remove(e),(i=this._debugGraphicsView)==null||i.graphics.remove(t.debugGraphic))}_elementUpdateHandler(r){var i;let e=this._elementReferences.get(r.uid);if(e){const s=e.projectedElement.normalizedCoords;if(s==null)return this._overlayContainer.removeChild(e.overlay),e.overlay.destroy(),e.projectedElement.destroy(),this._elementReferences.delete(r.uid),this.elements.remove(r),void((i=this._debugGraphicsView)==null?void 0:i.graphics.remove(e.debugGraphic));const o=[],a=[];for(const n of this._tileStrategy.tiles){const m=B(this.view.featuresTilingScheme,n,s);e.tiles.has(n)?m||a.push(n):m&&o.push(n)}for(const n of o)this._referenceElement(n,r);for(const n of a)this._dereferenceElement(n,r);return e=this._elementReferences.get(r.uid),void((e==null?void 0:e.debugGraphic)&&(e.debugGraphic.geometry=e.projectedElement.normalizedCoords,this._debugGraphicsView.graphicUpdateHandler({graphic:e.debugGraphic,property:"geometry"})))}const t=new z({element:r,spatialReference:this.view.spatialReference}).normalizedCoords;if(t!=null)for(const s of this._tileStrategy.tiles)B(this.view.featuresTilingScheme,s,t)&&this._referenceElement(s,r)}};x([D()],_.prototype,"_fetchQueue",void 0),x([D()],_.prototype,"layer",void 0),x([D({readOnly:!0})],_.prototype,"elements",void 0),_=x([we("esri.views.2d.layers.MediaLayerView2D")],_);const c=be(),v={xmin:0,ymin:0,xmax:0,ymax:0};function B(r,e,t){return r.getTileBounds(c,e.key,!0),v.xmin=c[0],v.ymin=c[1],v.xmax=c[2],v.ymax=c[3],Re(v,t)}class Ie{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],i=new Set(this.elements);this.elements=e;for(const s of e)i.has(s)?i.delete(s):t.push(s);return this.isReady=!0,[t,Array.from(i)]}destroy(){}}const vr=_;export{vr as default};
