import{nL as v,V as S,gY as w,L as T,e as i,y as s,a as h,t as _,ai as O,aY as L,gE as $,Y as x,K as d,bD as I,a$ as N}from"./index-bdad94d1.js";import{O as M}from"./MultiOriginJSONSupport-60332d9e.js";import{g as b}from"./persistable-2f65766b.js";import{i as A}from"./APIKeyMixin-ce457857.js";import{l as V}from"./ArcGISService-1851ba5b.js";import{c as D}from"./OperationalLayer-6d869fbc.js";import{j as K}from"./PortalLayer-47bcd3d8.js";import{t as j}from"./ScaleRangeLayer-ccfb81e3.js";import{N as J,K as c}from"./SceneService-8c73ea53.js";import{d as U}from"./commonProperties-ea87c313.js";import{s as P,l as E,u as R,m as Y}from"./I3SLayerDefinitions-cfee4d09.js";import{f as y}from"./SceneModification-e6aa2b97.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-5a1ac327.js";import"./portalItemUtils-cf820457.js";import"./originUtils-1469eeaf.js";import"./I3SIndexInfo-5030617b.js";import"./resourceUtils-eeccb48b.js";import"./ElevationInfo-3fa56032.js";var a;let n=a=class extends v(S.ofType(y)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(o=>o.toJSON(e)).filter(o=>!!o.geometry)}static fromJSON(e,o){const r=new a;for(const p of e)r.add(y.fromJSON(p,o));return r}static async fromUrl(e,o,r){const p={url:w(e),origin:"service"},u=await T(e,{responseType:"json",signal:r==null?void 0:r.signal}),g=o.toJSON(),l=[];for(const m of u.data)l.push(y.fromJSON({...m,geometry:{...m.geometry,spatialReference:g}},p));return new a({url:e,items:l})}};i([s({type:String})],n.prototype,"url",void 0),n=a=i([h("esri.layers.support.SceneModifications")],n);const f=n;let t=class extends J(V(D(K(j(M(A(N))))))){constructor(...e){super(...e),this._handles=new _,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(O(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,L))}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}readModifications(e,o,r){this._modificationsSource={url:$(e,r),context:r}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const o=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){x(r)}if(await this._fetchService(o),this._modificationsSource!=null){const r=await f.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,o)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,o){return this._debouncedSaveOperations(c.SAVE_AS,{...o,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};i([s({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([s({type:["show","hide"]})],t.prototype,"listMode",void 0),i([s({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([s({type:P,readOnly:!0})],t.prototype,"nodePages",void 0),i([s({type:[E],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([s({type:[R],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([s({type:[Y],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([s({type:f}),b({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([I(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([s(U)],t.prototype,"elevationInfo",void 0),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([h("esri.layers.IntegratedMeshLayer")],t);const ne=t;export{ne as default};
