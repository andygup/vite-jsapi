import{p as te}from"./colorUtils-c0f43caf.js";import{e as c,y as h,a as y,bB as Wt,af as $e,fF as vt,fy as Q,eK as D,bD as lt,bE as ct,cn as ut,K as qt,a3 as ee,by as _e}from"./index-bdad94d1.js";import{b as Ee,u as d,c as ze,o as Ge,d as gt,n as Oe,v as Fe,k as se,e as Ve,r as Le,g as bt,i as $t,l as Ue,p as Ie,q as Pe,w as We,t as E,x as qe,y as Xe,z as Ne,A as He,B as Je,C as Ke,D as At,E as Ye,M as Ze,F as Qe}from"./dataUtils-624ebab0.js";import{m as ts,p as es}from"./colorRamps-cdef51b0.js";let yt=class extends Wt{constructor(){super(...arguments),this.raster=void 0}};c([h({json:{write:!0}})],yt.prototype,"raster",void 0),yt=c([y("esri.layers.support.rasterFunctions.AspectFunctionArguments")],yt);const S=yt;var Ft;let It=Ft=class extends S{clone(){return new Ft({raster:this.raster})}};It=Ft=c([y("esri.layers.support.rasterFunctions.AspectFunctionArguments")],It);const ss=It,ns=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);let F=class extends Wt{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const n=[t],{parameters:e}=t;let o=e.rasters||e.raster&&[e.raster];for(;o!=null&&o.length;){n.unshift(...o);const r=[];for(let u=0;u<o.length;u++){const{parameters:l}=o[u],p=l.rasters||l.raster&&[l.raster];p!=null&&p.length&&r.push(...p)}o=r}for(let r=n.length-1;r>=0;r--)n[r].isNoopProcess&&n.splice(r,1);let i=!1;for(let r=0;r<n.length;r++){const u=n[r];u.id=n.length-r-1;const{rasters:l}=u.parameters;i=i||l!=null&&l.length>1}const a=n.some(({name:r})=>ns.has(r.toLowerCase()));return{functions:n,hasBranches:i,hasSurfaceFunction:a}}bind(t,n=!1,e=-1){this.id=e+1;const o=this._getRasterValues();let i=!0;for(let a=0;a<o.length;a++){const r=o[a];if(r!=null&&this._isRasterFunctionValue(r)){const u=r.bind(t,n,this.id+a);if(!u.success)return this._bindingResult=u,u;i=i&&u.supportsGPU}}return!this.rasterInfo||n?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=i&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const n=this._getRasterValues(),e=n.length===0?t.pixelBlocks??t.primaryPixelBlocks:n.map(o=>this._readRasterValue(o,t));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let n;if(t.length>1){const i=t.map(r=>r.processInputBandIds()[0]);this.rawInputBandIds=i,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((r,u)=>r!==u);const a=t.filter(r=>r.functionName==="ExtractBand");return a.length&&a.forEach((r,u)=>{r.isInputBandIdsSwizzled=!0,r.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const e=t[0];if(e){if(n=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=n,n}else{n=[];const{bandCount:i}=this.sourceRasterInfos[0];for(let a=0;a<i;a++)n.push(a)}const o=this._getInputBandIds(n);return this.isInputBandIdsSwizzled=o.some((i,a)=>i!==a),this.rawInputBandIds=o,this.rawInputBandIds}getPrimaryRasters(){const t=[],n=[];return this._getPrimaryRasters(this,t,n),{rasters:t,rasterIds:n}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:n,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map(o=>this._isRasterFunctionValue(o)?o.getWebGLProcessorDefinition():typeof o=="number"?{name:"Constant",parameters:{value:o},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:o},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(o=>o!=null)||(t.rasters=null)):this._isRasterFunctionValue(n)&&(t.raster=n.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return((t==null?void 0:t.startsWith("u"))||(t==null?void 0:t.startsWith("s")))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.map(n=>this.functionArguments[n]).flat()}_getSourceRasterInfos(t){const n=this._getRasterValues(),{rasterInfos:e,rasterIds:o}=t;if(n.length===0)return e;const i=n.map(r=>r&&typeof r=="object"&&"bind"in r&&r.rasterInfo?r.rasterInfo:typeof r=="string"&&o.includes(r)?e[o.indexOf(r)]:typeof r!="number"?e[0]:void 0),a=i.find(r=>r)??e[0];return i.forEach((r,u)=>{r===void 0&&(i[u]=a)}),i}_getPrimaryRasterId(t){return t==null?void 0:t.url}_getPrimaryRasters(t,n=[],e=[]){for(let o=0;o<t.sourceRasters.length;o++){const i=t.sourceRasters[o];if(typeof i!="number")if("bind"in i)this._getPrimaryRasters(i,n,e);else{const a=i,r=this._getPrimaryRasterId(a);if(r==null)continue;e.includes(r)||(this.mainPrimaryRasterId===r?(n.unshift(a),e.unshift(r)):(n.push(a),e.push(r)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,n){const{primaryPixelBlocks:e}=n;if(t==null||t==="$$"){const o=e[0];return o==null?null:o.clone()}if(typeof t=="string"){const o=n.primaryRasterIds.indexOf(t);return o===-1?null:e[o]}if(typeof t=="number"){const o=e[0];if(o==null)return null;const{width:i,height:a,pixelType:r,mask:u}=o,l=u?new Uint8Array(u):null,p=new Float32Array(i*a);p.fill(t);const f=this.sourceRasterInfos[0].bandCount,m=new Array(f).fill(p);return new d({width:i,height:a,pixelType:r,pixels:m,mask:l})}return t.process(n)}};c([h({json:{write:!0}})],F.prototype,"functionName",void 0),c([h({json:{write:!0}})],F.prototype,"functionArguments",void 0),c([h()],F.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}}),$e(s=>s==null?void 0:s.toLowerCase())],F.prototype,"outputPixelType",void 0),c([h({json:{write:!0}})],F.prototype,"mainPrimaryRasterId",void 0),c([h()],F.prototype,"sourceRasters",void 0),c([h({type:[Ee],json:{write:!0}})],F.prototype,"sourceRasterInfos",void 0),c([h({json:{write:!0}})],F.prototype,"rasterInfo",void 0),c([h({json:{write:!0}})],F.prototype,"readingBufferSize",void 0),c([h({json:{write:!0}})],F.prototype,"id",void 0),c([h()],F.prototype,"isNoopProcess",void 0),c([h()],F.prototype,"supportsGPU",null),c([h()],F.prototype,"rawInputBandIds",void 0),c([h()],F.prototype,"isInputBandIdsSwizzled",void 0),c([h()],F.prototype,"swizzledBandSelection",void 0),c([h()],F.prototype,"isBranch",void 0),c([h()],F.prototype,"flatWebGLFunctionChain",null),c([h()],F.prototype,"_bindingResult",void 0),F=c([y("esri.layers.support.rasterFunctions.BaseRasterFunction")],F);const k=F;let U=class extends k{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;const t=this.sourceRasterInfos[0];this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const n=t.clone();return n.pixelType=this.outputPixelType,n.statistics=[{min:-1,max:360,avg:180,stddev:30}],n.histograms=null,n.colormap=null,n.attributeTable=null,n.bandCount=1,this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){var r;const n=(r=t.pixelBlocks)==null?void 0:r[0];if(n==null)return null;const{extent:e,primaryPixelSizes:o}=t,i=o==null?void 0:o[0],a=i??(e?{x:e.width/n.width,y:e.height/n.height}:{x:1,y:1});return ze(n,{resolution:a})}};c([h({json:{write:!0,name:"rasterFunction"}})],U.prototype,"functionName",void 0),c([h({type:ss,json:{write:!0,name:"rasterFunctionArguments"}})],U.prototype,"functionArguments",void 0),c([h()],U.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],U.prototype,"isGCS",void 0),U=c([y("esri.layers.support.rasterFunctions.AspectFunction")],U);const rs=U,os=new Set(["+","-","*","/","(",")"]);function is(s,t){(s=s.replaceAll(" ","")).startsWith("-")&&(s="0"+s),s.startsWith("+")&&(s=s.slice(1,s.length));const n=s.split(""),e=[],o=[];let i="";for(let a=0;a<n.length;a++){const r=n[a];if(os.has(r))i!==""&&o.push(parseFloat(i)),e.push(r),i="";else{if(r.toLowerCase()==="b"){a++,i=r.concat(n[a]),o.push(t[parseInt(i[1],10)-1]),i="";continue}i=i.concat(r),a===n.length-1&&o.push(parseFloat(i))}}return{ops:e,nums:o}}function as(s,t,n,e){if(typeof n=="number"&&typeof e=="number")return n+e;let o,i,a;typeof n=="number"?(a=e,o=a.length,i=new Float32Array(o),i.fill(n)):(o=n.length,i=n,e.constructor===Number?(a=new Float32Array(o),a.fill(e)):a=e);const r=new Float32Array(o);switch(t){case"+":for(let u=0;u<o;u++)(s==null||s[u])&&(r[u]=i[u]+a[u]);break;case"-":for(let u=0;u<o;u++)(s==null||s[u])&&(r[u]=i[u]-a[u]);break;case"*":for(let u=0;u<o;u++)(s==null||s[u])&&(r[u]=i[u]*a[u]);break;case"/":for(let u=0;u<o;u++)(s==null||s[u])&&a[u]&&(r[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function us(s,t){s.splice(t,1);let n=0,e=0;do{n=0,e=0;for(let o=0;o<s.length;o++)if(s[o]==="(")n=o;else if(s[o]===")"){e=o;break}e===n+1&&s.splice(n,2)}while(e===n+1);return s}function ls(s){if(s.length===1)return{opIndex:0,numIndex:0};let t=0,n=0;for(let a=0;a<s.length;a++)if(s[a]==="(")t=a;else if(s[a]===")"){n=a;break}const e=n===0?s:s.slice(t+1,n);let o=-1;for(let a=0;a<e.length;a++)if(e[a]==="*"||e[a]==="/"){o=a;break}if(o>-1)n>0&&(o+=t+1);else{for(let a=0;a<e.length;a++)if(e[a]==="+"||e[a]==="-"){o=a;break}n>0&&(o+=t+1)}let i=0;for(let a=0;a<o;a++)s[a]==="("&&i++;return{opIndex:o,numIndex:o-i}}function cs(s,t,n){let e,{ops:o,nums:i}=is(n,t);if(o.length===0){const a=i.length===1?i[0]:t[0];if(a instanceof Float32Array)return[a];const r=new Float32Array(t[0].length);return typeof a=="number"?r.fill(a):r.set(a),[r]}for(;o.length>0;){const{numIndex:a,opIndex:r}=ls(o);if(e=as(s,o[r],i[a],i[a+1]),o.length===1)break;o=us(o,r),i.splice(a,2,e)}return[e]}const ps=new vt({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function hs(s,t){if(!Ge(s))return s;const{equation:n,method:e}=t,o=t.bandIndexes.map(p=>p-1),{pixels:i,mask:a}=s;let r;switch(e){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=ne(a,i[o[0]],i[o[1]]);break;case"ndwi":r=ne(a,i[o[1]],i[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=ms(a,i[o[0]],i[o[1]]);break;case"ci-g":case"ci-re":r=ds(a,i[o[0]],i[o[1]]);break;case"savi":r=gs(a,i[o[0]],i[o[1]],o[2]+1);break;case"tsavi":r=ys(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":r=xs(a,i[o[0]],i[o[1]]);break;case"gemi":r=ws(a,i[o[0]],i[o[1]]);break;case"pvi":r=vs(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1);break;case"gvitm":r=bs(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"sultan":r=As(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"vari":r=$s(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"mtvi2":r=Fs(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"rtvi-core":r=Is(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"evi":r=Ps(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"wndwi":r=Ns(a,[i[o[0]],i[o[1]],i[o[2]]],o[3]?o[3]+1:.5);break;case"bai":r=Ts(a,i[o[0]],i[o[1]]);break;case"custom":r=cs(a,i,n);break;default:return s}const u=a!=null?new Uint8Array(a.length):null;a!=null&&u!=null&&u.set(a);const l=new d({width:s.width,height:s.height,pixelType:"f32",pixels:r,mask:u});return l.updateStatistics(),l}function fs(s,t,n,e){const{mask:o,pixels:i,width:a,height:r}=s,u=i[n],l=i[t],p=l.length,f=e?new Uint8Array(p):new Float32Array(p),m=e?100:1,w=e?100.5:0;for(let b=0;b<p;b++)if(o==null||o[b]){const T=u[b],Zt=l[b],Qt=T+Zt;Qt&&(f[b]=(T-Zt)/Qt*m+w)}const v=new d({width:a,height:r,mask:o,pixelType:e?"u8":"f32",pixels:[f]});return v.updateStatistics(),v}function P(s){const t=new Float32Array(9);return t[3*s[0]]=1,t[3*s[1]+1]=1,t[3*s[2]+2]=1,t}function ne(s,t,n){const e=n.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i]){const a=t[i],r=n[i],u=a+r;u&&(o[i]=(a-r)/u)}return[o]}function ms(s,t,n){const e=n.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i]){const a=t[i],r=n[i];r&&(o[i]=a/r)}return[o]}function ds(s,t,n){const e=t.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i]){const a=t[i],r=n[i];r&&(o[i]=a/r-1)}return[o]}function gs(s,t,n,e){const o=n.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(s==null||s[a]){const r=n[a],u=t[a],l=u+r+e;l&&(i[a]=(u-r)/l*(1+e))}return[i]}function ys(s,t,n,e,o,i){const a=n.length,r=new Float32Array(a),u=-o*e+i*(1+e*e);for(let l=0;l<a;l++)if(s==null||s[l]){const p=n[l],f=t[l],m=o*f+p+u;m&&(r[l]=e*(f-e*p-o)/m)}return[r]}function xs(s,t,n){const e=n.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i]){const a=n[i],r=t[i];o[i]=.5*(2*(r+1)-Math.sqrt((2*r+1)**2-8*(r-a)))}return[o]}function ws(s,t,n){const e=n.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i]){const a=n[i],r=t[i];if(a!==1){const u=(2*(r*r-a*a)+1.5*r+.5*a)/(r+a+.5);o[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[o]}function vs(s,t,n,e,o){const i=n.length,a=new Float32Array(i),r=Math.sqrt(1+e*e);for(let u=0;u<i;u++)if(s==null||s[u]){const l=n[u],p=t[u];a[u]=(p-e*l-o)/r}return[a]}function bs(s,t){const[n,e,o,i,a,r]=t,u=n.length,l=new Float32Array(u);for(let p=0;p<u;p++)(s==null||s[p])&&(l[p]=-.2848*n[p]-.2435*e[p]-.5436*o[p]+.7243*i[p]+.084*a[p]-1.18*r[p]);return[l]}function As(s,t){const[n,,e,o,i,a]=t,r=n.length,u=new Float32Array(r),l=new Float32Array(r),p=new Float32Array(r);for(let f=0;f<r;f++)(s==null||s[f])&&(u[f]=a[f]?i[f]/a[f]*100:0,l[f]=n[f]?i[f]/n[f]*100:0,p[f]=o[f]?e[f]/o[f]*(i[f]/o[f])*100:0);return[u,l,p]}function $s(s,t){const[n,e,o]=t,i=n.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(s==null||s[r])for(r=0;r<i;r++){const u=n[r],l=e[r],p=l+u-o[r];p&&(a[r]=(l-u)/p)}return[a]}function Fs(s,t){const[n,e,o]=t,i=n.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(s==null||s[r])for(r=0;r<i;r++){const u=n[r],l=e[r],p=o[r],f=Math.sqrt((2*u+1)**2-6*u-5*Math.sqrt(l)-.5);a[r]=1.5*(1.2*(u-p)-2.5*(l-p))*f}return[a]}function Is(s,t){const[n,e,o]=t,i=n.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(s==null||s[r])for(r=0;r<i;r++){const u=n[r],l=e[r],p=o[r];a[r]=100*(u-l)-10*(u-p)}return[a]}function Ps(s,t){const[n,e,o]=t,i=n.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(s==null||s[r])for(r=0;r<i;r++){const u=n[r],l=e[r],p=u+6*l-7.5*o[r]+1;p&&(a[r]=2.5*(u-l)/p)}return[a]}function Ns(s,t,n=.5){const[e,o,i]=t,a=o.length,r=new Float32Array(a);for(let u=0;u<a;u++)if(s==null||s[u])for(u=0;u<a;u++){const l=e[u],p=o[u],f=i[u],m=l+n*p+(1-n)*f;m&&(r[u]=(l-n*p-(1-n)*f)/m)}return[r]}function Ts(s,t,n){const e=n.length,o=new Float32Array(e);for(let i=0;i<e;i++)if(s==null||s[i])for(i=0;i<e;i++){const a=(.1-t[i])**2+(.06-n[i])**2;a&&(o[i]=1/a)}return[o]}var Pt;let pt=Pt=class extends S{constructor(){super(...arguments),this.method="custom"}clone(){return new Pt({method:this.method,bandIndexes:this.bandIndexes,raster:D(this.raster)})}};c([h({json:{type:String,write:!0}})],pt.prototype,"bandIndexes",void 0),c([Q(ps)],pt.prototype,"method",void 0),pt=Pt=c([y("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],pt);const Rs=pt,Cs=new Set(["vari","mtvi2","rtvi-core","evi"]);let tt=class extends k{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const n=t.clone();return n.pixelType=this.outputPixelType,n.statistics=null,n.histograms=null,n.bandCount=this.functionArguments.method==="sultan"?t.bandCount:1,this.rasterInfo=n,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var a;const n=(a=t.pixelBlocks)==null?void 0:a[0];if(n==null)return n;const{method:e,bandIndexes:o}=this.functionArguments,i=o.split(" ").map(r=>parseFloat(r));return hs(n,{method:e,bandIndexes:i,equation:o})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(r=>parseFloat(r)-1);t.length===2&&t.push(0);const n=this.isInputBandIdsSwizzled?[0,1,2]:t;let e,o;const i=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":e=P([n[0],n[1],0]),o="ndxi";break;case"ndwi":e=P([n[1],n[0],0]),o="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":e=P([n[0],n[1],0]),o="sr";break;case"ci-g":case"ci-re":e=P([n[0],n[1],0]),o="ci";break;case"savi":e=P([n[0],n[1],0]),o="savi",i[0]=t[2]+1;break;case"tsavi":e=P([n[0],n[1],0]),o="tsavi",i[0]=t[2]+1,i[1]=t[3]+1,i[2]=t[4]+1;break;case"msavi":e=P([n[0],n[1],0]),o="msavi";break;case"gemi":e=P([n[0],n[1],0]),o="gemi";break;case"pvi":e=P([n[0],n[1],0]),o="tsavi",i[0]=t[2]+1,i[1]=t[3]+1;break;case"vari":e=P([n[0],n[1],n[2]]),o="vari";break;case"mtvi2":e=P([n[0],n[1],n[2]]),o="mtvi2";break;case"rtvi-core":e=P([n[0],n[1],n[2]]),o="rtvicore";break;case"evi":e=P([n[0],n[1],n[2]]),o="evi";break;case"wndwi":e=P([n[0],n[1],0]),o="wndwi",i[0]=t[3]?t[3]+1:.5;break;case"bai":e=P([n[1],n[0],0]),o="bai";break;default:e=P([0,1,2]),o="custom"}return{bandIndexMat3:e,indexType:o,adjustments:i}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const n=this.functionArguments.bandIndexes.split(" ").map(r=>parseFloat(r)-1),e=t.length,o=n.map(r=>r>=e?e-1:r),i=Cs.has(this.functionArguments.method)?3:2,a=o.slice(0,i).map(r=>t[r]);return a.length===2&&a.push(0),a}};c([h({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),c([h({type:Rs,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),c([h()],tt.prototype,"rasterArgumentNames",void 0),tt=c([y("esri.layers.support.rasterFunctions.BandArithmeticFunction")],tt);const Bs=tt;var Nt;let _=Nt=class extends S{castColormapName(s){if(!s)return null;const t=s.toLowerCase();return Oe.includes(t)?t:null}readColorRamp(s){return es(s)}readColorRampName(s,t){if(!s)return null;const n=gt.jsonValues.find(e=>e.toLowerCase()===s.toLowerCase());return n?gt.fromJSON(n):null}clone(){var s;return new Nt({colormap:D(this.colormap),colormapName:this.colormapName,colorRamp:(s=this.colorRamp)==null?void 0:s.clone(),colorRampName:this.colorRampName})}};c([h({type:[[Number]],json:{write:!0}})],_.prototype,"colormap",void 0),c([h({type:String,json:{write:!0}})],_.prototype,"colormapName",void 0),c([$e("colormapName")],_.prototype,"castColormapName",null),c([h({types:ts,json:{write:!0}})],_.prototype,"colorRamp",void 0),c([lt("colorRamp")],_.prototype,"readColorRamp",null),c([h({type:gt.apiValues,json:{type:gt.jsonValues,write:gt.write}})],_.prototype,"colorRampName",void 0),c([lt("colorRampName")],_.prototype,"readColorRampName",null),_=Nt=c([y("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],_);const Ss=_,ks=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],js=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Xt(s,t){const n=[],e=[];for(let i=0;i<s.length-1;i++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:s[i].slice(1),toColor:s[i+1].slice(1)}),e.push(s[i+1][0]-s[i][0]);const o=s[s.length-1][0];return Fe({type:"multipart",colorRamps:n},{numColors:o,weights:t=t??e})}function Ms(){return Xt([[0,0,191,191],[51,0,255,0],[102,255,255,0],[153,255,127,0],[204,191,127,63],[256,20,20,20]])}function Ds(){const s=Xt([[0,255,255,255],[70,0,0,255],[80,205,193,173],[100,150,150,150],[110,120,100,51],[130,120,200,100],[140,28,144,3],[160,6,55,0],[180,10,30,25],[201,6,27,7]]);for(let t=s.length;t<256;t++)s.push([6,27,7]);return s}function _s(){return Fe({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Es(){const s=[];for(let t=0;t<256;t++){const n=[];for(let e=0;e<3;e++)n.push(Math.round(255*Math.random()));s.push(n)}return s}function zs(){return Xt([[0,38,54,41],[69,79,90,82],[131,156,156,156],[256,253,241,253]],[.268,.238,.495])}function Gs(s){let t;switch(s){case"elevation":t=Ms();break;case"gray":t=_s();break;case"hillshade":t=zs();break;case"ndvi":t=ks;break;case"ndvi2":t=Ds();break;case"ndvi3":t=js;break;case"random":t=Es()}return t?(t=t.map((n,e)=>[e,...n]),t):null}let z=class extends k{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:n,colormapName:e,colorRamp:o,colorRampName:i}=this.functionArguments;if(!(n!=null&&n.length))if(o)n=se(o,{interpolateAlpha:!0});else if(i){const r=Ve(i);r&&(n=se(r))}else e&&(n=Gs(e));if(!(n!=null&&n.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=n,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var n;return(n=t.pixelBlocks)==null?void 0:n[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],z.prototype,"functionName",void 0),c([h({type:Ss,json:{write:!0,name:"rasterFunctionArguments"}})],z.prototype,"functionArguments",void 0),c([h()],z.prototype,"rasterArgumentNames",void 0),c([h()],z.prototype,"isNoopProcess",void 0),c([h({json:{write:!0}})],z.prototype,"indexedColormap",void 0),z=c([y("esri.layers.support.rasterFunctions.ColormapFunction")],z);const Os=z;var Tt;let ht=Tt=class extends S{constructor(){super(...arguments),this.rasters=[]}writeRasters(s,t){t.rasters=s.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new Tt({rasters:D(this.rasters)})}};c([h({json:{write:!0}})],ht.prototype,"rasters",void 0),c([ct("rasters")],ht.prototype,"writeRasters",null),ht=Tt=c([y("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],ht);const Vs=ht;let et=class extends k{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,n=t[0];this.outputPixelType=this._getOutputPixelType(n.pixelType);const e=n.clone();if(e.attributeTable=null,e.colormap=null,e.pixelType=this.outputPixelType,e.bandCount=t.map(({bandCount:o})=>o).reduce((o,i)=>o+i),t.every(({statistics:o})=>o!=null&&o.length)){const o=[];t.forEach(({statistics:i})=>i!=null&&o.push(...i)),e.statistics=o}if(t.every(({histograms:o})=>o!=null&&o.length)){const o=[];t.forEach(({histograms:i})=>i!=null&&o.push(...i)),e.histograms=o}return e.bandCount>1&&(e.colormap=null,e.attributeTable=null),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:n}=t;return n?(n==null?void 0:n[0])==null?null:Le(n):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([h({json:{write:!0,name:"rasterFunction"}})],et.prototype,"functionName",void 0),c([h({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],et.prototype,"functionArguments",void 0),c([h()],et.prototype,"rasterArgumentNames",void 0),et=c([y("esri.layers.support.rasterFunctions.CompositeBandFunction")],et);const Ls=et,x={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Us={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},B={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},M={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Ws={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Te={setNull:50,conditional:78},re={...Us,...B,...M,...Ws,...Te},A=new Map;function qs(s){const t=Math.sqrt(s.length),n=s.slice(0,t),e=[1];for(let o=1;o<t;o++){let i=null;for(let a=0;a<t;a++){const r=s[a+o*t],u=s[a];if(i==null)if(u===0){if(r)return{separable:!1,row:null,col:null}}else i=r/u;else if(r/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};e.push(i)}return{separable:!0,row:n,col:e}}function oe(s,t,n,e,o,i,a){const r=new Float32Array(t*n),u=i.length,l=a?0:e,p=a?e:0,f=a?1:t;for(let m=l;m<n-l;m++){const w=m*t;for(let v=p;v<t-p;v++){if(o&&!o[w+v])continue;let b=0;for(let T=0;T<u;T++)b+=s[w+v+(T-e)*f]*i[T];r[w+v]=b}}return r}function Xs(s,t,n,e,o,i,a){const r=new Float32Array(t*n),u=Math.floor(e/2),l=Math.floor(o/2);for(let p=u;p<n-u;p++){const f=p*t;for(let m=l;m<t-l;m++){if(i&&!i[f+m])continue;let w=0;for(let v=0;v<e;v++)for(let b=0;b<o;b++)w+=s[f+m+(v-u)*t+b-l]*a[v*o+b];r[f+m]=w}}return r}function Hs(s,t,n=!0){const{pixels:e,width:o,height:i,pixelType:a,mask:r}=s,u=e.length,l=[],{kernel:p,rows:f,cols:m}=t;for(let w=0;w<u;w++){const v=Xs(e[w],o,i,f,m,r,p);n&&Re(v,o,i,f,m),l.push(v)}return new d({width:o,height:i,pixelType:a,pixels:l,mask:r})}function Re(s,t,n,e,o){const i=Math.floor(e/2);for(let r=0;r<i;r++)for(let u=0;u<t;u++)s[r*t+u]=s[(o-1-r)*t+u],s[(n-1-r)*t+u]=s[(n-o+r)*t+u];const a=Math.floor(o/2);for(let r=0;r<n;r++){const u=r*t;for(let l=0;l<a;l++)s[u+l]=s[u+o-1-l],s[u+t-l-1]=s[u+t+l-o]}}function Js(s,t,n,e=!0){const{pixels:o,width:i,height:a,pixelType:r,mask:u}=s,l=o.length,p=[],f=t.length,m=n.length,w=Math.floor(f/2),v=Math.floor(m/2);for(let b=0;b<l;b++){let T=oe(o[b],i,a,w,u,t,!0);T=oe(T,i,a,v,u,n,!1),e&&Re(T,i,a,f,m),p.push(T)}return new d({width:i,height:a,pixelType:r,pixels:p,mask:u})}function Ks(s,t){const n=qs(t.kernel),e=t.mirrorEdges!==!1,o=n.separable?Js(s,n.row,n.col,e):Hs(s,t,e),{outputPixelType:i}=t;return i&&o.clamp(i),o}A.set(x.none,[0,0,0,0,1,0,0,0,0]),A.set(x.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),A.set(x.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),A.set(x.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),A.set(x.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),A.set(x.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),A.set(x.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),A.set(x.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),A.set(x.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),A.set(x.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),A.set(x.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),A.set(x.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),A.set(x.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),A.set(x.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),A.set(x.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),A.set(x.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),A.set(x.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),A.set(x.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),A.set(x.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),A.set(x.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),A.set(x.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),A.set(x.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),A.set(x.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Rt;let W=Rt=class extends S{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(s){this._set("convolutionType",s);const t=A.get(s);if(!t||s===x.userDefined||s===x.none)return;const n=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",n),this._set("rows",n)}clone(){return new Rt({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:D(this.raster)})}};c([h({json:{type:Number,write:!0}})],W.prototype,"rows",void 0),c([h({json:{type:Number,write:!0}})],W.prototype,"cols",void 0),c([h({json:{name:"type",type:Number,write:!0}})],W.prototype,"convolutionType",null),c([h({json:{type:[Number],write:!0}})],W.prototype,"kernel",void 0),W=Rt=c([y("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],W);const Ys=W,ie=25;let st=class extends k{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:n,cols:e,kernel:o}=this.functionArguments;if(!Object.values(x).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==x.none&&n*e!==o.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const i=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(i.pixelType);const a=i.clone();a.pixelType=this.outputPixelType;const r=[x.none,x.sharpen,x.sharpen2,x.sharpening3x3,x.sharpening5x5];return this.outputPixelType==="u8"||r.includes(t)||(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:o.length<=ie}}_processPixels(t){var r;const n=(r=t.pixelBlocks)==null?void 0:r[0];if(n==null||this.functionArguments.convolutionType===x.none)return n;let{kernel:e,rows:o,cols:i}=this.functionArguments;const a=e.reduce((u,l)=>u+l);return a!==0&&a!==1&&(e=e.map(u=>u/a)),Ks(n,{kernel:e,rows:o,cols:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const n=t.reduce((o,i)=>o+i);n!==0&&n!==1&&(t=t.map(o=>o/n));const e=new Float32Array(ie);return e.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:e,clampRange:bt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0),c([h({type:Ys,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0),c([h()],st.prototype,"rasterArgumentNames",void 0),st=c([y("esri.layers.support.rasterFunctions.ConvolutionFunction")],st);const Zs=st;var Ct;const Ce=new vt({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let nt=Ct=class extends S{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(s,t){return Ce.fromJSON(t.type??t.curvatureType??0)}clone(){return new Ct({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([h({json:{write:{target:"type"}}}),Q(Ce)],nt.prototype,"curvatureType",void 0),c([lt("curvatureType",["type","curvatureType"])],nt.prototype,"readCurvatureType",null),c([h({type:Number,json:{write:!0}})],nt.prototype,"zFactor",void 0),nt=Ct=c([y("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],nt);const Qs=nt;let q=class extends k{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var n;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((n=t.spatialReference)==null?void 0:n.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var p;const n=(p=t.pixelBlocks)==null?void 0:p[0];if(n==null)return null;const{zFactor:e,curvatureType:o}=this.functionArguments,{extent:i,primaryPixelSizes:a}=t,r=a==null?void 0:a[0],u=r??(i?{x:i.width/n.width,y:i.height/n.height}:{x:1,y:1}),l=this.isGCS&&e>=1?e*$t:e;return Ue(n,{zFactor:l,curvatureType:o,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:n}=this.functionArguments;return{curvatureType:n,zFactor:this.isGCS&&t>=1?t*$t:t}}};c([h({json:{write:!0,name:"rasterFunction"}})],q.prototype,"functionName",void 0),c([h({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],q.prototype,"functionArguments",void 0),c([h()],q.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],q.prototype,"isGCS",void 0),q=c([y("esri.layers.support.rasterFunctions.CurvatureFunction")],q);const tn=q;var Bt;let ft=Bt=class extends S{constructor(){super(...arguments),this.bandIds=[],this.missingBandAction=Ie.bestMatch}clone(){return new Bt({bandIds:[...this.bandIds],missingBandAction:this.missingBandAction})}};c([h({json:{write:!0}})],ft.prototype,"bandIds",void 0),c([h({json:{write:!0}})],ft.prototype,"missingBandAction",void 0),ft=Bt=c([y("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],ft);const en=ft;let rt=class extends k{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,n=t[0],{bandCount:e}=n,{bandIds:o,missingBandAction:i}=this.functionArguments;if(i===Ie.fail&&o.some(l=>l<0||l>=e))return{success:!1,supportsGPU:!1,error:"extract-band-function: invalid bandIds"};this.outputPixelType=this._getOutputPixelType("f32");const a=n.clone();a.pixelType=this.outputPixelType,a.bandCount=o.length;const{statistics:r,histograms:u}=a;return r!=null&&r.length&&(a.statistics=o.map(l=>r[l]||r[r.length-1])),u!=null&&u.length&&(a.histograms=o.map(l=>u[l]||u[u.length-1])),this.rasterInfo=a,{success:!0,supportsGPU:a.bandCount<=3}}_processPixels(t){var i;const n=(i=t.pixelBlocks)==null?void 0:i[0];if(n==null)return null;const e=n.pixels.length,o=this.functionArguments.bandIds.map(a=>a>=e?e-1:a);return n.extractBands(o)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let n=0;n<3;n++)t[n]=Math.min(t[n],2)}return{bandIndexMat3:P(t)}}_getInputBandIds(t){const n=t.length;return this.functionArguments.bandIds.map(e=>e>=n?n-1:e).map(e=>t[e])}};c([h({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),c([h({type:en,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),c([h()],rt.prototype,"rasterArgumentNames",void 0),rt=c([y("esri.layers.support.rasterFunctions.ExtractBandFunction")],rt);const sn=rt;var St;let X=St=class extends S{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(s,t){t.rasters=s.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new St({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:D(this.rasters)})}};c([h({json:{write:!0}})],X.prototype,"operation",void 0),c([h({json:{write:!0}})],X.prototype,"rasters",void 0),c([ct("rasters")],X.prototype,"writeRasters",null),c([h({json:{write:!0}})],X.prototype,"processAsMultiband",void 0),X=St=c([y("esri.layers.support.rasterFunctions.LocalFunctionArguments")],X);const nn=X,N=new Map;function rn(s){return N.get(s)}N.set(M.acos,[0,Math.PI]),N.set(M.asin,[-Math.PI/2,Math.PI/2]),N.set(M.atan,[-Math.PI/2,Math.PI/2]),N.set(M.cos,[-1,1]),N.set(M.sin,[-1,1]),N.set(B.booleanAnd,[0,1]),N.set(B.booleanNot,[0,1]),N.set(B.booleanOr,[0,1]),N.set(B.booleanXOr,[0,1]),N.set(B.equalTo,[0,1]),N.set(B.notEqual,[0,1]),N.set(B.greaterThan,[0,1]),N.set(B.greaterThanEqual,[0,1]),N.set(B.lessThan,[0,1]),N.set(B.lessThanEqual,[0,1]),N.set(B.isNull,[0,1]);const ae=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function on(s,t=!1){const n=s.map(r=>r.mask),e=n.filter(r=>r!=null),o=s[0].pixels[0].length;if(e.length===0)return new Uint8Array(o).fill(255);const i=e[0],a=new Uint8Array(i);if(e.length===1)return a;if(!t){for(let r=1;r<e.length;r++){const u=e[r];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}if(e.length!==n.length)return new Uint8Array(o).fill(255);for(let r=1;r<e.length;r++){const u=e[r];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function an(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]+o[r]);return a}function un(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand("f32",o);return i.set(e),i}function ln(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]-o[r]);return a}function cn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]*o[r]);return a}function pn(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand(n,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=Math.sign(e[a])*Math.floor(Math.abs(e[a])));return i}function Be(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]/o[r]);return a}function hn(s,t,n){return Be(s,t,"f32")}function fn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=Math.floor(e[r]/o[r]));return a}function mn(s,t,n,e){const o=s[0],i=o.length,a=d.createEmptyBand(n,i);if(e===M.atanh){for(let u=0;u<i;u++)if(t[u]){const l=o[u];Math.abs(l)>=1?t[u]=0:a[u]=Math.atanh(l)}return a}const r=e===M.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(t[u]){const l=o[u];Math.abs(l)>1?t[u]=0:a[u]=r(l)}return a}function dn(s,t,n,e){const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e(o[r]));return a}function gn(s,t,n,e){const[o,i]=s,a=o.length,r=d.createEmptyBand(n,a);for(let u=0;u<a;u++)t&&!t[u]||(r[u]=e(o[u],i[u]));return r}function yn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]&o[r]);return a}function ue(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]<<o[r]);return a}function xn(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand(n,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=~e[a]);return i}function wn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]|o[r]);return a}function vn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]>>o[r]);return a}function bn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]^o[r]);return a}function An(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]&&o[r]?1:0);return a}function $n(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand(n,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=e[a]?0:1);return i}function Fn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]||o[r]?1:0);return a}function In(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=(e[r]?1:0)^(o[r]?1:0));return a}function Pn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]===o[r]?1:0);return a}function Ht(s,t,n,e){const[o]=s,i=o.length,a=d.createEmptyBand(n,i),r=e===Math.E;for(let u=0;u<i;u++)t&&!t[u]||(a[u]=r?Math.exp(o[u]):e**o[u]);return a}function Nn(s,t,n){return Ht(s,t,n,10)}function Tn(s,t,n){return Ht(s,t,n,2)}function Rn(s,t,n){return Ht(s,t,n,Math.E)}function Jt(s,t,n,e){const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(o[r]<=0?t[r]=0:a[r]=e(o[r]));return a}function Cn(s,t,n){return Jt(s,t,n,Math.log10)}function Bn(s,t,n){return Jt(s,t,n,Math.log2)}function Sn(s,t,n){return Jt(s,t,n,Math.log)}function kn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]>o[r]?1:0);return a}function jn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]>=o[r]?1:0);return a}function Mn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]<o[r]?1:0);return a}function Dn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]<=o[r]?1:0);return a}function _n(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand(n,o);if(!t)return i;for(let a=0;a<o;a++)i[a]=t[a]?0:1;return i}function En(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]%o[r]);return a}function zn(s,t,n){const[e]=s,o=e.length,i=d.createEmptyBand(n,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=-e[a]);return i}function Gn(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=e[r]===o[r]?0:1);return a}function On(s,t,n){const[e,o]=s,i=e.length,a=d.createEmptyBand(n,i),r=new Uint8Array(i);for(let u=0;u<i;u++)t!=null&&!t[u]||e[u]!==0||(a[u]=o[u],r[u]=255);return{band:a,mask:r}}function le(s,t,n){const[e,o,i]=s,a=e.length,r=d.createEmptyBand(n,a);for(let u=0;u<a;u++)t&&!t[u]||(r[u]=e[u]?o[u]:i[u]);return r}function ce(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r];for(let l=1;l<e;l++){const p=s[l][r];u<p&&(u=p)}a[r]=u}return a}function pe(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r];for(let l=1;l<e;l++){const p=s[l][r];u>p&&(u=p)}a[r]=u}return a}function he(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r],l=u;for(let p=1;p<e;p++){const f=s[p][r];l<f?l=f:u>f&&(u=f)}a[r]=l-u}return a}function fe(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=0;for(let l=0;l<e;l++)u+=s[l][r];a[r]=u/e}return a}function me(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r])for(let u=0;u<e;u++){const l=s[u];a[r]+=l[r]}return a}function de(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)if(!t||t[r]){const u=new Float32Array(e);let l=0;for(let f=0;f<e;f++){const m=s[f];l+=m[r],u[f]=m[r]}l/=e;let p=0;for(let f=0;f<e;f++)p+=(u[f]-l)**2;a[r]=Math.sqrt(p/e)}return a}function ge(s,t,n){const e=s.length;if(e<2)return s[0];const o=Math.floor(e/2),[i]=s,a=i.length,r=d.createEmptyBand(n,a),u=new Float32Array(e),l=e%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let f=0;f<e;f++)u[f]=s[f][p];u.sort(),r[p]=l?u[o]:(u[o]+u[o-1])/2}return r}function Se(s,t,n){const[e,o]=s;if(o==null)return e;const i=e.length,a=d.createEmptyBand(n,i);for(let r=0;r<i;r++)t[r]&&(e[r]===o[r]?a[r]=e[r]:t[r]=0);return a}function ye(s,t,n){const e=s.length;if(e<=2)return Se(s,t,n);const o=s[0].length,i=d.createEmptyBand(n,o),a=new Map;for(let r=0;r<o;r++)if(!t||t[r]){let u;a.clear();for(let f=0;f<e;f++)u=s[f][r],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=0;for(const f of a.keys())l=a.get(f),l>p&&(p=l,u=f);i[r]=u}return i}function xe(s,t,n){const e=s.length;if(e<=2)return Se(s,t,n);const o=s[0].length,i=d.createEmptyBand(n,o),a=new Map;for(let r=0;r<o;r++)if(!t||t[r]){let u;a.clear();for(let f=0;f<e;f++)u=s[f][r],a.set(u,a.has(u)?a.get(u)+1:1);let l=0,p=s.length;for(const f of a.keys())l=a.get(f),l<p&&(p=l,u=f);i[r]=u}return i}function we(s,t,n){const e=s.length;if(e<2)return s[0];const[o]=s,i=o.length,a=d.createEmptyBand(n,i),r=new Set;for(let u=0;u<i;u++)if(!t||t[u]){let l;r.clear();for(let p=0;p<e;p++)l=s[p][u],r.add(l);a[u]=r.size}return a}const I=new Map,wt=new Map,g=new Map,$=new Map;function Vn(){I.size||(I.set(4,Math.sqrt),I.set(6,Math.acos),I.set(7,Math.asin),I.set(8,Math.atan),I.set(9,Math.atanh),I.set(10,Math.abs),I.set(21,Math.cos),I.set(22,Math.cosh),I.set(48,Math.floor),I.set(49,Math.ceil),I.set(51,Math.sin),I.set(52,Math.sinh),I.set(56,Math.tan),I.set(57,Math.tanh),I.set(59,Math.acosh),I.set(60,Math.asinh),I.set(65,Math.floor),wt.set(5,Math.pow),wt.set(61,Math.atan2),g.set(1,an),g.set(2,ln),g.set(3,cn),g.set(11,yn),g.set(12,ue),g.set(12,ue),g.set(13,xn),g.set(14,wn),g.set(15,vn),g.set(16,bn),g.set(17,An),g.set(18,$n),g.set(19,Fn),g.set(20,In),g.set(23,Be),g.set(24,Pn),g.set(25,Rn),g.set(26,Nn),g.set(27,Tn),g.set(28,kn),g.set(29,jn),g.set(30,pn),g.set(31,_n),g.set(32,un),g.set(33,Mn),g.set(34,Dn),g.set(35,Sn),g.set(36,Cn),g.set(37,Bn),g.set(44,En),g.set(45,zn),g.set(46,Gn),g.set(64,hn),g.set(65,fn),g.set(76,le),g.set(78,le),$.set(38,ye),$.set(39,ce),$.set(40,fe),$.set(41,ge),$.set(42,pe),$.set(43,xe),$.set(47,he),$.set(54,de),$.set(55,me),$.set(58,we),$.set(66,ye),$.set(67,ce),$.set(68,fe),$.set(69,ge),$.set(70,pe),$.set(71,xe),$.set(72,he),$.set(73,de),$.set(74,me),$.set(75,we))}function Ln(s,t,n,e){let[o,i]=bt(n);const a=n.startsWith("u")||n.startsWith("s");a&&(o-=1e-5,i+=1e-5);for(let r=0;r<t.length;r++)if(t[r]){const u=s[r];isNaN(u)||u<o||u>i?t[r]=0:e[r]=a?Math.round(u):u}}function Un(s,t,n={}){Vn();let e=on(s,t>=66&&t<=75);const{outputPixelType:o="f32"}=n,i=!$.has(t)||n.processAsMultiband,a=i?s[0].pixels.length:1,r=[];for(let l=0;l<a;l++){const p=$.has(t)&&!i?s.flatMap(w=>w.pixels):s.map(w=>w.pixels[l]);let f,m=!0;if(t===Te.setNull){const w=On(p,e,o);f=w.band,e=w.mask,m=!1}else g.has(t)?f=g.get(t)(p,e,"f64"):I.has(t)?f=t===M.asin||t===M.acos||t===M.atanh?mn(p,e,"f64",t):dn(p,e,"f64",I.get(t)):wt.has(t)?f=gn(p,e,"f64",wt.get(t)):$.has(t)?f=$.get(t)(p,e,"f64"):(f=p[0],m=!1);if(m&&t!==B.isNull&&!N.has(t)){const w=d.createEmptyBand(o,f.length);e||(e=new Uint8Array(f.length).fill(255)),Ln(f,e,o,w),f=w}r.push(f)}const u=s[0];return new d({width:u.width,height:u.height,pixelType:o,mask:t===B.isNull?null:e,pixels:r})}let ot=class extends k{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,n=t[0],{bandCount:e}=n,{processAsMultiband:o}=this.functionArguments;if(t.some(p=>p.bandCount!==e))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:i,rasters:a}=this.functionArguments,r=ae[i];if(!(r===999||a.length===r||a.length<=1&&r===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${r}`};this.outputPixelType=this._getOutputPixelType("f32");const u=n.clone();u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,u.bandCount=r!==999||o?e:1;const l=rn(i);if(l){u.statistics=[];for(let p=0;p<u.bandCount;p++)u.statistics[p]={min:l[0],max:l[1],avg:(l[0]+l[1])/2,stddev:(l[0]+l[1])/10}}return this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&r<=3&&(i<11||i>16)}}_processPixels(t){const{pixelBlocks:n}=t;return n==null||n.some(e=>e==null)?null:Un(n,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,n=ae[t],e=((u=Object.keys(re).find(l=>re[l]===t))==null?void 0:u.toLowerCase())??"undefined",o=this.outputPixelType??"f32";let[i,a]=bt(o);const r=o.startsWith("u")||o.startsWith("s");return r&&(i-=1e-4,a+=1e-4),{imageCount:n,operationName:e,domainRange:[i,a],isOutputRounded:r}}};c([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([h({type:nn,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([h()],ot.prototype,"rasterArgumentNames",void 0),ot=c([y("esri.layers.support.rasterFunctions.LocalFunction")],ot);const Wn=ot;var kt;let H=kt=class extends S{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Pe.matchAny}get normalizedNoDataValues(){const{noDataValues:s}=this;if(!(s!=null&&s.length))return null;let t=!1;const n=s.map(e=>{if(typeof e=="number")return t=!0,[e];if(typeof e=="string"){const o=e.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return t=t||o.length>0,o.length===0?null:o}return null});return t?n:null}clone(){var s,t;return new kt({includedRanges:((s=this.includedRanges)==null?void 0:s.slice())??[],noDataValues:((t=this.noDataValues)==null?void 0:t.slice())??[],noDataInterpretation:this.noDataInterpretation})}};c([h({json:{write:!0}})],H.prototype,"includedRanges",void 0),c([h({json:{write:!0}})],H.prototype,"noDataValues",void 0),c([h()],H.prototype,"normalizedNoDataValues",null),c([h({json:{write:!0}})],H.prototype,"noDataInterpretation",void 0),H=kt=c([y("esri.layers.support.rasterFunctions.MaskFunctionArguments")],H);const qn=H;let J=class extends k{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:n}=t;this.outputPixelType=this._getOutputPixelType(n),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:e,normalizedNoDataValues:o}=this.functionArguments;if(!(e!=null&&e.length)&&!(o!=null&&o.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let i=[];for(let r=0;r<t.bandCount;r++){const u=We(n,e==null?void 0:e.slice(2*r,2*r+2),o==null?void 0:o[r]);if(u==null){i=null;break}i.push(u)}this.lookups=i;const a=o!=null&&o.every(r=>{var u;return(r==null?void 0:r.length)===((u=o[0])==null?void 0:u.length)});return{success:!0,supportsGPU:(!e||e.length<=2*E)&&(!o||a&&o[0].length<=E)}}_processPixels(t){var l;const n=(l=t.pixelBlocks)==null?void 0:l[0];if(n==null)return null;const{outputPixelType:e,lookups:o}=this,{includedRanges:i,noDataInterpretation:a,normalizedNoDataValues:r}=this.functionArguments,u=a===Pe.matchAll;return qe(n,{includedRanges:i,noDataValues:r,outputPixelType:e,matchAll:u,lookups:o})}_getWebGLParameters(){var i;const{includedRanges:t,normalizedNoDataValues:n}=this.functionArguments,e=new Float32Array(E);e.fill(ut),(i=n==null?void 0:n[0])!=null&&i.length&&e.set(n[0]);const o=new Float32Array(E);for(let a=0;a<o.length;a+=2)o[a]=(t==null?void 0:t[a])??-ut,o[a+1]=(t==null?void 0:t[a+1])??ut;return t&&t.length&&o.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:e,includedRanges:o}}};c([h({json:{write:!0,name:"rasterFunction"}})],J.prototype,"functionName",void 0),c([h({type:qn,json:{write:!0,name:"rasterFunctionArguments"}})],J.prototype,"functionArguments",void 0),c([h()],J.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],J.prototype,"lookups",void 0),J=c([y("esri.layers.support.rasterFunctions.MaskFunction")],J);const Xn=J;var jt;let it=jt=class extends S{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:s,infraredBandID:t,scientificOutput:n}=this;return new jt({visibleBandID:s,infraredBandID:t,scientificOutput:n})}};c([h({json:{write:!0}})],it.prototype,"visibleBandID",void 0),c([h({json:{write:!0}})],it.prototype,"infraredBandID",void 0),c([h({json:{write:!0}})],it.prototype,"scientificOutput",void 0),it=jt=c([y("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],it);const Hn=it;let at=class extends k{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:n,infraredBandID:e}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const o=this.sourceRasterInfos[0],i=Math.max(n,e);if(o.bandCount<2||i>=o.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=o.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1;const[r,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:r,max:u,avg:l,stddev:p}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){var a;const n=(a=t.pixelBlocks)==null?void 0:a[0];if(n==null)return null;const{visibleBandID:e,infraredBandID:o,scientificOutput:i}=this.functionArguments;return fs(n,e,o,!i)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:n,scientificOutput:e}=this.functionArguments,o=this.isInputBandIdsSwizzled?[0,1,2]:[n,t,0];return{bandIndexMat3:P(o),scaled:!e}}_getInputBandIds(t){const{visibleBandID:n,infraredBandID:e}=this.functionArguments;return[e,n,0].map(o=>t[o])}};c([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([h({type:Hn,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([h()],at.prototype,"rasterArgumentNames",void 0),at=c([y("esri.layers.support.rasterFunctions.NDVIFunction")],at);const Jn=at;var Mt;let G=Mt=class extends S{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Mt({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([h({json:{write:!0}})],G.prototype,"inputRanges",void 0),c([h({json:{write:!0}})],G.prototype,"outputValues",void 0),c([h({json:{write:!0}})],G.prototype,"noDataRanges",void 0),c([h({json:{write:!0}})],G.prototype,"allowUnmatched",void 0),c([h({json:{write:!0}})],G.prototype,"isLastInputRangeInclusive",void 0),G=Mt=c([y("esri.layers.support.rasterFunctions.RemapFunctionArguments")],G);const Kn=G;let K=class extends k{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:n}=t;this.outputPixelType=this._getOutputPixelType(n),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:e}=t,{allowUnmatched:o,outputValues:i,inputRanges:a,noDataRanges:r,isLastInputRangeInclusive:u}=this.functionArguments;if(e!=null&&e.length&&(i!=null&&i.length))if(o){const l=Math.min.apply(null,[...i,e[0].min]),p=Math.max.apply(null,[...i,e[0].max]);t.statistics=[{...e[0],min:l,max:p}]}else{let l=i[0],p=l;for(let f=0;f<i.length;f++)l=l>i[f]?i[f]:l,p=p>i[f]?p:i[f];t.statistics=[{...e[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=o?null:Xe({srcPixelType:n,inputRanges:a,outputValues:i,noDataRanges:r,allowUnmatched:o,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!i||i.length<=E)&&(!r||r.length<=E)}}_processPixels(t){var p;const n=(p=t.pixelBlocks)==null?void 0:p[0];if(n==null)return null;const{lookup:e,outputPixelType:o}=this;if(e){const f=Ne(n,{lut:[e.lut],offset:e.offset,outputPixelType:o});return f!=null&&e.mask&&(f.mask=He(n.pixels[0],n.mask,e.mask,e.offset,"u8")),f}const{inputRanges:i,outputValues:a,noDataRanges:r,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return Je(n,{inputRanges:i,outputValues:a,noDataRanges:r,outputPixelType:o,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:n,isLastInputRangeInclusive:e}=this.functionArguments,o=new Float32Array(3*E),i=1e-5,a=this.functionArguments.inputRanges??[],r=this.functionArguments.outputValues??[],u=r.length;for(let p=0;p<E;p++)o[3*p]=a[2*p]??ut-1,o[3*p+1]=a[2*p+1]??ut,o[3*p+2]=r[p]??0,p<u&&(p>0&&(o[3*p]-=i),(p<u-1||!e)&&(o[3*p+1]-=i));const l=new Float32Array(2*E);return l.fill(ut),n!=null&&n.length&&l.set(n),{allowUnmatched:t,rangeMaps:o,noDataRanges:l,clampRange:bt(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],K.prototype,"functionName",void 0),c([h({type:Kn,json:{write:!0,name:"rasterFunctionArguments"}})],K.prototype,"functionArguments",void 0),c([h()],K.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],K.prototype,"lookup",void 0),K=c([y("esri.layers.support.rasterFunctions.RemapFunction")],K);const Yn=K;var Dt;const Zn=new vt({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let O=Dt=class extends S{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Dt({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([Q(Zn)],O.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],O.prototype,"zFactor",void 0),c([h({type:Number,json:{name:"psPower",write:!0}})],O.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{name:"psZFactor",write:!0}})],O.prototype,"pixelSizeFactor",void 0),c([h({type:Boolean,json:{write:!0}})],O.prototype,"removeEdgeEffect",void 0),O=Dt=c([y("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],O);const Qn=O;let Y=class extends k{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var n;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((n=t.spatialReference)==null?void 0:n.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var m;const n=(m=t.pixelBlocks)==null?void 0:m[0];if(n==null)return null;const{zFactor:e,slopeType:o,pixelSizePower:i,pixelSizeFactor:a}=this.functionArguments,{isGCS:r}=this,{extent:u,primaryPixelSizes:l}=t,p=l==null?void 0:l[0],f=p??(u?{x:u.width/n.width,y:u.height/n.height}:{x:1,y:1});return Ke(n,{zFactor:e,slopeType:o,pixelSizePower:i,pixelSizeFactor:a,isGCS:r,resolution:f})}_getWebGLParameters(){const{zFactor:t,slopeType:n,pixelSizeFactor:e,pixelSizePower:o}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*$t:t,slopeType:n,pixelSizeFactor:e??0,pixelSizePower:o??0}}};c([h({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),c([h({type:Qn,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),c([h()],Y.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Y.prototype,"isGCS",void 0),Y=c([y("esri.layers.support.rasterFunctions.SlopeFunction")],Y);const tr=Y;var _t;let Z=_t=class extends S{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(s,t){if(!(s!=null&&s.length))return null;const n=[];return s.forEach(e=>{const o={min:e.min,max:e.max,avg:e.avg??e.mean,stddev:e.stddev??e.standardDeviation};n.push(o)}),n}writeStatistics(s,t,n){if(!(s!=null&&s.length))return;const e=[];s.forEach(o=>{const i={...o,mean:o.avg,standardDeviation:o.stddev};delete i.avg,delete i.stddev,e.push(i)}),t[n]=e}clone(){return new _t({statistics:D(this.statistics),histograms:D(this.histograms)})}};c([h({json:{write:!0}})],Z.prototype,"statistics",void 0),c([lt("statistics")],Z.prototype,"readStatistics",null),c([ct("statistics")],Z.prototype,"writeStatistics",null),c([h({json:{write:!0}})],Z.prototype,"histograms",void 0),Z=_t=c([y("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Z);const er=Z;let V=class extends k{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const n=t.clone(),{statistics:e,histograms:o}=this.functionArguments;return o&&(n.histograms=o),e&&(n.statistics=e),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){var n;return(n=t.pixelBlocks)==null?void 0:n[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],V.prototype,"functionName",void 0),c([h({type:er,json:{write:!0,name:"rasterFunctionArguments"}})],V.prototype,"functionArguments",void 0),c([h()],V.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],V.prototype,"indexedColormap",void 0),c([h()],V.prototype,"isNoopProcess",void 0),V=c([y("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],V);const sr=V;var Et;const nr=new vt({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let R=Et=class extends S{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(s,t,n){s!=null&&s.length&&(Array.isArray(s[0])||(s=s.map(e=>[e.min,e.max,e.avg,e.stddev])),t[n]=s)}clone(){return new Et({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:D(this.statistics),gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([h({type:Boolean,json:{write:!0}})],R.prototype,"computeGamma",void 0),c([h({type:Boolean,json:{name:"dra",write:!0}})],R.prototype,"dynamicRangeAdjustment",void 0),c([h({type:[Number],json:{write:!0}})],R.prototype,"gamma",void 0),c([h()],R.prototype,"histograms",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"maxPercent",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"minPercent",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"numberOfStandardDeviations",void 0),c([h({type:Number,json:{name:"max",write:!0}})],R.prototype,"outputMax",void 0),c([h({type:Number,json:{name:"min",write:!0}})],R.prototype,"outputMin",void 0),c([h({type:Number,json:{write:!0}})],R.prototype,"sigmoidStrengthLevel",void 0),c([h({json:{type:[[Number]],write:!0}})],R.prototype,"statistics",void 0),c([ct("statistics")],R.prototype,"writeStatistics",null),c([Q(nr)],R.prototype,"stretchType",void 0),c([h({type:Boolean,json:{write:!0}})],R.prototype,"useGamma",void 0),R=Et=c([y("esri.layers.support.rasterFunctions.StretchFunctionArguments")],R);const rr=R;let L=class extends k{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:n}=t,{functionArguments:e}=this,{dynamicRangeAdjustment:o,gamma:i,useGamma:a}=e;if(!o&&["u8","u16","s8","s16"].includes(n)){const u=At(e.toJSON(),{rasterInfo:t}),l=this._isOutputRoundingNeeded()?"round":"float";this.lookup=Ye({pixelType:n,...u,gamma:a?i:null,rounding:l}),this.cutOffs=u}else o||(this.cutOffs=At(e.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(n);const r=t.clone();return r.pixelType=this.outputPixelType,r.statistics=null,r.histograms=null,r.colormap=null,r.attributeTable=null,this.outputPixelType==="u8"&&(r.keyProperties.DataType="processed"),this.rasterInfo=r,{success:!0,supportsGPU:!o}}_processPixels(t){var r;const n=(r=t.pixelBlocks)==null?void 0:r[0];if(n==null)return n;const{lookup:e}=this;if(e)return Ne(n,{...e,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:o}=this,i=this.cutOffs||At(o.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:n}),a=o.useGamma?o.gamma:null;return Ze(n,{...i,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:n=255,gamma:e,useGamma:o}=this.functionArguments,i=this.rasterInfo.bandCount>=2?3:1,a=o&&e&&e.length?Qe(i,e):[1,1,1],{minCutOff:r,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};r.length===1&&(r[1]=r[2]=r[0],u[1]=u[2]=u[0]);const l=new Float32Array(i);let p;for(p=0;p<i;p++)l[p]=(n-t)/(u[p]-r[p]);const f=this._isOutputRoundingNeeded();return{bandCount:i,outMin:t,outMax:n,minCutOff:r,maxCutOff:u,factor:l,useGamma:o,gamma:o&&e?e:[1,1,1],gammaCorrection:o&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:f,type:"stretch"}}};c([h({json:{write:!0,name:"rasterFunction"}})],L.prototype,"functionName",void 0),c([h({type:rr,json:{write:!0,name:"rasterFunctionArguments"}})],L.prototype,"functionArguments",void 0),c([h()],L.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],L.prototype,"lookup",void 0),c([h({json:{write:!0}})],L.prototype,"cutOffs",void 0),L=c([y("esri.layers.support.rasterFunctions.StretchFunction")],L);const or=L,C=new Map;function ir(s,t){const{rasterFunctionArguments:n}=s;n&&(n.rasters||[n.raster]).forEach(e=>{e&&typeof e!="number"&&(typeof e=="string"?e.startsWith("http")&&(t.includes(e)||t.push(e)):"rasterFunctionArguments"in e&&ir(e,t))})}function _r(s,t){if(t=t??{},"function"in(s=D(s))&&"arguments"in s&&s.arguments&&(s=Kt(s,t)),"rasterFunction"in s)return ke(s=zt(s),t);throw new qt("raster-function-helper","unsupported raster function json.")}function ar(s,t){return t[0]==="rasters"&&Array.isArray(s.rasters)?s.rasters:t.map(n=>s[n])}function ve(s){return!!(s&&typeof s=="object"&&s.rasterFunction&&s.rasterFunctionArguments)}function zt(s){var o;const{rasterFunction:t,rasterFunctionArguments:n}=s,e={};for(const i in n){let a=n[i];const r=i.toLowerCase();if(r==="rasters"&&Array.isArray(a))e.rasters=a.map(u=>ve(u)?zt(u):u);else switch(ve(a)&&(a=zt(a)),r){case"dra":e.dra=a;break;case"pspower":e.psPower=a;break;case"pszfactor":e.psZFactor=a;break;case"bandids":e.bandIds=a;break;default:e[i[0].toLowerCase()+i.slice(1)]=a}}return t!=="Local"||(o=e.rasters)!=null&&o.length||(e.rasters=["$$"]),{...s,rasterFunctionArguments:e}}function ke(s,t){var m,w;const{rasterFunction:n,rasterFunctionArguments:e}=s,o=(m=s.outputPixelType)==null?void 0:m.toLowerCase();if(n==null||!C.has(n))throw new qt("raster-function-helper",`unsupported raster function: ${n}`);const i=C.get(n),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...s,outputPixelType:o}),{rasterArgumentNames:r}=a,u=[],l=ar(e,r),p=r[0]==="rasters",f=[];for(let v=0;v<l.length;v++){const b=l[v];let T;b==null||typeof b=="string"&&b.startsWith("$")?u.push(t==null?void 0:t.raster):typeof b=="string"?t[b]&&u.push(t[b]):typeof b!="number"&&"rasterFunction"in b&&(T=ke(b,t),p||(a.functionArguments[r[v]]=T),u.push(T)),p&&f.push(T??b)}if(p&&(a.functionArguments.rasters=f),t){a.sourceRasters=u;const v=(w=t.raster)==null?void 0:w.url;v&&(a.mainPrimaryRasterId=v)}return a}function je(s,t){if(!s||!t)return;let n;for(n in s){const e=s[n];e&&typeof e=="object"&&("function"in e&&e.function&&e.arguments?je(e.arguments,t):"type"in e&&"value"in e&&e.type==="RasterFunctionVariable"&&t[e.name]!=null&&(e.value=t[e.name]))}}function Gt(s){var t,n;if(!s||typeof s!="object")return s;if(Array.isArray(s)&&s.length===0)return s.length===0?null:["number","string"].includes(typeof s[0])?s:s.map(e=>Gt(e));if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(!("type"in s))return s;switch(s.type){case"RasterStatistics":case"RecordSet":default:return s;case"Scalar":return s.value;case"AlgorithmicColorRamp":return be(s);case"MultiPartColorRamp":return{type:"multipart",colorRamps:s.ArrayOfColorRamp.map(be)};case"ArgumentArray":{if(!((t=s.elements)!=null&&t.length)||s.elements[0].type==="RasterStatistics")return s.elements;const e=[];for(let o=0;o<s.elements.length;o++){const i=s.elements[o],{type:a}=i;if(a)if(a==="RasterFunctionTemplate")e.push(Kt(i));else{if(a!=="RasterFunctionVariable")throw new qt("raster-function-helper","unsupported raster function json.");{const r=i.value==null?(n=i.name)!=null&&n.toLowerCase().includes("raster")?"$$":null:Gt(i.value);e.push(r)}}else e.push(i)}return e}}}function be(s){const t=s.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:e}=s;if(!Array.isArray(n)){const{r:o,g:i,b:a}=te({h:n.Hue,s:n.Saturation,v:n.Value});n=[o,i,a,n.AlphaValue]}if(!Array.isArray(e)){const{r:o,g:i,b:a}=te({h:e.Hue,s:e.Saturation,v:e.Value});e=[o,i,a,e.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:n,toColor:e}}function Kt(s,t){t&&je(s,t);const n={};return Me(s,n),n}function Me(s,t){if(!s||!t)return;const{function:n,arguments:e}=s;if(!n||!e)return;t.rasterFunction=n.type.replace("Function",""),t.outputPixelType=n.pixelType;const o={};t.rasterFunctionArguments=o;for(const i in e){const a=e[i];typeof a=="object"&&("function"in a&&a.function&&a.arguments?(t.rasterFunctionArguments[i]={},Me(a,t.rasterFunctionArguments[i])):"value"in a&&(o[i]=a.type==="RasterFunctionTemplate"?Kt(a):Gt(a.value)))}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),t.rasterFunction){case"Stretch":ur(o);break;case"Colormap":lr(o);break;case"Convolution":cr(o);break;case"Mask":pr(o)}}function ur(s){var t;(t=s.Statistics)!=null&&t.length&&typeof s.Statistics=="object"&&(s.Statistics=s.Statistics.map(n=>[n.min,n.max,n.mean,n.standardDeviation])),s.NumberOfStandardDeviation!=null&&(s.NumberOfStandardDeviations=s.NumberOfStandardDeviation,delete s.NumberOfStandardDeviation)}function lr(s){var t,n;((n=(t=s.ColorRamp)==null?void 0:t.type)==null?void 0:n.toLowerCase())==="randomcolorramp"&&(delete s.ColorRamp,s.ColormapName="Random"),s.ColorSchemeType===0&&delete s.ColorRamp}function cr(s){s.ConvolutionType!=null&&(s.Type=s.ConvolutionType,delete s.ConvolutionType)}function pr(s){var t;(t=s.NoDataValues)!=null&&t.length&&typeof s.NoDataValues[0]=="string"&&(s.NoDataValues=s.NoDataValues.filter(n=>n!=="").map(n=>Number(n)))}C.set("Aspect",{desc:"Aspect Function",ctor:rs,rasterArgumentNames:["raster"]}),C.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Bs,rasterArgumentNames:["raster"]}),C.set("Colormap",{desc:"Colormap Function",ctor:Os,rasterArgumentNames:["raster"]}),C.set("CompositeBand",{desc:"CompositeBand Function",ctor:Ls,rasterArgumentNames:["rasters"]}),C.set("Convolution",{desc:"Convolution Function",ctor:Zs,rasterArgumentNames:["raster"]}),C.set("ExtractBand",{desc:"ExtractBand Function",ctor:sn,rasterArgumentNames:["raster"]}),C.set("Curvature",{desc:"Curvature Function",ctor:tn,rasterArgumentNames:["raster"]}),C.set("Local",{desc:"Local Function",ctor:Wn,rasterArgumentNames:["rasters"]}),C.set("Mask",{desc:"Mask Function",ctor:Xn,rasterArgumentNames:["raster"]}),C.set("NDVI",{desc:"NDVI Function",ctor:Jn,rasterArgumentNames:["raster"]}),C.set("Remap",{desc:"Remap Function",ctor:Yn,rasterArgumentNames:["raster"]}),C.set("Slope",{desc:"Slope Function",ctor:tr,rasterArgumentNames:["raster"]}),C.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:sr,rasterArgumentNames:["raster"]}),C.set("Stretch",{desc:"Stretch Function",ctor:or,rasterArgumentNames:["raster"]});let mt=class extends Wt{get affectsPixelSize(){return!1}forwardTransform(s){return s}inverseTransform(s){return s}};c([h()],mt.prototype,"affectsPixelSize",null),c([h({json:{write:!0}})],mt.prototype,"spatialReference",void 0),mt=c([y("esri.layers.support.rasterTransforms.BaseRasterTransform")],mt);const Yt=mt;var Ot;let dt=Ot=class extends Yt{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(s){return(s=s.clone()).type==="point"?(s.x>180+this.tolerance&&(s.x-=360),s):(s.xmin>=180-this.tolerance?(s.xmax-=360,s.xmin-=360):s.xmax>180+this.tolerance&&(s.xmin=-180,s.xmax=180),s)}inverseTransform(s){return(s=s.clone()).type==="point"?(s.x<-this.tolerance&&(s.x+=360),s):(s.xmin<-this.tolerance&&(s.xmin+=360,s.xmax+=360),s)}clone(){return new Ot({tolerance:this.tolerance})}};c([Q({GCSShiftXform:"gcs-shift"})],dt.prototype,"type",void 0),c([h()],dt.prototype,"tolerance",void 0),dt=Ot=c([y("esri.layers.support.rasterTransforms.GCSShiftTransform")],dt);const hr=dt;var Vt;let xt=Vt=class extends Yt{constructor(){super(...arguments),this.type="identity"}clone(){return new Vt}};c([Q({IdentityXform:"identity"})],xt.prototype,"type",void 0),xt=Vt=c([y("esri.layers.support.rasterTransforms.IdentityTransform")],xt);const fr=xt;var Lt;function Ut(s,t,n){const{x:e,y:o}=t;if(n<2)return{x:s[0]+e*s[2]+o*s[4],y:s[1]+e*s[3]+o*s[5]};if(n===2){const m=e*e,w=o*o,v=e*o;return{x:s[0]+e*s[2]+o*s[4]+m*s[6]+v*s[8]+w*s[10],y:s[1]+e*s[3]+o*s[5]+m*s[7]+v*s[9]+w*s[11]}}const i=e*e,a=o*o,r=e*o,u=i*e,l=i*o,p=e*a,f=o*a;return{x:s[0]+e*s[2]+o*s[4]+i*s[6]+r*s[8]+a*s[10]+u*s[12]+l*s[14]+p*s[16]+f*s[18],y:s[1]+e*s[3]+o*s[5]+i*s[7]+r*s[9]+a*s[11]+u*s[13]+l*s[15]+p*s[17]+f*s[19]}}function Ae(s,t,n){const{xmin:e,ymin:o,xmax:i,ymax:a,spatialReference:r}=t;let u=[];if(n<2)u.push({x:e,y:a}),u.push({x:i,y:a}),u.push({x:e,y:o}),u.push({x:i,y:o});else{let f=10;for(let m=0;m<f;m++)u.push({x:e,y:o+(a-o)*m/(f-1)}),u.push({x:i,y:o+(a-o)*m/(f-1)});f=8;for(let m=1;m<=f;m++)u.push({x:e+(i-e)*m/f,y:o}),u.push({x:e+(i-e)*m/f,y:a})}u=u.map(f=>Ut(s,f,n));const l=u.map(f=>f.x),p=u.map(f=>f.y);return new _e({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:r})}function mr(s){const[t,n,e,o,i,a]=s,r=e*a-i*o,u=i*o-e*a;return[(i*n-t*a)/r,(e*n-t*o)/u,a/r,o/u,-i/r,-e/u]}let j=Lt=class extends Yt{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(s,t){const{coeffX:n,coeffY:e}=t;if(!(n!=null&&n.length)||!(e!=null&&e.length)||n.length!==e.length)return null;const o=[];for(let i=0;i<n.length;i++)o.push(n[i]),o.push(e[i]);return o}writeForwardCoefficients(s,t,n){const e=[],o=[];for(let i=0;i<(s==null?void 0:s.length);i++)i%2==0?e.push(s[i]):o.push(s[i]);t.coeffX=e,t.coeffY=o}get inverseCoefficients(){let s=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!s&&t&&this.polynomialOrder<2&&(s=mr(t)),s}set inverseCoefficients(s){this._set("inverseCoefficients",s)}readInverseCoefficients(s,t){const{inverseCoeffX:n,inverseCoeffY:e}=t;if(!(n!=null&&n.length)||!(e!=null&&e.length)||n.length!==e.length)return null;const o=[];for(let i=0;i<n.length;i++)o.push(n[i]),o.push(e[i]);return o}writeInverseCoefficients(s,t,n){const e=[],o=[];for(let i=0;i<(s==null?void 0:s.length);i++)i%2==0?e.push(s[i]):o.push(s[i]);t.inverseCoeffX=e,t.inverseCoeffY=o}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(s){if(s.type==="point"){const t=Ut(this.forwardCoefficients,s,this.polynomialOrder);return new ee({x:t.x,y:t.y,spatialReference:s.spatialReference})}return Ae(this.forwardCoefficients,s,this.polynomialOrder)}inverseTransform(s){if(s.type==="point"){const t=Ut(this.inverseCoefficients,s,this.polynomialOrder);return new ee({x:t.x,y:t.y,spatialReference:s.spatialReference})}return Ae(this.inverseCoefficients,s,this.polynomialOrder)}clone(){return new Lt({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([h({json:{write:!0}})],j.prototype,"polynomialOrder",void 0),c([h()],j.prototype,"forwardCoefficients",void 0),c([lt("forwardCoefficients",["coeffX","coeffY"])],j.prototype,"readForwardCoefficients",null),c([ct("forwardCoefficients")],j.prototype,"writeForwardCoefficients",null),c([h({json:{write:!0}})],j.prototype,"inverseCoefficients",null),c([lt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],j.prototype,"readInverseCoefficients",null),c([ct("inverseCoefficients")],j.prototype,"writeInverseCoefficients",null),c([h()],j.prototype,"affectsPixelSize",null),c([Q({PolynomialXform:"polynomial"})],j.prototype,"type",void 0),j=Lt=c([y("esri.layers.support.rasterTransforms.PolynomialTransform")],j);const dr=j,De={GCSShiftXform:hr,IdentityXform:fr,PolynomialXform:dr},gr=Object.keys(De);function Er(s){const t=s==null?void 0:s.type;return!s||gr.includes(t)}function zr(s){if(!(s==null?void 0:s.type))return null;const n=De[s==null?void 0:s.type];if(n){const e=new n;return e.read(s),e}return null}export{ir as C,_r as N,Er as f,zr as i,hr as n,dr as y};
