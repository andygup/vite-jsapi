import{bw as m,bf as w,fo as E,X as L,cQ as g,ae as c,af as h,ai as Q,aj as q,dv as M,m as Z,Y as d,_ as l,s as j}from"./index-298039cc.js";import{i as b,c as D}from"./infoFor3D-1eaade9a.js";import{b as y,K as S}from"./Query-a9897e6e.js";import{n as $,s as k}from"./executeForIds-f607500d.js";import{S as z,c as B}from"./query-31751284.js";import{a as J}from"./executeQueryJSON-9b41cacb.js";import{I as N,s as U}from"./featureConversionUtils-d60f35b9.js";import{g as X}from"./FeatureSet-3f378b6d.js";async function Y(r,t,e){const o=m(r);return z(o,y.from(t),{...e}).then(s=>({count:s.data.count,extent:w.fromJSON(s.data.extent)}))}function K(r,t){return t}function _(r,t,e,o){switch(e){case 0:return p(r,t+o,0);case 1:return r.originPosition==="lowerLeft"?p(r,t+o,1):tt(r,t+o,1)}}function P(r,t,e,o){return e===2?p(r,t,2):_(r,t,e,o)}function H(r,t,e,o){return e===2?p(r,t,3):_(r,t,e,o)}function W(r,t,e,o){return e===3?p(r,t,3):P(r,t,e,o)}function p({translate:r,scale:t},e,o){return r[o]+e*t[o]}function tt({translate:r,scale:t},e,o){return r[o]-e*t[o]}class et{constructor(t){this._options=t,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=K,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{}}createFeatureResult(){return{fields:[],features:[]}}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;const e=E(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(e!=null)for(const o of t.features)e(o.geometry)}createSpatialReference(){return{}}addField(t,e){const o=t.fields;L(o),o.push(e);const s=o.map(i=>i.name);this._attributesConstructor=function(){for(const i of s)this[i]=null}}addFeature(t,e){t.features.push(e)}prepareFeatures(t){switch(this._transform=t.transform,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&this._vertexDimension++,t.geometryType){case"esriGeometryPoint":this.addCoordinate=(e,o,s)=>this.addCoordinatePoint(e,o,s),this.createGeometry=e=>this.createPointGeometry(e);break;case"esriGeometryPolygon":this.addCoordinate=(e,o,s)=>this._addCoordinatePolygon(e,o,s),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"esriGeometryPolyline":this.addCoordinate=(e,o,s)=>this._addCoordinatePolyline(e,o,s),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"esriGeometryMultipoint":this.addCoordinate=(e,o,s)=>this._addCoordinateMultipoint(e,o,s),this.createGeometry=e=>this._createMultipointGeometry(e)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,{attributes:new this._attributesConstructor}}allocateCoordinates(){}addLength(t,e,o){this._lengths.length===0&&(this._toAddInCurrentPath=e),this._lengths.push(e)}addQueryGeometry(t,e){const{queryGeometry:o,queryGeometryType:s}=e,i=N(o.clone(),o,!1,!1,this._transform),u=U(i,s,!1,!1);t.queryGeometryType=s,t.queryGeometry={...u}}createPointGeometry(t){const e={x:0,y:0,spatialReference:t.spatialReference};return t.hasZ&&(e.z=0),t.hasM&&(e.m=0),e}addCoordinatePoint(t,e,o){const s=g(this._transform,"transform");switch(e=this._applyTransform(s,e,o,0),o){case 0:t.x=e;break;case 1:t.y=e;break;case 2:"z"in t?t.z=e:t.m=e;break;case 3:t.m=e}}_transformPathLikeValue(t,e){let o=0;e<=1&&(o=this._previousCoordinate[e],this._previousCoordinate[e]+=t);const s=g(this._transform,"transform");return this._applyTransform(s,t,e,o)}_addCoordinatePolyline(t,e,o){this._dehydratedAddPointsCoordinate(t.paths,e,o)}_addCoordinatePolygon(t,e,o){this._dehydratedAddPointsCoordinate(t.rings,e,o)}_addCoordinateMultipoint(t,e,o){o===0&&t.points.push([]);const s=this._transformPathLikeValue(e,o);t.points[t.points.length-1].push(s)}_createPolygonGeometry(t){return{rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,o){o===0&&this._toAddInCurrentPath--==0&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const s=this._transformPathLikeValue(e,o),i=t[t.length-1];o===0&&(this._coordinateBufferPtr=0,this._coordinateBuffer=new Array(this._vertexDimension),i.push(this._coordinateBuffer)),this._coordinateBuffer[this._coordinateBufferPtr++]=s}_deriveApplyTransform(t){const{hasZ:e,hasM:o}=t;return e&&o?W:e?P:o?H:_}}async function rt(r,t,e){const o=m(r),s={...e},i=y.from(t),u=!i.quantizationParameters,{data:n}=await B(o,i,new et({sourceSpatialReference:i.sourceSpatialReference,applyTransform:u}),s);return n}let a=class extends q{constructor(r){super(r),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null}get parsedUrl(){return M(this.url)}async execute(r,t){const e=await this.executeJSON(r,t);return this.featureSetFromJSON(r,e,t)}async executeJSON(r,t){var n;const e=this._normalizeQuery(r),o=((n=r.outStatistics)==null?void 0:n[0])!=null,s=Z("featurelayer-pbf-statistics"),i=!o||s;let u;if(this.pbfSupported&&i)try{u=await rt(this.url,e,t)}catch(f){if(f.name!=="query:parsing-pbf")throw f;this.pbfSupported=!1}return this.pbfSupported&&i||(u=await J(this.url,e,t)),this._normalizeFields(u.fields),u}async featureSetFromJSON(r,t,e){if(!this._queryIs3DObjectFormat(r)||this.infoFor3D==null||!t.features)return X.fromJSON(t);const{meshFeatureSetFromJSON:o}=await d(l(()=>import("./meshFeatureSet-2666e87b.js").then(s=>s.a),["assets/meshFeatureSet-2666e87b.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/georeference-cb8290f8.js","assets/mat3f64-221ce671.js","assets/mat4f64-1413b4a7.js","assets/spatialReferenceEllipsoidUtils-a5ab4123.js","assets/quat-a2fc42ab.js","assets/quatf64-3363c48e.js","assets/vec32-44169d99.js","assets/BufferView-4066ca01.js","assets/imageUtils-c2d0d1ae.js","assets/earcut-668af5ae.js","assets/Indices-8de1e802.js","assets/deduplicate-5aa7f02b.js","assets/External-ca569a47.js","assets/infoFor3D-1eaade9a.js","assets/FeatureSet-3f378b6d.js","assets/Field-33980454.js","assets/fieldType-81268207.js"]),e);return o(r,this.infoFor3D,t)}executeForCount(r,t){return $(this.url,this._normalizeQuery(r),t)}executeForExtent(r,t){return Y(this.url,this._normalizeQuery(r),t)}executeForIds(r,t){return k(this.url,this._normalizeQuery(r),t)}async executeRelationshipQuery(r,t){const[{default:e},{executeRelationshipQuery:o}]=await d(Promise.all([l(()=>import("./RelationshipQuery-69f7bad3.js"),["assets/RelationshipQuery-69f7bad3.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/Query-a9897e6e.js","assets/Field-33980454.js","assets/fieldType-81268207.js"]),l(()=>import("./executeRelationshipQuery-5ec03d2b.js"),["assets/executeRelationshipQuery-5ec03d2b.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/query-31751284.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/FeatureSet-3f378b6d.js","assets/Field-33980454.js","assets/fieldType-81268207.js","assets/RelationshipQuery-69f7bad3.js","assets/Query-a9897e6e.js"])]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),o(this.url,r,t)}async executeRelationshipQueryForCount(r,t){const[{default:e},{executeRelationshipQueryForCount:o}]=await d(Promise.all([l(()=>import("./RelationshipQuery-69f7bad3.js"),["assets/RelationshipQuery-69f7bad3.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/Query-a9897e6e.js","assets/Field-33980454.js","assets/fieldType-81268207.js"]),l(()=>import("./executeRelationshipQuery-5ec03d2b.js"),["assets/executeRelationshipQuery-5ec03d2b.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/query-31751284.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/FeatureSet-3f378b6d.js","assets/Field-33980454.js","assets/fieldType-81268207.js","assets/RelationshipQuery-69f7bad3.js","assets/Query-a9897e6e.js"])]),t);return r=e.from(r),(this.gdbVersion||this.dynamicDataSource)&&((r=r.clone()).gdbVersion=r.gdbVersion||this.gdbVersion,r.dynamicDataSource=r.dynamicDataSource||this.dynamicDataSource),o(this.url,r,t)}async executeAttachmentQuery(r,t){const{executeAttachmentQuery:e,fetchAttachments:o,processAttachmentQueryResult:s}=await d(l(()=>import("./queryAttachments-8a39103a.js"),["assets/queryAttachments-8a39103a.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/query-31751284.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/AttachmentInfo-e5242fbe.js"]),t),i=m(this.url);return s(i,await(this.queryAttachmentsSupported?e(i,r,t):o(i,r,t)))}async executeTopFeaturesQuery(r,t){const{executeTopFeaturesQuery:e}=await d(l(()=>import("./executeTopFeaturesQuery-86ab6f4e.js"),["assets/executeTopFeaturesQuery-86ab6f4e.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/queryTopFeatures-cce7dcd7.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/query-31751284.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/FeatureSet-3f378b6d.js","assets/Field-33980454.js","assets/fieldType-81268207.js","assets/TopFeaturesQuery-e41629f5.js"]),t);return e(this.parsedUrl,r,this.sourceSpatialReference,t)}async executeForTopIds(r,t){const{executeForTopIds:e}=await d(l(()=>import("./executeForTopIds-ea12792e.js"),["assets/executeForTopIds-ea12792e.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/queryTopFeatures-cce7dcd7.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/query-31751284.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/TopFeaturesQuery-e41629f5.js"]),t);return e(this.parsedUrl,r,t)}async executeForTopExtents(r,t){const{executeForTopExtents:e}=await d(l(()=>import("./executeForTopExtents-1c09d129.js"),["assets/executeForTopExtents-1c09d129.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/queryTopFeatures-cce7dcd7.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/query-31751284.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/TopFeaturesQuery-e41629f5.js"]),t);return e(this.parsedUrl,r,t)}async executeForTopCount(r,t){const{executeForTopCount:e}=await d(l(()=>import("./executeForTopCount-6cd2aa12.js"),["assets/executeForTopCount-6cd2aa12.js","assets/index-298039cc.js","assets/index-001d3307.css","assets/queryTopFeatures-cce7dcd7.js","assets/normalizeUtils-1070937a.js","assets/normalizeUtilsCommon-385dee75.js","assets/query-31751284.js","assets/pbfQueryUtils-141b125a.js","assets/pbf-35a70a69.js","assets/OptimizedGeometry-33b2eb0d.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-824fc224.js","assets/TopFeaturesQuery-e41629f5.js"]),t);return e(this.parsedUrl,r,t)}_normalizeQuery(r){let t=y.from(r);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===r?t.clone():t,t.gdbVersion=r.gdbVersion||this.gdbVersion,t.dynamicDataSource=r.dynamicDataSource?S.from(r.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:e}=this;if(e!=null&&this._queryIs3DObjectFormat(r)){t=t===r?t.clone():t,t.formatOf3DObjects=null;const{supportedFormats:o,queryFormats:s}=e,i=b("model/gltf-binary",o)??D("glb",o),u=b("model/gltf+json",o)??D("gtlf",o);for(const n of s){if(n===i){t.formatOf3DObjects=n;break}n!==u||t.formatOf3DObjects||(t.formatOf3DObjects=n)}if(!t.formatOf3DObjects)throw new j("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(t.outFields==null||!t.outFields.includes("*")){t=t===r?t.clone():t,t.outFields==null&&(t.outFields=[]);const{originX:n,originY:f,originZ:F,translationX:x,translationY:C,translationZ:R,scaleX:O,scaleY:v,scaleZ:T,rotationX:I,rotationY:A,rotationZ:V,rotationDeg:G}=e.transformFieldRoles;t.outFields.push(n,f,F,x,C,R,O,v,T,I,A,V,G)}}return t}_normalizeFields(r){if(this.fieldsIndex!=null&&r!=null)for(const t of r){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON())}}_queryIs3DObjectFormat(r){return this.infoFor3D!=null&&r.returnGeometry===!0&&r.multipatchOption!=="xyFootprint"&&!r.outStatistics}};c([h({type:S})],a.prototype,"dynamicDataSource",void 0),c([h()],a.prototype,"fieldsIndex",void 0),c([h()],a.prototype,"gdbVersion",void 0),c([h()],a.prototype,"infoFor3D",void 0),c([h({readOnly:!0})],a.prototype,"parsedUrl",null),c([h()],a.prototype,"pbfSupported",void 0),c([h()],a.prototype,"queryAttachmentsSupported",void 0),c([h()],a.prototype,"sourceSpatialReference",void 0),c([h({type:String})],a.prototype,"url",void 0),a=c([Q("esri.tasks.QueryTask")],a);const ht=a;export{ht as x};
