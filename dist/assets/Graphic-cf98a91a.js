import{i as p,e as o,y as a,n as y,l as m}from"./cast-daef7652.js";import{i as h}from"./geometry-4b789d90.js";import{k as g}from"./PopupTemplate-343851b8.js";import{j as f}from"./symbols-fce921a6.js";import{i as c}from"./Clonable-f249bc0f.js";import{r as l}from"./typedArrayUtil-2bcf3cee.js";import"./ensureType-fa162cfc.js";import{v as u}from"./jsonUtils-8bd548d9.js";function b(e){if(!e)return null;const t={};for(const s in e){const i=u(e[s]);i&&(t[s]=i)}return Object.keys(t).length!==0?t:null}function d(e){if(!l(e))return null;const t={};for(const s in e){const i=e[s];i&&(t[s]=i.toJSON())}return Object.keys(t).length!==0?t:null}let r=class extends c(m){constructor(...e){super(...e),this.isAggregate=!1,this.layer=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:p(),configurable:!0})}normalizeCtorArgs(e,t,s,i){return e&&!e.declaredClass?e:{geometry:e,symbol:t,attributes:s,popupTemplate:i}}set aggregateGeometries(e){const t=this._get("aggregateGeometries");JSON.stringify(t)!==JSON.stringify(e)&&this._set("aggregateGeometries",e)}set attributes(e){const t=this._get("attributes");t!==e&&(this._set("attributes",e),this._notifyLayer("attributes",t,e))}set geometry(e){const t=this._get("geometry");t!==e&&(this._set("geometry",e),this._notifyLayer("geometry",t,e))}set symbol(e){const t=this._get("symbol");t!==e&&(this._set("symbol",e),this._notifyLayer("symbol",t,e))}set visible(e){const t=this._get("visible");t!==e&&(this._set("visible",e),this._notifyLayer("visible",t,e))}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;for(const t of[this.sourceLayer,this.layer])if(t){if("popupTemplate"in t&&t.popupTemplate)return t.popupTemplate;if(e&&"defaultPopupTemplate"in t&&l(t.defaultPopupTemplate))return t.defaultPopupTemplate}return null}getAttribute(e){var t;return(t=this.attributes)==null?void 0:t[e]}setAttribute(e,t){if(this.attributes){const s=this.getAttribute(e);this.attributes[e]=t,this._notifyLayer("attributes",s,t,e)}else this.attributes={[e]:t},this._notifyLayer("attributes",void 0,t,e)}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){return{aggregateGeometries:d(this.aggregateGeometries),geometry:l(this.geometry)?this.geometry.toJSON():null,symbol:l(this.symbol)?this.symbol.toJSON():null,attributes:{...this.attributes},popupTemplate:this.popupTemplate&&this.popupTemplate.toJSON()}}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry)}notifyMeshTransformChanged(){l(this.geometry)&&this.geometry.type==="mesh"&&this._notifyLayer("transform",this.geometry.transform,this.geometry.transform)}_notifyLayer(e,t,s,i){if(!this.layer||!("graphicChanged"in this.layer))return;const n={graphic:this,property:e,oldValue:t,newValue:s};e==="attributes"&&(n.attributeName=i),this.layer.graphicChanged(n)}};o([a({value:null,json:{read:b}})],r.prototype,"aggregateGeometries",null),o([a({value:null})],r.prototype,"attributes",null),o([a({value:null,types:h,json:{read:u}})],r.prototype,"geometry",null),o([a({type:Boolean})],r.prototype,"isAggregate",void 0),o([a({clonable:"reference"})],r.prototype,"layer",void 0),o([a({type:g})],r.prototype,"popupTemplate",void 0),o([a({clonable:"reference"})],r.prototype,"sourceLayer",void 0),o([a({value:null,types:f})],r.prototype,"symbol",null),o([a({type:Boolean,value:!0})],r.prototype,"visible",null),r=o([y("esri.Graphic")],r),function(e){e.generateUID=p}(r||(r={}));const A=r;export{A as g};
