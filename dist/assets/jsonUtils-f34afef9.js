import{c as u,f as d,d as b,m as w,e as h,y as C,n as $,S as x,i as I,a as D,b as L,k as M,o as k,p as v}from"./symbols-fce921a6.js";import{a as c}from"./Error-bd05b442.js";import{r as f,t as T}from"./typedArrayUtil-2bcf3cee.js";const y={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function F(e,s=y){var a,m;if(!e)return{symbol:null};const{retainId:i=y.retainId,ignoreDrivers:n=y.ignoreDrivers,hasLabelingContext:r=y.hasLabelingContext,retainCIM:l=y.retainCIM}=s;let o=null;if(u(e)||e instanceof d)o=e.clone();else if(e.type==="cim"){const t=(m=(a=e.data)==null?void 0:a.symbol)==null?void 0:m.type;if(t!=="CIMPointSymbol")return{error:new c("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${t||"unknown"}' is unsupported in 3D`,{symbol:e})};o=l?e.clone():b.fromCIMSymbol(e)}else if(e instanceof w)o=h.fromSimpleLineSymbol(e);else if(e instanceof C)o=b.fromSimpleMarkerSymbol(e);else if(e instanceof $)o=b.fromPictureMarkerSymbol(e);else if(e instanceof x)o=s.geometryType&&s.geometryType==="mesh"?I.fromSimpleFillSymbol(e):D.fromSimpleFillSymbol(e);else{if(!(e instanceof L))return{error:new c("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};o=r?M.fromTextSymbol(e):b.fromTextSymbol(e)}if(i&&o&&o.type!=="cim"&&(o.id=e.id),n&&u(o))for(let t=0;t<o.symbolLayers.length;++t)o.symbolLayers.getItemAt(t)._ignoreDrivers=!0;return{symbol:o}}const P=["building-scene","integrated-mesh","point-cloud","scene"];function A(e,s,i,n){const r=g(e,{},{context:n,isLabelSymbol:!1});f(r)&&(s[i]=r)}function S(e,s,i,n){const r=g(e,{},{context:n,isLabelSymbol:!0});f(r)&&(s[i]=r)}function p(e){return e instanceof k||e instanceof d}function g(e,s,i){var m;if(T(e))return null;const{context:n,isLabelSymbol:r}=i,l=n==null?void 0:n.origin,o=n==null?void 0:n.messages;if(l==="web-scene"&&!p(e)){const t=F(e,{retainCIM:!0,hasLabelingContext:r});return f(t.symbol)?t.symbol.write(s,n):(o==null||o.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:n,error:t.error})),null)}const a=(m=n==null?void 0:n.layer)==null?void 0:m.type;return l!=="web-map"&&(l!=="portal-item"||a&&P.includes(a))||!p(e)?e.write(s,n):(o==null||o.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:n})),null)}function W(e,s){return v(e,null,s)}export{S as c,A as m,W as p};
