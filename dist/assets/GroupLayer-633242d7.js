import{iq as p,ir as b,ev as v,ew as u,jg as c,jh as f,ex as _,bF as m,ji as L,D as y,jj as g,iE as w,jk as O,ab as t,ac as r,aV as M,al as h,ad as j,d$ as V}from"./index-0265f5b0.js";import{a as x}from"./lazyLayerLoader-4793e6f3.js";let s=class extends p(b(v(u(c(f(_(V))))))){constructor(i){super(i),this.allLayers=new m({getCollections:()=>[this.layers],getChildrenFunction:e=>"layers"in e?e.layers:null}),this.allTables=L(this),this.fullExtent=void 0,this.operationalLayerType="GroupLayer",this.spatialReference=void 0,this.type="group"}initialize(){this._enforceVisibility(this.visibilityMode,this.visible),this.addHandles(y(()=>this.visible,this._onVisibilityChange.bind(this),h))}destroy(){this.allLayers.destroy(),this.allTables.destroy()}_writeLayers(i,e,o,a){const l=[];if(!i)return l;i.forEach(d=>{const n=g(d,a.webmap?a.webmap.getLayerJSONFromResourceInfo(d):null,a);n!=null&&n.layerType&&l.push(n)}),e.layers=l}set portalItem(i){this._set("portalItem",i)}set visibilityMode(i){const e=this._get("visibilityMode")!==i;this._set("visibilityMode",i),e&&this._enforceVisibility(i,this.visible)}load(i){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"],layerModuleTypeMap:x},i)),Promise.resolve(this)}async loadAll(){return w(this,i=>{i(this.layers,this.tables)})}layerAdded(i){i.visible&&this.visibilityMode==="exclusive"?this._turnOffOtherLayers(i):this.visibilityMode==="inherited"&&(i.visible=this.visible),this.hasHandles(i.uid)?console.error(`Layer readded to Grouplayer: uid=${i.uid}`):this.addHandles(y(()=>i.visible,e=>this._onChildVisibilityChange(i,e),h),i.uid)}layerRemoved(i){this.removeHandles(i.uid),this._enforceVisibility(this.visibilityMode,this.visible)}_turnOffOtherLayers(i){this.layers.forEach(e=>{e!==i&&(e.visible=!1)})}_enforceVisibility(i,e){if(!O(this).initialized)return;const o=this.layers;let a=o.find(l=>l.visible);switch(i){case"exclusive":o.length&&!a&&(a=o.getItemAt(0),a.visible=!0),this._turnOffOtherLayers(a);break;case"inherited":o.forEach(l=>{l.visible=e})}}_onVisibilityChange(i){this.visibilityMode==="inherited"&&this.layers.forEach(e=>{e.visible=i})}_onChildVisibilityChange(i,e){switch(this.visibilityMode){case"exclusive":e?this._turnOffOtherLayers(i):this._isAnyLayerVisible()||(i.visible=!0);break;case"inherited":i.visible=this.visible}}_isAnyLayerVisible(){return this.layers.some(i=>i.visible)}};t([r({readOnly:!0,dependsOn:[]})],s.prototype,"allLayers",void 0),t([r({readOnly:!0})],s.prototype,"allTables",void 0),t([r()],s.prototype,"fullExtent",void 0),t([r({json:{read:!0,write:!0}})],s.prototype,"blendMode",void 0),t([r({json:{read:!1,write:{ignoreOrigin:!0}}})],s.prototype,"layers",void 0),t([M("layers")],s.prototype,"_writeLayers",null),t([r({type:["GroupLayer"]})],s.prototype,"operationalLayerType",void 0),t([r({json:{origins:{"web-document":{read:!1,write:!1}}}})],s.prototype,"portalItem",null),t([r()],s.prototype,"spatialReference",void 0),t([r({json:{read:!1},readOnly:!0,value:"group"})],s.prototype,"type",void 0),t([r({type:["independent","inherited","exclusive"],value:"independent",json:{write:!0,origins:{"web-map":{read:!1,write:!1}}}})],s.prototype,"visibilityMode",null),s=t([j("esri.layers.GroupLayer")],s);const $=s;export{$ as default};
