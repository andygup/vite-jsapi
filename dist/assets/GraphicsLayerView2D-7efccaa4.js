import{E as p,am as a,P as o,r as g,af as s,ag as m,ah as l}from"./index-4d2185ff.js";import{f as c,u as n}from"./LayerView-11ccad0d.js";import{i as d}from"./GraphicContainer-e41d5bf0.js";import{a as u}from"./GraphicsView2D-12cf3522.js";import"./Container-3752ec43.js";import"./definitions-3ddd14a8.js";import"./enums-64ab819c.js";import"./Texture-b3ddd51a.js";import"./color-c7e17294.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-59173bde.js";import"./FeatureContainer-0d4d3acc.js";import"./AttributeStoreView-44b99ec7.js";import"./TiledDisplayObject-22dc8dc3.js";import"./visualVariablesUtils-9e415929.js";import"./visualVariablesUtils-24d7e406.js";import"./VertexArrayObject-9f316384.js";import"./TileContainer-0608e5c9.js";import"./WGLContainer-98c5311d.js";import"./ProgramTemplate-7b4ac2be.js";import"./MaterialKey-1969c225.js";import"./utils-bc52866b.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import"./ExpandedCIM-42d1fd7f.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-9f57223b.js";import"./floatRGBA-9e331dff.js";import"./normalizeUtilsSync-e6790776.js";import"./projectionSupport-1ed3590a.js";import"./json-48e3ea08.js";import"./Matcher-7b5ea74e.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-490af101.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-d0abdcea.js";import"./util-ca5a3e58.js";import"./ComputedAttributeStorage-306d6cdb.js";import"./arcadeTimeUtils-f7ed0d02.js";import"./executionError-fb3f283a.js";import"./centroid-f8b142b6.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const mi=e;export{mi as default};
