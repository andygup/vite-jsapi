import{e as o,y as h,l as m,f as c,n as y}from"./cast-daef7652.js";import{D as v}from"./typedArrayUtil-2bcf3cee.js";import{o as u}from"./jsonMap-a9c94baf.js";import{G as f,W as w}from"./unitUtils-43365914.js";import"./ensureType-fa162cfc.js";import{r as S,o as l}from"./Extent-7f29a1bb.js";var s;const a=u()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),p=a.jsonValues.slice();v(p,"orthometric");const n=u()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});let r=s=class extends m{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,i){return a.write(e,t,i)}readHeightModel(e,t,i){return a.read(e)||(i&&i.messages&&i.messages.push(M(e,{context:i})),null)}readHeightUnit(e,t,i){return n.read(e)||(i&&i.messages&&i.messages.push(g(e,{context:i})),null)}readHeightUnitService(e,t,i){return f(e)||n.read(e)||(i&&i.messages&&i.messages.push(g(e,{context:i})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new s({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const i=w(t);return new s({heightModel:e.heightModel,heightUnit:i,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new s;return t.read(e,{origin:"web-scene"}),t}};function g(e,t){return new c("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}function M(e,t){return new c("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}o([h({type:a.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:p,default:"ellipsoidal"}}}})],r.prototype,"heightModel",void 0),o([S("web-scene","heightModel")],r.prototype,"writeHeightModel",null),o([l(["web-scene","service"],"heightModel")],r.prototype,"readHeightModel",null),o([h({type:n.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:n.jsonValues,write:n.write}}}})],r.prototype,"heightUnit",void 0),o([l("web-scene","heightUnit")],r.prototype,"readHeightUnit",null),o([l("service","heightUnit")],r.prototype,"readHeightUnitService",null),o([h({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],r.prototype,"vertCRS",void 0),o([l("service","vertCRS",["vertCRS","ellipsoid","geoid"])],r.prototype,"readVertCRS",null),r=s=o([y("esri.geometry.HeightModelInfo")],r);const V=r;export{V as v};
