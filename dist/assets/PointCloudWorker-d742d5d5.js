import{t as C,r as d,R as O}from"./typedArrayUtil-2bcf3cee.js";import{S as k}from"./quat-7867de93.js";import{g as $,f as R,c as D,I as F,e as U}from"./I3SBinaryReader-4c5d4a58.js";import{t as z}from"./mathUtils-daf59e84.js";import{r as B,n as A}from"./vec3f32-4322908d.js";import{x as J}from"./projection-33a6cba9.js";import{k as S}from"./Extent-7f29a1bb.js";import{a as N,b as V,d as T}from"./PointCloudUniqueValueRenderer-dbca0898.js";import"./mat3f64-b33e332c.js";import"./quatf64-7fd38d64.js";import"./common-701a4199.js";import"./Error-bd05b442.js";import"./string-3d0ebcd3.js";import"./VertexAttribute-9c5c630d.js";import"./preload-helper-101896b7.js";import"./promiseUtils-29120e0a.js";import"./unitUtils-43365914.js";import"./jsonMap-a9c94baf.js";import"./cast-daef7652.js";import"./ensureType-fa162cfc.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-7c382d01.js";import"./mat4-62d5e6a4.js";import"./Polyline-c56eca9b.js";import"./assets-4cb15247.js";import"./request-c2b0ab45.js";import"./zscale-a508c8e5.js";import"./enumeration-e46f3fd4.js";import"./LegendOptions-54bbb61a.js";import"./Color-2245b966.js";import"./colorUtils-639f4d25.js";function _(f,t,l,o){const{rendererJSON:u,isRGBRenderer:m}=f;let n=null,i=null;if(t&&m)n=t;else if(t&&u.type==="pointCloudUniqueValueRenderer"){i=N.fromJSON(u);const e=i.colorUniqueValueInfos;n=new Uint8Array(3*o);const s=v(i.fieldTransformType);for(let r=0;r<o;r++){const c=(s?s(t[r]):t[r])+"";for(let a=0;a<e.length;a++)if(e[a].values.includes(c)){n[3*r]=e[a].color.r,n[3*r+1]=e[a].color.g,n[3*r+2]=e[a].color.b;break}}}else if(t&&u.type==="pointCloudStretchRenderer"){i=V.fromJSON(u);const e=i.stops;n=new Uint8Array(3*o);const s=v(i.fieldTransformType);for(let r=0;r<o;r++){const c=s?s(t[r]):t[r],a=e.length-1;if(c<e[0].value)n[3*r]=e[0].color.r,n[3*r+1]=e[0].color.g,n[3*r+2]=e[0].color.b;else if(c>=e[a].value)n[3*r]=e[a].color.r,n[3*r+1]=e[a].color.g,n[3*r+2]=e[a].color.b;else for(let p=1;p<e.length;p++)if(c<e[p].value){const b=(c-e[p-1].value)/(e[p].value-e[p-1].value);n[3*r]=e[p].color.r*b+e[p-1].color.r*(1-b),n[3*r+1]=e[p].color.g*b+e[p-1].color.g*(1-b),n[3*r+2]=e[p].color.b*b+e[p-1].color.b*(1-b);break}}}else if(t&&u.type==="pointCloudClassBreaksRenderer"){i=T.fromJSON(u);const e=i.colorClassBreakInfos;n=new Uint8Array(3*o);const s=v(i.fieldTransformType);for(let r=0;r<o;r++){const c=s?s(t[r]):t[r];for(let a=0;a<e.length;a++)if(c>=e[a].minValue&&c<=e[a].maxValue){n[3*r]=e[a].color.r,n[3*r+1]=e[a].color.g,n[3*r+2]=e[a].color.b;break}}}else{n=new Uint8Array(3*o);for(let e=0;e<n.length;e++)n[e]=255}if(l&&i&&i.colorModulation){const e=i.colorModulation.minValue,s=i.colorModulation.maxValue,r=.3;for(let c=0;c<o;c++){const a=l[c],p=a>=s?1:a<=e?r:r+(1-r)*(a-e)/(s-e);n[3*c]=p*n[3*c],n[3*c+1]=p*n[3*c+1],n[3*c+2]=p*n[3*c+2]}}return n}function q(f,t){if(f.encoding==null||f.encoding===""){const l=$(t,f);if(C(l.vertexAttributes.position))return;const o=R(t,l.vertexAttributes.position),u=l.header.fields,m=[u.offsetX,u.offsetY,u.offsetZ],n=[u.scaleX,u.scaleY,u.scaleZ],i=o.length/3,e=new Float64Array(3*i);for(let s=0;s<i;s++)e[3*s]=o[3*s]*n[0]+m[0],e[3*s+1]=o[3*s+1]*n[1]+m[1],e[3*s+2]=o[3*s+2]*n[2]+m[2];return e}if(f.encoding==="lepcc-xyz")return D(t).result}function g(f,t,l){return d(f)&&f.attributeInfo.useElevation?E(t,l):d(f)?F(f.attributeInfo.storageInfo,f.buffer,l):null}function E(f,t){const l=new Float64Array(t);for(let o=0;o<t;o++)l[o]=f[3*o+2];return l}function P(f,t,l,o,u){const m=f.length/3;let n=0;for(let i=0;i<m;i++){let e=!0;for(let s=0;s<o.length&&e;s++){const{filterJSON:r}=o[s],c=u[s].values[i];switch(r.type){case"pointCloudValueFilter":{const a=r.mode==="exclude";r.values.includes(c)===a&&(e=!1);break}case"pointCloudBitfieldFilter":{const a=M(r.requiredSetBits),p=M(r.requiredClearBits);(c&a)===a&&!(c&p)||(e=!1);break}case"pointCloudReturnFilter":{const a=15&c,p=c>>>4&15,b=p>1,x=a===1,y=a===p;let I=!1;for(const h of r.includedReturns)if(h==="last"&&y||h==="firstOfMany"&&x&&b||h==="lastOfMany"&&y&&b||h==="single"&&!b){I=!0;break}I||(e=!1);break}}}e&&(l[n]=i,f[3*n]=f[3*i],f[3*n+1]=f[3*i+1],f[3*n+2]=f[3*i+2],t[3*n]=t[3*i],t[3*n+1]=t[3*i+1],t[3*n+2]=t[3*i+2],n++)}return n}function v(f){return f==null||f==="none"?null:f==="low-four-bit"?t=>15&t:f==="high-four-bit"?t=>(240&t)>>4:f==="absolute-value"?t=>Math.abs(t):f==="modulo-ten"?t=>t%10:null}function M(f){let t=0;for(const l of f||[])t|=1<<l;return t}class X{transform(t){const l=this._transform(t),o=[l.points.buffer,l.rgb.buffer];d(l.pointIdFilterMap)&&o.push(l.pointIdFilterMap.buffer);for(const u of l.attributes)"buffer"in u.values&&O(u.values.buffer)&&u.values.buffer!==l.rgb.buffer&&o.push(u.values.buffer);return Promise.resolve({result:l,transferList:o})}_transform(t){const l=q(t.schema,t.geometryBuffer);let o=l.length/3,u=null;const m=[],n=g(t.primaryAttributeData,l,o);d(t.primaryAttributeData)&&n&&m.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:n});const i=g(t.modulationAttributeData,l,o);d(t.modulationAttributeData)&&i&&m.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:i});let e=_(t.rendererInfo,n,i,o);if(t.filterInfo&&t.filterInfo.length>0&&d(t.filterAttributesData)){const r=t.filterAttributesData.map(c=>{const a=g(c,l,o),p={attributeInfo:c.attributeInfo,values:a};return m.push(p),p});u=new Uint32Array(o),o=P(l,e,u,t.filterInfo,r)}for(const r of t.userAttributesData){const c=g(r,l,o);m.push({attributeInfo:r.attributeInfo,values:c})}3*o<e.length&&(e=new Uint8Array(e.buffer.slice(0,3*o))),this._applyElevationOffsetInPlace(l,o,t.elevationOffset);const s=this._transformCoordinates(l,o,t.obb,S.fromJSON(t.inSR),S.fromJSON(t.outSR));return{obb:t.obb,points:s,rgb:e,attributes:m,pointIdFilterMap:u}}_transformCoordinates(t,l,o,u,m){if(!J(t,u,0,t,m,0,l))throw new Error("Can't reproject");const n=B(o.center[0],o.center[1],o.center[2]),i=A(),e=A();k(w,o.quaternion);const s=new Float32Array(3*l);for(let r=0;r<l;r++)i[0]=t[3*r]-n[0],i[1]=t[3*r+1]-n[1],i[2]=t[3*r+2]-n[2],z(e,i,w),o.halfSize[0]=Math.max(o.halfSize[0],Math.abs(e[0])),o.halfSize[1]=Math.max(o.halfSize[1],Math.abs(e[1])),o.halfSize[2]=Math.max(o.halfSize[2],Math.abs(e[2])),s[3*r]=i[0],s[3*r+1]=i[1],s[3*r+2]=i[2];return s}_applyElevationOffsetInPlace(t,l,o){if(o!==0)for(let u=0;u<l;u++)t[3*u+2]+=o}}const w=U();function St(){return new X}export{St as default};
