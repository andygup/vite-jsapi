import{J as y,l6 as h,_ as m,l7 as w,s as d,l8 as v,g$ as b,l9 as x,la as _,lb as E}from"./index-9f03d686.js";const p=y.getLogger("esri.layers.support.labelFormatUtils"),g={type:"simple",evaluate:()=>null},F={getAttribute:(a,n)=>a.field(n)};async function L(a,n,e){if(!a||!a.symbol||!n)return g;const l=a.where,s=h(a),i=l?await m(()=>import("./WhereClause-d8bb8187.js").then(r=>r.W),["assets/WhereClause-d8bb8187.js","assets/index-9f03d686.js","assets/index-d832a396.css","assets/executionError-fb3f283a.js"]):null;let o;if(s.type==="arcade"){const r=await w(s.expression,e,n);if(r==null)return g;o={type:"arcade",evaluate(u){try{const t=r.evaluate({$feature:"attributes"in u?r.repurposeFeature(u):u});if(t!=null)return t.toString()}catch{p.error(new d("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:u,expression:s}))}return null},needsHydrationToEvaluate:()=>_(s.expression)==null}}else o={type:"simple",evaluate:r=>s.expression.replace(/{[^}]*}/g,u=>{const t=u.slice(1,-1),c=n.get(t);if(!c)return u;let f=null;return"attributes"in r?r&&r.attributes&&(f=r.attributes[c.name]):f=r.field(c.name),f==null?"":V(f,c)})};if(l){let r;try{r=i.WhereClause.create(l,n)}catch(t){return p.error(new d("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:l,error:t})),g}const u=o.evaluate;o.evaluate=t=>{const c="attributes"in t?void 0:F;try{if(r.testFeature(t,c))return u(t)}catch(f){p.error(new d("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:l,feature:t,error:f}))}return null}}return o}function V(a,n){if(a==null)return"";const e=n.domain;if(e){if(e.type==="codedValue"||e.type==="coded-value"){const s=a;for(const i of e.codedValues)if(i.code===s)return i.name}else if(e.type==="range"){const s=+a,i="range"in e?e.range[0]:e.minValue,o="range"in e?e.range[1]:e.maxValue;if(i<=s&&s<=o)return e.name}}let l=a;return n.type==="date"||n.type==="esriFieldTypeDate"?l=v(l,E("short-date")):b(n)&&(l=x(+l)),l||""}export{L as createLabelFunction,V as formatField};
