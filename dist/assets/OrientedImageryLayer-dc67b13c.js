import{aH as l,e,y as t,a as f,bB as v,bD as u,K as c}from"./index-d29f6b97.js";import h from"./FeatureLayer-1b9cadb4.js";import"./UniqueValueRenderer-6bfde73c.js";import"./ColorStop-c9dfec3d.js";import"./diffUtils-149561ab.js";import"./colorRamps-5cc134e8.js";import"./jsonUtils-a30c08d1.js";import"./DictionaryLoader-d7f4a828.js";import"./LRUCache-2af9f319.js";import"./FieldsIndex-f92177f9.js";import"./heatmapUtils-b7e5e306.js";import"./MultiOriginJSONSupport-d8471874.js";import"./sql-6b2d38b4.js";import"./FeatureLayerBase-eb1910ef.js";import"./commonProperties-4511a72e.js";import"./ElevationInfo-568c6f07.js";import"./AttachmentQuery-ec55429b.js";import"./Query-02316d46.js";import"./RelationshipQuery-7bc28ffc.js";import"./serviceCapabilitiesUtils-daf60906.js";import"./editsZScale-d39634ea.js";import"./queryZScale-a900b0db.js";import"./FeatureSet-b4c3ebab.js";import"./APIKeyMixin-4e2720f9.js";import"./ArcGISService-60eebca2.js";import"./BlendLayer-6b704ca4.js";import"./jsonUtils-5b32189b.js";import"./CustomParametersMixin-238bf6a3.js";import"./EditBusLayer-f0fa7c71.js";import"./FeatureReductionLayer-1b796ac3.js";import"./FeatureEffect-2095f3f9.js";import"./FeatureFilter-ee8bfdef.js";import"./labelingInfo-59a7cf3b.js";import"./defaults-a3afa070.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-abee1819.js";import"./OrderedLayer-d05fc281.js";import"./PortalLayer-9cdb0d77.js";import"./portalItemUtils-3c9a4460.js";import"./ScaleRangeLayer-4ea69c96.js";import"./TemporalLayer-bcd2e667.js";import"./FeatureTemplate-7817a164.js";import"./FeatureType-ef13726a.js";import"./fieldProperties-4d9f93fc.js";import"./versionUtils-dd7c16a5.js";import"./styleUtils-c09586c0.js";import"./TopFeaturesQuery-78393f5a.js";import"./popupUtils-30b722d9.js";let r=class extends l(v){constructor(s){super(s)}read(s,p){const y={};for(const d in s)y[d.toLowerCase()]=s[d];super.read(y,p)}};e([t({json:{name:"dempathprefix"}})],r.prototype,"demPathPrefix",void 0),e([t({json:{name:"dempathsuffix"}})],r.prototype,"demPathSuffix",void 0),e([t({json:{name:"imagepathprefix"}})],r.prototype,"imagePathPrefix",void 0),e([t({json:{name:"imagepathsuffix"}})],r.prototype,"imagePathSuffix",void 0),e([t({json:{name:"depthimagepathprefix"}})],r.prototype,"depthImagePathPrefix",void 0),e([t({json:{name:"depthimagepathsuffix"}})],r.prototype,"depthImagePathSuffix",void 0),e([t({json:{name:"localimagepathprefix"}})],r.prototype,"localImagePathPrefix",void 0),e([t({json:{name:"localimagepathsuffix"}})],r.prototype,"localImagePathSuffix",void 0),e([t({json:{name:"videopathprefix"}})],r.prototype,"videoPathPrefix",void 0),e([t({json:{name:"videopathsuffix"}})],r.prototype,"videoPathSuffix",void 0),r=e([f("esri.layers.orientedImagery.core.Affixes")],r);const g=r;let i=class extends v{constructor(n){super(n)}};e([t({type:Number,json:{write:!0}})],i.prototype,"averageHeightAboveGround",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraHeading",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraPitch",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"cameraRoll",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"farDistance",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"horizontalFieldOfView",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"nearDistance",void 0),e([t({json:{write:!0}})],i.prototype,"orientedImageryType",void 0),e([t({type:Number,json:{write:!0}})],i.prototype,"verticalFieldOfView",void 0),i=e([f("esri.layers.orientedImagery.core.CameraProperties")],i);const x=i;let o=class extends h{constructor(){super(...arguments),this.affixes=null,this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery",this.elevationSource=null}readElevationSource(n,s){var y;let p=(y=n.url)==null?void 0:y.trim();if(p){const{affixes:d}=this;if(d){const{demPathSuffix:a,demPathPrefix:m}=d;m!=null&&m.trim()&&(p=(m==null?void 0:m.trim())+"/"+p),a!=null&&a.trim()&&(p=p+"/"+(a==null?void 0:a.trim()))}}return{...n,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new c("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};e([t({type:g,json:{write:!0}})],o.prototype,"affixes",void 0),e([t({type:x,json:{write:!0}})],o.prototype,"cameraProperties",void 0),e([t({json:{write:!0}})],o.prototype,"coverage",void 0),e([t({json:{write:!0}})],o.prototype,"coveragePercent",void 0),e([t({json:{write:!0}})],o.prototype,"defaultSearchLocation",void 0),e([t({json:{write:!0}})],o.prototype,"depthImage",void 0),e([t({json:{write:!0}})],o.prototype,"geometryType",void 0),e([t()],o.prototype,"imageProperties",void 0),e([t({type:Number,json:{write:!0}})],o.prototype,"maximumDistance",void 0),e([t({type:["OrientedImageryLayer"]})],o.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],o.prototype,"type",void 0),e([t({json:{write:!0},dependsOn:["affixes"]})],o.prototype,"elevationSource",void 0),e([u("portal-item","elevationSource",["elevationSource"])],o.prototype,"readElevationSource",null),o=e([f("esri.layers.OrientedImageryLayer")],o);const ue=o;export{ue as default};
