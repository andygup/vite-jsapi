import{K as m,dn as S,g as o,h as g,dp as f,dq as x,bz as T,dr as E,ds as A,dt as I,cm as L,d as _,e as y,y as p,a as M,C as w}from"./index-ebffac9a.js";import{n as D}from"./LayerView3D-8a020d29.js";import{i as P}from"./PopupSceneLayerView-971d963d.js";import{d as F}from"./LayerView-83293bbb.js";import"./popupUtils-8718a4ab.js";var i;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(i||(i={}));const n=w(),V=w();let d=class extends P(D(F)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){var e;return((e=this.layer.parsedUrl)==null?void 0:e.path)??""}get wasmLayerId(){return this._wasmLayerId}initialize(){var u;if(this._dbgFlags.add(i.Error),this.view.viewingMode!=="local")throw new m("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!((u=this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat)!=null&&u.textureFloat))throw new m("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!S(e,this.view.spatialReference))throw new m("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const s=this.layer.currentVariableId,t=this.layer.getVolume(s),l=this.layer.getVariable(s);if(t!=null&&l!=null){const h=t.dimensions[0],a=t.dimensions[1],c=t.zDimension;if(c>1){const v=t.dimensions[c],W=h.size*a.size*v.size;let b=1;switch(l.renderingFormat.type){case"Int16":case"UInt16":b=2;break;case"Int32":case"UInt32":case"Float32":b=4}this._futureMemory=b*W}}const r=this.view.addVoxelLayerViewToWasm(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=o(()=>this.suspended,a=>{const c=this.view.voxelWasm;c!=null&&c.setEnabled(this,!a)},g),this.handles.add([o(()=>this.layer.renderMode,a=>this._pushRenderModeToWasm(a)),o(()=>this.layer.currentVariableId,a=>this._pushCurrentVariableIdToWasm(a)),o(()=>this.layer.getSections(),a=>this._pushSectionsToWasm(a)),o(()=>this.layer.getVariableStyles(),a=>this._pushVariableStylesToWasm(a)),o(()=>this.layer.getVolumeStyles(),a=>this._pushVolumeStylesToWasm(a)),o(()=>this.layer.enableDynamicSections,a=>this._pushEnableDynamicSectionsToWasm(a)),o(()=>this.layer.enableIsosurfaces,a=>this._pushEnableIsosurfacesToWasm(a)),o(()=>this.layer.enableSections,a=>this._pushEnableSectionsToWasm(a)),o(()=>this.layer.enableSlices,a=>this._pushEnableSlicesToWasm(a)),o(()=>this.slicePlaneEnabled,a=>this._pushAnalysisSliceToWasm(a,this.view.slicePlane)),o(()=>this.view.slicePlane,a=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,a))])}).catch(h=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,h===-1)throw new m("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new m("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(r)}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=this.view.voxelWasm;return!(this._wasmLayerId<0||e==null)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(e,s){const t=e.attributes["Voxel.WorldPosition"];if(t){const l=f(),r=JSON.parse(t);if(x(r,this.view.renderSpatialReference,V,this.view.spatialReference||T.WGS84))return E(l,V),Promise.resolve({boundingBox:l,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){const e=this.view.voxelWasm;e!=null&&e.captureFrustum()}toggleFullVolumeExtentDraw(){const e=this.view.voxelWasm;e!=null&&e.toggleFullVolumeExtentDraw(this)}getLayerTimes(){let e=[];const s=this.view.voxelWasm;return s!=null&&(e=s.getLayerTimes(this)),e}getCurrentLayerTimeIndex(){let e=0;const s=this.view.voxelWasm;return s!=null&&(e=s.getCurrentLayerTimeIndex(this)),e}_pushRenderModeToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s!=null&&s.setRenderMode(this,e)||this._dbg(i.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s!=null&&s.setStaticSections(this,e)||this._dbg(i.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(s!=null?"have WASM":"don't have WASM!!!")),s!=null&&s.setCurrentVariable(this,e)||this._dbg(i.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!"));let t=!1;s!=null&&(t=s.setVariableStyles(this,e),t||this._dbg(i.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!"))}_accountForEnableSlices(e,s){const t=s??this.layer.enableSlices;for(let l=0;l<e.length;++l){const r=e[l];for(const u of r.slices)u.enabled=u.enabled&&t}}_pushVolumeStylesToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!"));let t=!1;s!=null&&(this._accountForEnableSlices(e,null),t=s.setVolumeStyles(this,e),t||this._dbg(i.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,s){const t=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(t?"have WASM":"don't have WASM!!!"));let l=!1;if(t!=null){if(s!=null){const r=s.origin;A(n,s.basis1,s.basis2),I(n,n),l=t.setAnalysisSlice(this,e,r,n)}else L(n,0,0,1),l=t.setAnalysisSlice(this,!1,n,n);l||this._dbg(i.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(s!=null?"have WASM":"don't have WASM!!!"));let t=!1;s!=null&&(t=s.setEnableDynamicSections(this,e),t||this._dbg(i.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!"))}_pushEnableSlicesToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(s?"have WASM":"don't have WASM!!!"));let t=!1;if(s!=null){const l=this.layer.getVolumeStyles();this._accountForEnableSlices(l,e),t=s.setVolumeStyles(this,l),t||this._dbg(i.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(s!=null?"have WASM":"don't have WASM!!!"));let t=!1;s!=null&&(t=s.setEnableIsosurfaces(this,e),t||this._dbg(i.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!"))}_pushEnableSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!"));let t=!1;s!=null&&(t=s.setEnableSections(this,e),t||this._dbg(i.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!"))}async whenGraphicAttributes(e,s){return e}_dbg(e,s){this._dbgFlags.has(e)&&(e===i.Error?_.getLogger(this.declaredClass).error(s):_.getLogger(this.declaredClass).warn(s))}};y([p()],d.prototype,"layer",void 0),y([p()],d.prototype,"baseUrl",null),y([p({type:Boolean})],d.prototype,"slicePlaneEnabled",void 0),d=y([M("esri.views.3d.layers.VoxelLayerView3D")],d);const H=d;export{H as default};
