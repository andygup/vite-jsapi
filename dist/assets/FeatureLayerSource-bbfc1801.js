import{cP as $,af as S,ag as I,aj as C,ew as M,be as k,m as J,L as b,aC as A,f4 as j,bf as P,bC as U,fn as D,ez as v,_ as Q,a as w,aO as L,ey as G,U as V,W as H,j8 as W,N as O,bt as X,ai as Y,bB as Z,j9 as z}from"./index-989909ce.js";import{isFeatureIdentifierArrayWithGlobalId as B,isFeatureIdentifierArrayWithObjectId as K}from"./editingSupport-995b9cfb.js";import{o as ee}from"./clientSideDefaults-bc1b5e96.js";import{x as te}from"./QueryTask-4526fe2a.js";import{l as se}from"./infoFor3D-5881142c.js";import{s as ae}from"./executeQueryJSON-59a5d802.js";import{i as re}from"./editsZScale-40cfbfd3.js";import{b as ie}from"./Query-a7c50b34.js";import"./normalizeUtils-938fb227.js";import"./normalizeUtilsCommon-8a86e794.js";import"./EditBusLayer-c15d1d59.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./executeForIds-92a2436e.js";import"./query-2f065ff9.js";import"./pbfQueryUtils-c6f5ba7a.js";import"./pbf-f1321473.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-08f2f3b3.js";import"./featureConversionUtils-b1362163.js";import"./FeatureSet-8fc9b923.js";import"./Field-52715ac0.js";import"./fieldType-72d6c895.js";const ne=new $({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),oe=new Set(["Feature Layer","Table"]),ue=new $({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let E=class extends M{constructor(){super(...arguments),this.type="feature-layer",this.refresh=k(async()=>{var s,r;await this.load();const t=(s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((r=this.sourceJSON.editingInfo)==null?void 0:r.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=t!=null?t.signal:null,s=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(s,e)),Promise.resolve(this)}get queryTask(){var l;const{capabilities:t,parsedUrl:e,dynamicDataSource:s,infoFor3D:r,gdbVersion:a,spatialReference:d,fieldsIndex:i}=this.layer,o=J("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&r==null,u=((l=t==null?void 0:t.operations)==null?void 0:l.supportsQueryAttachments)??!1;return new te({url:e.path,pbfSupported:o,fieldsIndex:i,infoFor3D:r,dynamicDataSource:s,gdbVersion:a,sourceSpatialReference:d,queryAttachmentsSupported:u})}async addAttachment(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+s+"/addAttachment",a=this._getLayerRequestOptions(),d=this._getFormDataForAttachment(e,a.query);try{const i=await b(r,{body:d});return this._createFeatureEditResult(i.data.addAttachmentResult)}catch(i){throw this._createAttachmentErrorResult(s,i)}}async updateAttachment(t,e,s){await this.load();const r=t.attributes[this.layer.objectIdField],a=this.layer.parsedUrl.path+"/"+r+"/updateAttachment",d=this._getLayerRequestOptions({query:{attachmentId:e}}),i=this._getFormDataForAttachment(s,d.query);try{const o=await b(a,{body:i});return this._createFeatureEditResult(o.data.updateAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(r,o)}}async applyEdits(t,e){var R,_,q,T,N,x;await this.load();const{layer:s}=this,r=s.infoFor3D,a=r!=null,d=a||((e==null?void 0:e.globalIdUsed)??!1),i=((R=t.addFeatures)==null?void 0:R.map(F=>this._getFeatureJSON(F,r)))??[],o=(await Promise.all(i)).filter(A),u=((_=t.updateFeatures)==null?void 0:_.map(F=>this._getFeatureJSON(F,r)))??[],l=(await Promise.all(u)).filter(A),c=this._getFeatureIds(t.deleteFeatures,d);re(o,l,s.spatialReference);const y=await this._getAttachmentEditsJSON(t),p=a?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,m=s.capabilities.editing.supportsAsyncApplyEdits&&p!=null&&(p.adds.length!==0||p.updates.length!==0),n={gdbVersion:(e==null?void 0:e.gdbVersion)||s.gdbVersion,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:d,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,sessionId:e==null?void 0:e.sessionId,async:m};e!=null&&e.returnServiceEditsOption?(n.edits=JSON.stringify([{id:s.layerId,adds:o,updates:l,deletes:c,attachments:y,assetMaps:p}]),n.returnServiceEditsOption=ne.toJSON(e==null?void 0:e.returnServiceEditsOption),n.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(n.adds=o.length?JSON.stringify(o):null,n.updates=l.length?JSON.stringify(l):null,n.deletes=c.length?d?JSON.stringify(c):c.join(","):null,n.attachments=y&&JSON.stringify(y),n.assetMaps=p!=null?JSON.stringify(p):void 0);const h=this._getLayerRequestOptions({method:"post",query:n}),g=e!=null&&e.returnServiceEditsOption?s.url:s.parsedUrl.path,f=m?await this._asyncApplyEdits(g+"/applyEdits",h):await b(g+"/applyEdits",h);if(!((q=s.capabilities.operations)!=null&&q.supportsEditing)&&((N=(T=s.effectiveCapabilities)==null?void 0:T.operations)!=null&&N.supportsEditing)){const F=(x=j)==null?void 0:x.findCredential(s.url);await(F==null?void 0:F.refreshToken())}return this._createEditsResult(f)}async deleteAttachments(t,e){await this.load();const s=t.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await b(r,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(a){throw this._createAttachmentErrorResult(s,a)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const s=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:r,url:a}=this.layer,{data:d}=await b(`${a}/${r}`,s),{id:i,extent:o,fullExtent:u,timeExtent:l}=d,c=o||u;return{id:i,fullExtent:c&&P.fromJSON(c),timeExtent:l&&U.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(t,e={}){await this.load();const s=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,s)}async queryFeatures(t,e){return await this.load(),this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!D(this.layer.url))return"unavailable";const t=v(this.layer.url,"status"),e=await b(t,{query:{f:"json"}});return ue.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:s}=await Q(()=>import("./uploadAssets-c15f9357.js"),["assets/uploadAssets-c15f9357.js","assets/index-989909ce.js","assets/index-0492b785.css","assets/External-bfc27801.js","assets/infoFor3D-5881142c.js"]);return s(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const s=(await b(t,e)).data.statusUrl;for(;;){const r=(await b(s,{query:{f:"json"},responseType:"json"})).data;switch(r.status){case"Completed":return b(r.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new w("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new w("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await L(le)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const{data:r}=await b(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:J("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:e}));t=r}this.sourceJSON=this._patchServiceJSON(t);const s=t.type;if(!oe.has(s))throw new w("feature-layer-source:unsupported-type",`Source type "${s}" is not supported`)}_patchServiceJSON(t){var e;if(t.type!=="Table"&&t.geometryType&&!((e=t==null?void 0:t.drawingInfo)!=null&&e.renderer)&&!t.defaultSymbol){const s=ee(t.geometryType).renderer;G("drawingInfo.renderer",s,t)}return t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t}async _getFeatureJSON(t,e){const{geometry:s}=t,r={...t.attributes};if(e!=null&&t.geometry!=null&&t.geometry.type==="mesh"){const{transformFieldRoles:a}=e,{origin:d,spatialReference:i,transform:o}=t.geometry,u=this.layer.spatialReference;await V(i,u);const l=H(d,u);if(r[a.originX]=l.x,r[a.originY]=l.y,r[a.originZ]=l.z,o!=null){const{translation:c,scale:y,rotation:p}=o;r[a.translationX]=c[0],r[a.translationY]=-c[2],r[a.translationZ]=c[1],r[a.scaleX]=y[0],r[a.scaleY]=y[1],r[a.scaleZ]=y[2],r[a.rotationX]=p[0],r[a.rotationY]=p[2],r[a.rotationZ]=p[1],r[a.rotationDeg]=p[3]}return{geometry:null,attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async _getAttachmentEditsJSON(t){const e=await Promise.all((t.addAttachments??[]).map(a=>this._getAttachmentEditJSON(a))),s=await Promise.all((t.updateAttachments??[]).map(a=>this._getAttachmentEditJSON(a))),r=t.deleteAttachments??[];return e.length||s.length||r.length?{adds:e,updates:s,deletes:[...r]}:null}async _getAttachmentEditJSON(t){const{feature:e,attachment:s}=t,{globalId:r,name:a,contentType:d,data:i,uploadId:o}=s,u={globalId:r,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(e&&(u.parentGlobalId="attributes"in e?e.attributes&&e.attributes[this.layer.globalIdField]:e.globalId),o)u.uploadId=o;else if(i){const l=await W(i);l&&(u.contentType=l.mediaType,u.data=l.data),i instanceof File&&(u.name=i.name)}return a&&(u.name=a),d&&(u.contentType=d),u}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const s=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const r=s.map(a=>a.geometry);return await this.uploadAssets(r),{adds:this._getAssetMapEditsJSON(s),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){var d;const e=new Array,s=this.layer.globalIdField,r=this.layer.parsedUrl,a=(i,o,u)=>{i.parts.length===1?e.push({globalId:z(),parentGlobalId:o,assetName:i.assetName,assetHash:i.parts[0].partHash,flags:u}):O.getLogger(this.declaredClass).error(`Skipping asset ${i.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)};for(const i of t){const o=i.geometry,{metadata:u}=o,l=u.getExternalSourcesOnService(r),c=i.getAttribute(s);if(l.length===0){O.getLogger(this.declaredClass).error(`Skipping feature ${c}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:y}=l[0],p=(d=i.geometry.transform)==null?void 0:d.geographic,m=p?["PROJECT_VERTICES"]:[];y.forEach(n=>a(n,c,m))}return e}_getFeatureIds(t,e){if(!t||t.length===0)return[];if(e&&B(t))return t.map(a=>a.globalId);if(K(t))return t.map(a=>a.objectId);const{layer:s}=this,r=e?s.globalIdField:s.objectIdField;return r?t.map(a=>a.getAttribute(r)):[]}_createEditsResult(t){var u,l,c,y,p,m;const e=t.data,{layerId:s}=this.layer,r=[];let a=null;if(Array.isArray(e))for(const n of e)r.push({id:n.id,editedFeatures:n.editedFeatures}),n.id===s&&(a={addResults:n.addResults??[],updateResults:n.updateResults??[],deleteResults:n.deleteResults??[],attachments:n.attachments,editMoment:n.editMoment});else a=e;const d=a==null?void 0:a.assetMaps;if(d){for(const n of d.addResults)n.success||O.getLogger(this.declaredClass).error(`Failed to map asset to feature with globalId ${n.globalId}.`);for(const n of d.updateResults)n.success||O.getLogger(this.declaredClass).error(`Failed to map asset to feature with globalId ${n.globalId}.`)}const i=a==null?void 0:a.attachments,o={addFeatureResults:((u=a==null?void 0:a.addResults)==null?void 0:u.map(this._createFeatureEditResult,this))??[],updateFeatureResults:((l=a==null?void 0:a.updateResults)==null?void 0:l.map(this._createFeatureEditResult,this))??[],deleteFeatureResults:((c=a==null?void 0:a.deleteResults)==null?void 0:c.map(this._createFeatureEditResult,this))??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(a!=null&&a.editMoment&&(o.editMoment=a.editMoment),r.length>0){o.editedFeatureResults=[];for(const n of r){const{editedFeatures:h}=n,g=h!=null&&h.spatialReference?new X(h.spatialReference):null;o.editedFeatureResults.push({layerId:n.id,editedFeatures:{adds:((y=h==null?void 0:h.adds)==null?void 0:y.map(f=>this._createEditedFeature(f,g)))||[],updates:((p=h==null?void 0:h.updates)==null?void 0:p.map(f=>({original:this._createEditedFeature(f[0],g),current:this._createEditedFeature(f[1],g)})))||[],deletes:((m=h==null?void 0:h.deletes)==null?void 0:m.map(f=>this._createEditedFeature(f,g)))||[],spatialReference:g}})}}return o}_createEditedFeature(t,e){return new Y({attributes:t.attributes,geometry:Z({...t.geometry,spatialReference:e})})}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new w("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}_createAttachmentErrorResult(t,e){const s=e.details.messages&&e.details.messages[0]||e.message,r=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new w("feature-layer-source:attachment-failure",s,{code:r})}}_getFormDataForAttachment(t,e){const s=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(s)for(const r in e){const a=e[r];a!=null&&(s.set?s.set(r,a):s.append(r,a))}return s}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:s,dynamicDataSource:r}=this.layer;return{...t,query:{gdbVersion:s,layer:r?JSON.stringify({source:r}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:s,infoFor3D:r,parsedUrl:a}=e;if(r==null||s==null)return t;const d=se(r);if(d==null)return t;const i=v(a.path,`../${d.id}`),o=t.map(m=>m.getAttribute(s)).filter(A);if(o.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:u,assetHash:l}}=r,c=new ie;c.where=`${u} IN (${o.map(m=>`'${m}'`)})`,c.outFields=[l,u],c.returnGeometry=!1;const y=await ae(i,c),{features:p}=y;return p.length===0?t:t.filter(m=>{const n=m.getAttribute(s);if(!n)return!0;const{metadata:h}=m.geometry,g=p.filter(R=>R.getAttribute(u)===n);if(g.length===0)return!0;const f=g.map(R=>R.getAttribute(l));return h.getExternalSourcesOnService(a).flatMap(({source:R})=>R.flatMap(_=>_.parts.map(q=>q.partHash))).some(R=>f.every(_=>R!==_))})}};S([I()],E.prototype,"type",void 0),S([I({constructOnly:!0})],E.prototype,"layer",void 0),S([I({readOnly:!0})],E.prototype,"queryTask",null),E=S([C("esri.layers.graphics.sources.FeatureLayerSource")],E);const le=1e3,$e=E;export{$e as default};
