import{af as o,ag as p,aj as m,b5 as g,d as l,N as d,E as u}from"./index-989909ce.js";import{a as c}from"./BitmapContainer-0673e72f.js";import{f as y,d as f}from"./LayerView-0c8e3efe.js";import{o as x}from"./GraphicsView2D-557a8e65.js";import{n as w}from"./HighlightGraphicContainer-0ce3cf13.js";import{v}from"./ExportStrategy-6fdf8ee1.js";import{b as _}from"./commonProperties-33a052da.js";import{m as H}from"./ExportImageParameters-ec2ea076.js";import{i as I}from"./RefreshableLayerView-e7a40f14.js";import{U,r as V}from"./drapedUtils-53899421.js";import"./WGLContainer-20e8cdd8.js";import"./definitions-c7b3085f.js";import"./VertexArrayObject-de8d8d6a.js";import"./Texture-501dc2a6.js";import"./enums-b14466b3.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-e690ede3.js";import"./enums-55085e26.js";import"./ProgramTemplate-9e2e5761.js";import"./GeometryUtils-84a108d1.js";import"./heatmapUtils-8adef46d.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./Container-d6a11296.js";import"./parser-39b32429.js";import"./earcut-27e6c8d6.js";import"./featureConversionUtils-b1362163.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./ExpandedCIM-d2c7e7d5.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-611ec4df.js";import"./floatRGBA-5f0a804f.js";import"./normalizeUtilsSync-132c0a94.js";import"./normalizeUtilsCommon-8a86e794.js";import"./projectionSupport-f9da330e.js";import"./json-48e3ea08.js";import"./labelingInfo-3941dab0.js";import"./labelUtils-f745c070.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-8ed38c32.js";import"./AttributeStoreView-d6656c7a.js";import"./TiledDisplayObject-cb1d7c8b.js";import"./sql-926e6229.js";import"./diffUtils-a4f61c8a.js";import"./visualVariablesUtils-0f51e147.js";import"./clusterUtils-34d60035.js";import"./SizeVariable-3a3f0b31.js";import"./colorRamps-c86b1339.js";import"./LegendOptions-3ac5ff0b.js";import"./sizeVariableUtils-d4870b0d.js";import"./lengthUtils-32b5157c.js";import"./util-af5beedd.js";import"./Matcher-d0713c3f.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-456f79c5.js";import"./LRUCache-a1ffc3d4.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-ee1316c2.js";import"./webStyleSymbolUtils-2ed84a40.js";import"./ComputedAttributeStorage-2e595e38.js";import"./FieldsIndex-958df084.js";import"./arcadeTimeUtils-5c44bb6d.js";import"./executionError-c92d3b85.js";import"./normalizeUtils-938fb227.js";import"./BaseGraphicContainer-efdff444.js";import"./FeatureContainer-9a5fe42d.js";import"./TileContainer-49ce0aaa.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-0eeaf056.js";import"./ElevationInfo-4676a5da.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-e7c468cf.js";import"./scaleUtils-367accca.js";import"./popupUtils-517eaedb.js";const P=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return o([p()],i.prototype,"exportImageParameters",void 0),o([p({readOnly:!0})],i.prototype,"floors",null),o([p({readOnly:!0})],i.prototype,"exportImageVersion",null),o([p()],i.prototype,"layer",void 0),o([p()],i.prototype,"suspended",void 0),o([p(_)],i.prototype,"timeExtent",void 0),i=o([m("esri.views.layers.MapImageLayerView")],i),i};let a=class extends P(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{l(r)||d.getLogger(this.declaredClass).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,e=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(s,h)=>V(s,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,h)=>{this._highlightView.graphicUpdateHandler({graphic:s,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new v({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:e,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,e){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}fetchImageBitmap(t,i,r,e){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}highlight(t){return this._popupHighlightHelper.highlight(t)}};o([p()],a.prototype,"strategy",void 0),o([p()],a.prototype,"updating",void 0),a=o([m("esri.views.2d.layers.MapImageLayerView2D")],a);const Yt=a;export{Yt as default};
