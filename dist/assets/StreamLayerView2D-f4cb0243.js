import{ae as m,af as c,ai as f,A as l,E as y,cr as S}from"./index-37fc1c1b.js";import{F as _}from"./FeatureSet-c0217d0c.js";import v from"./FeatureLayerView2D-0967700a.js";import{t as g}from"./util-df65e226.js";import"./Field-b21b898d.js";import"./fieldType-60e0d461.js";import"./Container-b9d7ae34.js";import"./parser-395fa391.js";import"./_commonjsHelpers-725317a4.js";import"./definitions-3f56d206.js";import"./enums-08489827.js";import"./TextureDescriptor-b97332df.js";import"./FeatureEffect-227c642a.js";import"./jsonUtils-85e9bcb0.js";import"./Query-91876b14.js";import"./LayerView-244ae284.js";import"./schemaUtils-5cf89204.js";import"./sql-07ab1f45.js";import"./diffUtils-7b235f3e.js";import"./labelingInfo-7fe41727.js";import"./labelUtils-41a42c6e.js";import"./defaultsJSON-b396ba80.js";import"./jsonUtils-08626db6.js";import"./color-af3426c7.js";import"./enums-eb6e4255.js";import"./VertexElementDescriptor-24e04d97.js";import"./utils-a49cffda.js";import"./MaterialKey-c607442c.js";import"./heatmapUtils-f0d5531e.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./visualVariablesUtils-a6f5685f.js";import"./ExpandedCIM-76d1f105.js";import"./BidiEngine-cdaf024a.js";import"./GeometryUtils-26dde58c.js";import"./Rect-df8ea165.js";import"./quantizationUtils-fa03eddf.js";import"./floatRGBA-392b8860.js";import"./featureFlags-ec64a754.js";import"./clusterUtils-6e1a0568.js";import"./SizeVariable-9c9109a6.js";import"./colorRamps-91762876.js";import"./LegendOptions-bd430cc4.js";import"./sizeVariableUtils-2914222a.js";import"./lengthUtils-03d7ac5d.js";import"./commonProperties-0728d359.js";import"./ElevationInfo-37007c95.js";import"./floorFilterUtils-0e56040f.js";import"./popupUtils-df5166bb.js";import"./RefreshableLayerView-4bca454a.js";function h(n,e){if(n==null&&e==null)return null;const t={};return e!=null&&(t.geometry=e.toJSON()),n!=null&&(t.where=n),t}let a=class extends v{constructor(){super(...arguments),this._enabledEventTypes=new Set,this._isUserPaused=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._proxy.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._proxy.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>this._proxy.sendMessageToClient(e)),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._isUserPaused||this._proxy.resumeStream()})],"constructor")}get connectionError(){if(this.errorString)return new y("stream-controller",this.errorString)}pause(){this._isUserPaused=!0,this._proxy.pauseStream()}resume(){this._isUserPaused=!1,this._proxy.resumeStream()}on(e,t){if(Array.isArray(e))return S(e.map(o=>this.on(o,t)));const s=["data-received","message-received"].includes(e);s&&(this._enabledEventTypes.add(e),this._proxy.enableEvent(e,!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),s&&!i._proxy.closed&&!i.hasEventListener(e)&&i._proxy.enableEvent(e,!1)}}}queryLatestObservations(e,t){var r,i,o;if(!(((r=this.layer.timeInfo)==null?void 0:r.endField)||((i=this.layer.timeInfo)==null?void 0:i.startField)||((o=this.layer.timeInfo)==null?void 0:o.trackIdField)))throw new y("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(p=>{const u=_.fromJSON(p);return u.features.forEach(d=>{d.layer=this.layer,d.sourceLayer=this.layer}),u})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return{...super._createClientOptions(),setProperty:t=>{this.set(t.propertyName,t.value)}}}_createTileRendererHash(e){const t=JSON.stringify(this.layer.purgeOptions),s=JSON.stringify(h(this.layer.definitionExpression,this.layer.geometryDefinition)),r=`${t}.${s})`;return super._createTileRendererHash(e)+r}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,s=e.fields.map(p=>p.toJSON()),r=g(e.geometryType),i=e.timeInfo&&e.timeInfo.toJSON()||null,o=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:s,geometryType:r,objectIdField:t,timeInfo:i,source:this.layer.parsedUrl,serviceFilter:h(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:o,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};m([c()],a.prototype,"errorString",void 0);m([c({readOnly:!0})],a.prototype,"connectionError",null);m([c()],a.prototype,"connectionStatus",void 0);a=m([f("esri.views.2d.layers.StreamLayerView2D")],a);const _e=a;export{_e as default};
