"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[4475],{84475:(e,t,s)=>{s.r(t),s.d(t,{DictionaryLoader:()=>d});var i=s(22303),o=s(3172),n=s(20102),r=(s(80442),s(92604)),l=s(13867),a=s(95330),c=s(19153),u=s(99514),h=s(59266),f=s(17386);const m="esri.renderers.support.DictionaryLoader",y={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};class d{constructor(e,t,s){this.config=null,this.fieldMap=null,this.url=null,this._ongoingRequests=new Map,this._symbolCache=new l.Z(100),this._fieldIndex=null,this._dictionaryPromise=null,this.url=e,this.config=t,this.fieldMap=s}getSymbolFields(){return this._symbolFields}async getSymbolAsync(e,t){let s;this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(t));try{s=await this._dictionaryPromise}catch(e){if((0,a.D_)(e))return this._dictionaryPromise=null,null}const o={};if(this.fieldMap)for(const t of this._symbolFields){const s=this._getFieldName(this.fieldMap[t]);o[t]=s?""+e.attributes[s]:""}let n=null;try{n=s?.(o,t)}catch(e){return null}if(!n||"string"!=typeof n)return null;const r=(0,c.hP)(n).toString(),l=this._symbolCache.get(r);if(l)return l.catch((()=>{this._symbolCache.pop(r)})),l;const u=n.split(";"),h=[],f=[];for(const e of u)if(e)if(e.includes("po:")){const t=e.substr(3).split("|");if(3===t.length){const e=t[0],s=t[1];let o=t[2];if("DashTemplate"===s)o=o.split(" ").map((e=>Number(e)));else if("Color"===s){const e=new i.Z(o).toRgba();o=[e[0],e[1],e[2],255*e[3]]}else o=Number(o);f.push({primitiveName:e,propertyName:s,value:o})}}else if(e.includes("|")){for(const t of e.split("|"))if(this._itemNames.has(t)){h.push(t);break}}else this._itemNames.has(e)&&h.push(e);const m=null==e.geometry||!e.geometry.hasZ&&"point"===e.geometry.type,y=this._cimPartsToCIMSymbol(h,f,m,t);return this._symbolCache.put(r,y,1),y}async fetchResources(e){if(this._dictionaryPromise)return this._dictionaryPromise;if(!this.url)return void r.Z.getLogger(m).error("no valid URL!");const t=(0,o.default)(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},signal:null!=e?e.signal:null}),[{data:s}]=await Promise.all([t,(0,h.LC)()]);if(!s)throw this._dictionaryPromise=null,new n.Z("esri.renderers.DictionaryRenderer","Bad dictionary data!");const i=s.expression,l=s.authoringInfo;this._refSymbolUrlTemplate=this.url+"/"+s.cimRefTemplateUrl,this._itemNames=new Set(s.itemsNames),this._symbolFields=l.symbol;const a={};if(this.config){const e=this.config;for(const t in e)a[t]=e[t]}if(l.configuration)for(const e of l.configuration)a.hasOwnProperty(e.name)||(a[e.name]=e.value);const c=[];if(null!=e&&e.fields&&this.fieldMap)for(const t of this._symbolFields){const s=this.fieldMap[t],i=e.fields.filter((e=>e.name.toLowerCase()===s?.toLowerCase()));i.length>0&&c.push({...i[0],type:"esriFieldTypeString"})}c.length>0&&(this._fieldIndex=new u.Z(c));const f=(0,h.pp)(i,null!=e?e.spatialReference:null,c,a).then((e=>{const t={scale:0};return(s,i)=>{if(null==e)return null;const o=e.repurposeFeature({geometry:null,attributes:s});return t.scale=null!=i?i.scale??void 0:void 0,e.evaluate({$feature:o,$view:t})}})).catch((e=>(r.Z.getLogger(m).error("Creating dictinoary expression failed:",e),null)));return this._dictionaryPromise=f,f}async _cimPartsToCIMSymbol(e,t,s,i){const o=new Array(e.length);for(let t=0;t<e.length;t++)o[t]=this._getSymbolPart(e[t],i);const n=await Promise.all(o),r=this.fieldMap;if(r)for(const e of n)p(e,r);return new f.Z({data:this._combineSymbolParts(n,t,s)})}async _getSymbolPart(e,t){if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e).then((e=>e.data));const s=this._refSymbolUrlTemplate.replaceAll(/\{itemName\}/gi,e),i=(0,o.default)(s,{responseType:"json",query:{f:"json"},...t});this._ongoingRequests.set(e,i);try{return(await i).data}catch(t){throw this._ongoingRequests.delete(e),t}}_combineSymbolParts(e,t,s){if(!e||0===e.length)return null;const i={...e[0]};if(e.length>1){i.symbolLayers=[];for(const t of e){const e=t;i.symbolLayers.unshift(...e.symbolLayers)}}return s&&(i.callout=y),{type:"CIMSymbolReference",symbol:i,primitiveOverrides:t}}_getFieldName(e){if(null!==this._fieldIndex){const t=this._fieldIndex.get(e);return t?t.name:e}return e}}function p(e,t){if(!e)return;const s=e.symbolLayers;if(!s)return;let i=s.length;for(;i--;){const e=s[i];e&&!1!==e.enable&&"CIMVectorMarker"===e.type&&g(e,t)}}function g(e,t){const s=e.markerGraphics;if(s)for(const e of s){if(!e)continue;const s=e.symbol;if(s)switch(s.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":p(s,t);break;case"CIMTextSymbol":s.fieldMap=t}}}}}]);