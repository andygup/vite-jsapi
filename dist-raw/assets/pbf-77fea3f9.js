import{m as f,da as x}from"./index-468a9268.js";var o;(function(r){r[r.varint=0]="varint",r[r.fixed64=1]="fixed64",r[r.delimited=2]="delimited",r[r.fixed32=5]="fixed32",r[r.unknown=99]="unknown"})(o||(o={}));const u=(1<<16)*(1<<16),p=new TextDecoder("utf-8"),g=f("safari")||f("ios")?6:f("ff")?12:32;class h{constructor(t,s,i=0,e=t?t.byteLength:0){this._tag=0,this._dataType=o.unknown,this._init(t,s,i,e)}_init(t,s,i,e){this._data=t,this._dataView=s,this._pos=i,this._end=e}asUnsafe(){return this}clone(){return new h(this._data,this._dataView,this._pos,this._end)}pos(){return this._pos}move(t){this._pos=t}nextTag(t){for(;;){if(this._pos===this._end)return!1;const s=this._decodeVarint();if(this._tag=s>>3,this._dataType=s&7,!t||t===this._tag)break;this.skip()}return!0}next(){if(this._pos===this._end)return!1;const t=this._decodeVarint();return this._tag=t>>3,this._dataType=t&7,!0}empty(){return this._pos>=this._end}tag(){return this._tag}getInt32(){return this._decodeVarint()}getInt64(){return this._decodeVarint()}getUInt32(){let t=4294967295;if(t=(this._data[this._pos]&127)>>>0,this._data[this._pos++]<128||(t=(t|(this._data[this._pos]&127)<<7)>>>0,this._data[this._pos++]<128)||(t=(t|(this._data[this._pos]&127)<<14)>>>0,this._data[this._pos++]<128)||(t=(t|(this._data[this._pos]&127)<<21)>>>0,this._data[this._pos++]<128)||(t=(t|(this._data[this._pos]&15)<<28)>>>0,this._data[this._pos++]<128))return t}getUInt64(){return this._decodeVarint()}getSInt32(){const t=this.getUInt32();if(t!==void 0)return t>>>1^-(t&1)|0}getSInt64(){return this._decodeSVarint()}getBool(){const t=this._data[this._pos]!==0;return this._skip(1),t}getEnum(){return this._decodeVarint()}getFixed64(){const t=this._dataView,s=this._pos,i=t.getUint32(s,!0)+t.getUint32(s+4,!0)*u;return this._skip(8),i}getSFixed64(){const t=this._dataView,s=this._pos,i=t.getUint32(s,!0)+t.getInt32(s+4,!0)*u;return this._skip(8),i}getDouble(){const t=this._dataView.getFloat64(this._pos,!0);return this._skip(8),t}getFixed32(){const t=this._dataView.getUint32(this._pos,!0);return this._skip(4),t}getSFixed32(){const t=this._dataView.getInt32(this._pos,!0);return this._skip(4),t}getFloat(){const t=this._dataView.getFloat32(this._pos,!0);return this._skip(4),t}getString(){const t=this._getLength(),s=this._pos,i=this._toString(this._data,s,s+t);return this._skip(t),i}getBytes(){const t=this._getLength(),s=this._pos,i=this._toBytes(this._data,s,s+t);return this._skip(t),i}getLength(){return this._getLengthUnsafe()}processMessageWithArgs(t,s,i,e){const n=this.getMessage(),a=t(n,s,i,e);return n.release(),a}processMessage(t){const s=this.getMessage(),i=t(s);return s.release(),i}getMessage(){const t=this._getLength(),s=h.pool.acquire();return s._init(this._data,this._dataView,this._pos,this._pos+t),this._skip(t),s}release(){h.pool.release(this)}dataType(){return this._dataType}skip(){switch(this._dataType){case o.varint:this._decodeVarint();break;case o.fixed64:this._skip(8);break;case o.delimited:this._skip(this._getLength());break;case o.fixed32:this._skip(4);break;default:throw new Error("Invalid data type!")}}skipLen(t){this._skip(t)}_skip(t){if(this._pos+t>this._end)throw new Error("Attempt to skip past the end of buffer!");this._pos+=t}_decodeVarint(){const t=this._data;let s=this._pos,i=0,e=0;if(this._end-s>=10)do{if(e=t[s++],i|=e&127,!(e&128)||(e=t[s++],i|=(e&127)<<7,!(e&128))||(e=t[s++],i|=(e&127)<<14,!(e&128))||(e=t[s++],i|=(e&127)<<21,!(e&128))||(e=t[s++],i+=(e&127)*268435456,!(e&128))||(e=t[s++],i+=(e&127)*34359738368,!(e&128))||(e=t[s++],i+=(e&127)*4398046511104,!(e&128))||(e=t[s++],i+=(e&127)*562949953421312,!(e&128))||(e=t[s++],i+=(e&127)*72057594037927940,!(e&128))||(e=t[s++],i+=(e&127)*9223372036854776e3,!(e&128)))break;throw new Error("Varint too long!")}while(!1);else{let n=1;for(;s!==this._end&&(e=t[s],!!(e&128));)++s,i+=(e&127)*n,n*=128;if(s===this._end)throw new Error("Varint overrun!");++s,i+=e*n}return this._pos=s,i}_decodeSVarint(){const t=this._data;let s=this._pos,i=0,e=0;const n=t[s]&1;if(this._end-s>=10)do{if(e=t[s++],i|=e&127,!(e&128)||(e=t[s++],i|=(e&127)<<7,!(e&128))||(e=t[s++],i|=(e&127)<<14,!(e&128))||(e=t[s++],i|=(e&127)<<21,!(e&128))||(e=t[s++],i+=(e&127)*268435456,!(e&128))||(e=t[s++],i+=(e&127)*34359738368,!(e&128))||(e=t[s++],i+=(e&127)*4398046511104,!(e&128))||(e=t[s++],i+=(e&127)*562949953421312,!(e&128))||(e=t[s++],i+=(e&127)*72057594037927940,!(e&128))||(e=t[s++],i+=(e&127)*9223372036854776e3,!(e&128)))break;throw new Error("Varint too long!")}while(!1);else{let a=1;for(;s!==this._end&&(e=t[s],!!(e&128));)++s,i+=(e&127)*a,a*=128;if(s===this._end)throw new Error("Varint overrun!");++s,i+=e*a}return this._pos=s,n?-(i+1)/2:i/2}_getLength(){if(this._dataType!==o.delimited)throw new Error("Not a delimited data type!");return this._decodeVarint()}_getLengthUnsafe(){return this.getUInt32()}_toString(t,s,i){if(i=Math.min(this._end,i),i-s>g){const _=t.subarray(s,i);return p.decode(_)}let n="",a="";for(let _=s;_<i;++_){const d=t[_];d&128?a+="%"+d.toString(16):(n+=decodeURIComponent(a)+String.fromCharCode(d),a="")}return a.length&&(n+=decodeURIComponent(a)),n}_toBytes(t,s,i){return i=Math.min(this._end,i),new Uint8Array(t.buffer,s,i-s)}}h.pool=new x(h,void 0,r=>{r._data=null,r._dataView=null});export{h as P};
