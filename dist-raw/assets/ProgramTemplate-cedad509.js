import{C as F,cO as ie}from"./index-1ff2b83b.js";import{b as C}from"./TextureDescriptor-d93b8350.js";import{u as p,j as M}from"./enums-08489827.js";const oe=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"];var k={},ne={get exports(){return k},set exports(i){k=i}};(function(i){(function(r){{var t=r();t!==void 0&&(i.exports=t)}})(function(){return["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]})})(ne);const ae=k;var b={},se={get exports(){return b},set exports(i){b=i}};(function(i){(function(r){{var t=r();t!==void 0&&(i.exports=t)}})(function(){return["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]})})(se);const I=b;var A={},le={get exports(){return A},set exports(i){A=i}};(function(i){(function(r){{var t=r();t!==void 0&&(i.exports=t)}})(function(){return["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"]})})(le);const fe=A;var _=999,j=9999,U=0,P=1,O=2,N=3,B=4,y=5,ce=6,ue=7,de=8,V=9,ge=10,G=11,he=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function me(){var i=0,r=0,t=_,e,n,o=[],a=[],f=1,l=0,s=0,d=!1,c=!1,g="",m;return function(u){return a=[],u!==null?z(u.replace?u.replace(/\r\n/g,`
`):u):q()};function h(u){u.length&&a.push({type:he[t],data:u,position:s,line:f,column:l})}function z(u){i=0,g+=u,m=g.length;for(var T;e=g[i],i<m;){switch(T=i,t){case U:i=Y();break;case P:i=Q();break;case O:i=R();break;case N:i=Z();break;case B:i=ee();break;case G:i=J();break;case y:i=te();break;case j:i=re();break;case V:i=K();break;case _:i=W();break}if(T!==i)switch(g[T]){case`
`:l=0,++f;break;default:++l;break}}return r+=i,g=g.slice(i),a}function q(u){return o.length&&h(o.join("")),t=ge,h("(eof)"),a}function W(){return o=o.length?[]:o,n==="/"&&e==="*"?(s=r+i-1,t=U,n=e,i+1):n==="/"&&e==="/"?(s=r+i-1,t=P,n=e,i+1):e==="#"?(t=O,s=r+i,i):/\s/.test(e)?(t=V,s=r+i,i):(d=/\d/.test(e),c=/[^\w_]/.test(e),s=r+i,t=d?B:c?N:j,i)}function K(){return/[^\s]/g.test(e)?(h(o.join("")),t=_,i):(o.push(e),n=e,i+1)}function R(){return(e==="\r"||e===`
`)&&n!=="\\"?(h(o.join("")),t=_,i):(o.push(e),n=e,i+1)}function Q(){return R()}function Y(){return e==="/"&&n==="*"?(o.push(e),h(o.join("")),t=_,i+1):(o.push(e),n=e,i+1)}function Z(){if(n==="."&&/\d/.test(e))return t=y,i;if(n==="/"&&e==="*")return t=U,i;if(n==="/"&&e==="/")return t=P,i;if(e==="."&&o.length){for(;w(o););return t=y,i}if(e===";"||e===")"||e==="("){if(o.length)for(;w(o););return h(e),t=_,i+1}var u=o.length===2&&e!=="=";if(/[\w_\d\s]/.test(e)||u){for(;w(o););return t=_,i}return o.push(e),n=e,i+1}function w(u){var T=0,D,S;do{if(D=I.indexOf(u.slice(0,u.length+T).join("")),S=I[D],D===-1){if(T--+u.length>0)continue;S=u.slice(0,1).join("")}return h(S),s+=S.length,o=o.slice(S.length),o.length}while(1)}function J(){return/[^a-fA-F0-9]/.test(e)?(h(o.join("")),t=_,i):(o.push(e),n=e,i+1)}function ee(){return e==="."||/[eE]/.test(e)?(o.push(e),t=y,n=e,i+1):e==="x"&&o.length===1&&o[0]==="0"?(t=G,o.push(e),n=e,i+1):/[^\d]/.test(e)?(h(o.join("")),t=_,i):(o.push(e),n=e,i+1)}function te(){return e==="f"&&(o.push(e),n=e,i+=1),/[eE]/.test(e)||e==="-"&&/[eE]/.test(n)?(o.push(e),n=e,i+1):/[^\d]/.test(e)?(h(o.join("")),t=_,i):(o.push(e),n=e,i+1)}function re(){if(/[^\d\w_]/.test(e)){var u=o.join("");return ae.indexOf(u)>-1?t=de:fe.indexOf(u)>-1?t=ue:t=ce,h(o.join("")),t=_,i}return o.push(e),n=e,i+1}}function _e(i){var r=me(),t=[];return t=t.concat(r(i)),t=t.concat(r(null)),t}function pe(i){return _e(i)}function xe(i){return i.map(r=>r.type!=="eof"?r.data:"").join("")}const L=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function Te(i,r="100",t="300 es"){const e=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of i)if(n.type==="preprocessor"){const o=e.exec(n.data);if(o){const a=o[1].replace(/\s\s+/g," ");if(a===t)return a;if(a===r)return n.data="#version "+t,r;throw new Error("unknown glsl version: "+a)}}return i.splice(0,0,{type:"preprocessor",data:"#version "+t},{type:"whitespace",data:`
`}),null}function Se(i,r){for(let t=r-1;t>=0;t--){const e=i[t];if(!(e.type==="whitespace"||e.type==="block-comment")){if(e.type==="keyword"){if(e.data==="attribute"||e.data==="in")return!0;continue}break}}return!1}function E(i,r,t,e){e=e||t;for(const n of i)if(n.type==="ident"&&n.data===t){e in r?r[e]++:r[e]=0;const o=r[e];return E(i,r,e+"_"+o,e)}return t}function $(i,r,t="afterVersion"){function e(l,s){for(let d=s;d<l.length;d++){const c=l[d];if(c.type==="operator"&&c.data===";")return d}return null}function n(l){let s=-1,d=0,c=-1;for(let g=0;g<l.length;g++){const m=l[g];if(m.type==="preprocessor"&&(m.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++d:m.data.match(/\#endif\s*.*/)&&--d),(t==="afterVersion"||t==="afterPrecision")&&m.type==="preprocessor"&&/^#version/.test(m.data)&&(c=Math.max(c,g)),t==="afterPrecision"&&m.type==="keyword"&&m.data==="precision"){const h=e(l,g);if(h===null)throw new Error("precision statement not followed by any semicolons!");c=Math.max(c,h)}s<c&&d===0&&(s=g)}return s+1}const o={data:`
`,type:"whitespace"},a=l=>l<i.length?/[^\r\n]$/.test(i[l].data):!1;let f=n(i);a(f-1)&&i.splice(f++,0,o);for(const l of r)i.splice(f++,0,l);a(f-1)&&a(f)&&i.splice(f,0,o)}function ye(i,r,t,e="lowp"){$(i,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:e},{type:"whitespace",data:" "},{type:"keyword",data:t},{type:"whitespace",data:" "},{type:"ident",data:r},{type:"operator",data:";"}],"afterPrecision")}function Ee(i,r,t,e,n="lowp"){$(i,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:e.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:t},{type:"whitespace",data:" "},{type:"ident",data:r},{type:"operator",data:";"}],"afterPrecision")}function Me(i,r){let t,e,n=-1;for(let o=r;o<i.length;o++){const a=i[o];if(a.type==="operator"&&(a.data==="["&&(t=o),a.data==="]")){e=o;break}a.type==="integer"&&(n=parseInt(a.data,10))}return t&&e&&i.splice(t,e-t+1),n}function X(i,r){if(i.startsWith("#version 300"))return i;const t=we();if(t!=null)return t;const e=pe(i);if(Te(e,"100","300 es")==="300 es")return i;let n=null,o=null;const a={},f={};for(let l=0;l<e.length;++l){const s=e[l];switch(s.type){case"keyword":r===p.VERTEX_SHADER&&s.data==="attribute"?s.data="in":s.data==="varying"&&(s.data=r===p.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replace(/(2D|Cube|EXT)/g,"")),r===p.FRAGMENT_SHADER&&s.data==="gl_FragColor"&&(n||(n=E(e,a,"fragColor"),ye(e,n,"vec4")),s.data=n),r===p.FRAGMENT_SHADER&&s.data==="gl_FragData"){const d=Me(e,l+1),c=E(e,a,"fragData");Ee(e,c,"vec4",d,"mediump"),s.data=c}else r===p.FRAGMENT_SHADER&&s.data==="gl_FragDepthEXT"&&(o||(o=E(e,a,"gl_FragDepth")),s.data=o);break;case"ident":if(oe.includes(s.data)){if(r===p.VERTEX_SHADER&&Se(e,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in f||(f[s.data]=E(e,a,s.data)),s.data=f[s.data]}break}}for(let l=e.length-1;l>=0;--l){const s=e[l];if(s.type==="preprocessor"){const d=s.data.match(/\#extension\s+(.*)\:/);if(d&&d[1]&&L.includes(d[1].trim())){const m=e[l+1];e.splice(l,m&&m.type==="whitespace"?2:1)}const c=s.data.match(/\#ifdef\s+(.*)/);c&&c[1]&&L.includes(c[1].trim())&&(s.data="#if 1");const g=s.data.match(/\#ifndef\s+(.*)/);g&&g[1]&&L.includes(g[1].trim())&&(s.data="#if 0")}}return De(i,xe(e))}function we(i){return null}function De(i,r){return r}const Ue=4294967295;class Pe{constructor(r,t,e,n,o=new Map){this._context=r,this._locations=n,this._uniformBlockBindings=o,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,r||console.error("RenderingContext isn't initialized!"),t.length===0&&console.error("Shaders source should not be empty!"),this._context.type===F.WEBGL2&&(t=X(t,p.VERTEX_SHADER),e=X(e,p.FRAGMENT_SHADER)),this._vShader=H(this._context,p.VERTEX_SHADER,t),this._fShader=H(this._context,p.FRAGMENT_SHADER,e),(!this._vShader||!this._fShader)&&console.error("Error loading shaders!"),this._context.instanceCounter.increment(M.Shader,this),C()&&(this.vertexShader=t,this.fragmentShader=e);const a=this._context.gl,f=a.createProgram();if(a.attachShader(f,this._vShader),a.attachShader(f,this._fShader),this._locations.forEach((l,s)=>a.bindAttribLocation(f,l,s)),a.linkProgram(f),C()&&!a.getProgramParameter(f,a.LINK_STATUS)&&console.error(`Could not link shader
validated: ${a.getProgramParameter(f,a.VALIDATE_STATUS)}, gl error ${a.getError()}, vertex: ${a.getShaderParameter(this._vShader,a.COMPILE_STATUS)}, fragment: ${a.getShaderParameter(this._fShader,a.COMPILE_STATUS)}, info log: ${a.getProgramInfoLog(f)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===F.WEBGL2){const l=a;for(const[s,d]of this._uniformBlockBindings){const c=l.getUniformBlockIndex(f,s);c<Ue&&l.uniformBlockBinding(f,c,d)}}this._glName=f,this._context.instanceCounter.increment(M.Program,this)}get glName(){return this._glName}get hasGLName(){return this._glName!=null}get compiled(){if(this._compiled)return!0;const r=this._context.gl.getExtension("KHR_parallel_shader_compile");return r==null||this.glName==null?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,r.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const r=this._context.gl;this._vShader&&(r.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(M.Shader,this)),this._fShader&&(r.deleteShader(this._fShader),this._fShader=null),this._glName&&(r.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(M.Program,this))}ref(){++this._refCount}_getUniformLocation(r){return this._nameToUniformLocation[r]===void 0&&this.glName!=null&&(++v.numUniforms,this._nameToUniformLocation[r]=this._context.gl.getUniformLocation(this.glName,r)),this._nameToUniformLocation[r]}hasUniform(r){return this._getUniformLocation(r)!==null}setUniform1i(r,t){const e=this._nameToUniform1[r];(e===void 0||t!==e)&&(this._context.gl.uniform1i(this._getUniformLocation(r),t),this._nameToUniform1[r]=t)}setUniform1iv(r,t){x(this._nameToUniform1v,r,t)&&this._context.gl.uniform1iv(this._getUniformLocation(r),t)}setUniform2iv(r,t){x(this._nameToUniform2,r,t)&&this._context.gl.uniform2iv(this._getUniformLocation(r),t)}setUniform3iv(r,t){x(this._nameToUniform3,r,t)&&this._context.gl.uniform3iv(this._getUniformLocation(r),t)}setUniform4iv(r,t){x(this._nameToUniform4,r,t)&&this._context.gl.uniform4iv(this._getUniformLocation(r),t)}setUniform1f(r,t){const e=this._nameToUniform1[r];(e===void 0||t!==e)&&(this._context.gl.uniform1f(this._getUniformLocation(r),t),this._nameToUniform1[r]=t)}setUniform1fv(r,t){x(this._nameToUniform1v,r,t)&&this._context.gl.uniform1fv(this._getUniformLocation(r),t)}setUniform2f(r,t,e){const n=this._nameToUniform2.get(r);n===void 0?(this._context.gl.uniform2f(this._getUniformLocation(r),t,e),this._nameToUniform2.set(r,[t,e])):(t!==n[0]||e!==n[1])&&(this._context.gl.uniform2f(this._getUniformLocation(r),t,e),n[0]=t,n[1]=e)}setUniform2fv(r,t){x(this._nameToUniform2,r,t)&&this._context.gl.uniform2fv(this._getUniformLocation(r),t)}setUniform3f(r,t,e,n){const o=this._nameToUniform3.get(r);o===void 0?(this._context.gl.uniform3f(this._getUniformLocation(r),t,e,n),this._nameToUniform3.set(r,[t,e,n])):(t!==o[0]||e!==o[1]||n!==o[2])&&(this._context.gl.uniform3f(this._getUniformLocation(r),t,e,n),o[0]=t,o[1]=e,o[2]=n)}setUniform3fv(r,t){x(this._nameToUniform3,r,t)&&this._context.gl.uniform3fv(this._getUniformLocation(r),t)}setUniform4f(r,t,e,n,o){const a=this._nameToUniform4.get(r);a===void 0?(this._context.gl.uniform4f(this._getUniformLocation(r),t,e,n,o),this._nameToUniform4.set(r,[t,e,n,o])):(a===void 0||t!==a[0]||e!==a[1]||n!==a[2]||o!==a[3])&&(this._context.gl.uniform4f(this._getUniformLocation(r),t,e,n,o),a[0]=t,a[1]=e,a[2]=n,a[3]=o)}setUniform4fv(r,t){x(this._nameToUniform4,r,t)&&this._context.gl.uniform4fv(this._getUniformLocation(r),t)}setUniformMatrix3fv(r,t,e=!1){x(this._nameToUniformMatrix3,r,t)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(r),e,t)}setUniformMatrix4fv(r,t,e=!1){x(this._nameToUniformMatrix4,r,t)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(r),e,t)}stop(){}}function H(i,r,t){const e=i.gl,n=e.createShader(r);return e.shaderSource(n,t),e.compileShader(n),C()&&!e.getShaderParameter(n,e.COMPILE_STATUS)&&(console.error("Compile error in ".concat(r===p.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(e.getShaderInfoLog(n)),console.error(Le(t))),v.enabled&&(v.compiledLOC+=t.match(/\n/g).length+1),n}function Le(i){let r=2;return i.replace(/\n/g,()=>`
`+Ce(r++)+":")}function Ce(i){return i>=1e3?i.toString():("  "+i).slice(-3)}function x(i,r,t){const e=i.get(r);return e?ie(e,t):(i.set(r,Array.from(t)),!0)}const v={compiledLOC:0,numUniforms:0,enabled:!1};class ve{constructor(r){this._readFile=r}resolveIncludes(r){return this._resolve(r)}_resolve(r,t=new Map){if(t.has(r))return t.get(r);const e=this._read(r);if(!e)throw new Error(`cannot find shader file ${r}`);const n=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let o=n.exec(e);const a=[];for(;o!=null;)a.push({path:o[1],start:o.index,length:o[0].length}),o=n.exec(e);let f=0,l="";return a.forEach(s=>{l+=e.slice(f,s.start),l+=t.has(s.path)?"":this._resolve(s.path,t),f=s.start+s.length}),l+=e.slice(f),t.set(r,l),l}_read(r){return this._readFile(r)}}function Re(i,r,t=""){return new Pe(i,t+r.shaders.vertexShader,t+r.shaders.fragmentShader,r.attributes)}export{Pe as P,ve as S,Re as c};
