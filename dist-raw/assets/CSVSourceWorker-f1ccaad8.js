import{dD as w,E as _,F as P,i as Q,L as R,du as A,r as G,dC as M,b9 as W,df as $,dh as z,dl as Y,bt as U,g5 as Z,fS as B}from"./index-0cbe37a0.js";import{j as J}from"./json-9ae8d6f8.js";import{a as K,O as X}from"./OptimizedGeometry-af84d2ad.js";import{F as H}from"./FeatureStore-76bfc79b.js";import{c as v}from"./projectionSupport-f22cfeca.js";import{Q as ee}from"./QueryEngine-66c073a6.js";import{_ as te}from"./number-48cbe170.js";import{c as ie,a as ne}from"./clientSideDefaults-21e85150.js";import{F as E}from"./FieldsIndex-91c8dad2.js";import"./featureConversionUtils-f0b03e2b.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./BoundsStore-8244da40.js";import"./PooledRBush-634c0b8c.js";import"./centroid-1116d1e7.js";import"./utils-46832fb9.js";import"./normalizeUtils-89acfe4c.js";import"./normalizeUtilsCommon-088d2983.js";import"./MemCache-8eec5c08.js";import"./QueryEngineResult-7b3900b2.js";import"./quantizationUtils-7579f13f.js";import"./ItemCache-6b2cf6d9.js";import"./WhereClause-47cc30df.js";import"./executionError-e2eca390.js";import"./_commonjsHelpers-725317a4.js";import"./utils-06a5bb33.js";import"./generateRendererUtils-9abc323d.js";import"./QueryEngineCapabilities-60118ddb.js";import"./timeSupport-eae8de08.js";import"./defaultsJSON-b396ba80.js";const T=/^\s*"([\S\s]*)"\s*$/,S=/""/g,D=`
`,re=[","," ",";","|","	"];function*O(s,i,e){let t=0;for(;t<=s.length;){const n=s.indexOf(i,t),r=s.substring(t,n>-1?n:void 0);t+=r.length+i.length,(!e||r.trim())&&(yield r)}}function q(s){const i=s.includes(`\r
`)?`\r
`:D;return O(s,i,!0)}function C(s,i){return O(s,i,!1)}function se(s,i,e){s=s.trim(),i=i==null?void 0:i.trim();const t=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...re])).filter(o=>o!=null);for(const o of n){const l=x(s,o).length,c=x(i,o).length??l;l>1&&t.push({weight:Math.min(l,c),delimiter:o})}const r=t.sort(({weight:o},{weight:l})=>l-o).map(({delimiter:o})=>o);for(const o of r){const l=j(s,o).names,c=oe(l,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(c.longitudeFieldName&&c.latitudeFieldName)return{delimiter:o,locationInfo:c}}return{delimiter:r[0],locationInfo:null}}function*k(s,i,e,t=()=>Object.create(null)){const n=q(s);n.next();let r="",o="",l=0,c=t(),d=0;e:for(const y of n){const I=C(y,e);for(const g of I)if(r+=o+g,o="",l+=V(g),l%2===0){if(l>0){const h=T.exec(r);if(h)c[i[d]]=h[1].replace(S,'"'),d++;else{c=t(),d=0,r="",l=0;continue e}}else c[i[d]]=r,d++;r="",l=0}else o=e;l===0?(yield c,c=t(),d=0):o=D}}function j(s,i){const e=x(s,i).filter(n=>n!=null),t=e.map(n=>w(n));for(let n=t.length-1;n>=0;n--)t[n]||(t.splice(n,1),e.splice(n,1));return{names:t,aliases:e}}function x(s,i){if(!(s!=null&&s.length))return[];const e=[];let t="",n="",r=0;const o=C(s,i);for(const l of o)if(t+=n+l,n="",r+=V(l),r%2===0){if(r>0){const c=T.exec(t);c&&e.push(c[1].replace(S,'"'))}else e.push(t);t="",r=0}else n=i;return e}function V(s){let i=0,e=0;for(e=s.indexOf('"',e);e>=0;)i++,e=s.indexOf('"',e+1);return i}function oe(s,i,e){var o,l;i=(o=w(i))==null?void 0:o.toLowerCase(),e=(l=w(e))==null?void 0:l.toLowerCase();const t=s.map(c=>c.toLowerCase()),n=i?s[t.indexOf(i)]:null,r=e?s[t.indexOf(e)]:null;return{longitudeFieldName:n||s[t.indexOf(fe.find(c=>t.includes(c)))],latitudeFieldName:r||s[t.indexOf(de.find(c=>t.includes(c)))]}}function ae(s,i,e,t,n){const r=[],o=k(s,e,i),l=[];for(const c of o){if(l.length===10)break;l.push(c)}for(let c=0;c<e.length;c++){const d=e[c],y=t[c];if(d===n.longitudeFieldName||d===n.latitudeFieldName)r.push({name:d,type:"esriFieldTypeDouble",alias:y});else{const I=l.map(m=>m[d]),g=le(I);let h,a;switch(g){case"integer":h="esriFieldTypeInteger";break;case"double":h="esriFieldTypeDouble";break;case"date":h="esriFieldTypeDate",a=36;break;default:h="esriFieldTypeString",a=255;break}r.push({name:d,type:h,alias:y,length:a})}}return r}function le(s){if(!s.length)return"string";const i=/[^+-.,0-9]/;return s.map(t=>{let n=!1;if(t!==""){if(i.test(t))n=!0;else{let r=N(t);if(!isNaN(r))return/[.,]/.test(t)||!Number.isInteger(r)||r>214783647||r<-214783648?"double":"integer";if(!t.includes("E"))n=!0;else if(r=Number(t),isNaN(r))if(!t.includes(","))n=!0;else if(t=t.replace(",","."),r=Number(t),isNaN(r))n=!0;else return"double";else return"double"}if(n){if(!/^[-]?\d*[.,]?\d*$/.test(t)){const r=new Date(t);return L(r,t)?"date":"string"}return"string"}return"string"}}).reduce((t,n)=>{if(t===void 0)return n;if(n===void 0)return t;if(t===n)return n;if(t==="string"||n==="string")return"string";if(t==="double"||n==="double")return"double"})}function L(s,i){if(!s||Object.prototype.toString.call(s)!=="[object Date]"||isNaN(s.getTime()))return!1;let e=!0;if(!ue&&/\d+\W*$/.test(i)){const t=i.match(/[a-zA-Z]{2,}/);if(t){let n=!1,r=0;for(;!n&&r<=t.length;)n=!ce.test(t[r]),r++;e=!n}}return e}const N=function(){const s=te(),i=new RegExp("^"+s.regexp+"$"),e=new RegExp("["+s.group+"\\s\\xa0]","g"),t=s.factor;return n=>{const r=i.exec(n);if(s.factor=t,!r)return NaN;let o=r[1];if(!r[1]){if(!r[2])return NaN;o=r[2],s.factor*=-1}return o=o.replace(e,"").replace(s.decimal,"."),+o*s.factor}}(),ce=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,ue=Number.isNaN(new Date("technology 10").getTime()),de=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],fe=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],me=ne("esriGeometryPoint"),pe=["csv"],he=[0,0];class ye{constructor(i,e){this.x=i,this.y=e}}class Ze{constructor(){this._queryEngine=null,this._snapshotFeatures=async i=>{const e=await this._fetch(i);return this._createFeatures(e)}}destroy(){var i;(i=this._queryEngine)==null||i.destroy(),this._queryEngine=null}async load(i,e={}){var c;this._loadOptions=i;const[t]=await Promise.all([this._fetch(e.signal),this._checkProjection((c=i==null?void 0:i.parsingOptions)==null?void 0:c.spatialReference)]),n=ge(t,i);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=await this._createFeatures(t);this._queryEngine.featureStore.addMany(r);const{fullExtent:o,timeExtent:l}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=o,l){const{start:d,end:y}=l;n.layerDefinition.timeInfo.timeExtent=[d,y]}return n}async applyEdits(){throw new _("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(i={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(i,e.signal)}async queryFeatureCount(i={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(i,e.signal)}async queryObjectIds(i={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(i,e.signal)}async queryExtent(i={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(i,e.signal)}async querySnapping(i,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(i,e.signal)}async refresh(i){var n;this._loadOptions.customParameters=i,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=P(this._snapshotFeatures),this._snapshotTask.promise.then(r=>{this._queryEngine.featureStore.clear(),r&&this._queryEngine.featureStore.addMany(r)},r=>{this._queryEngine.featureStore.clear(),Q(r)||R.getLogger("esri.layers.CSVLayer").error(new _("csv-layer:refresh","An error occurred during refresh",{error:r}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:t}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:t}}async _waitSnapshotComplete(){if(!(!this._snapshotTask||this._snapshotTask.finished)){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(i){const{url:e,customParameters:t}=this._loadOptions;if(!e)throw new _("csv-layer:invalid-source","url not defined");const n=A(e);return(await G(n.path,{query:{...n.query,...t},responseType:"text",signal:i})).data}_createQueryEngine(i){const{objectIdField:e,fields:t,extent:n,timeInfo:r}=i.layerDefinition,o=new H({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new ee({fields:t,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:r,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:o})}async _createFeatures(i){const{latitudeFieldName:e,longitudeFieldName:t}=this._locationInfo,{objectIdField:n,fieldsIndex:r,spatialReference:o}=this._queryEngine;let l=[];const c=[],d=r.fields.filter(a=>a.name!==n).map(a=>a.name);let y=0;const I={};for(const a of r.fields)if(a.type!=="esriFieldTypeOID"&&a.type!=="esriFieldTypeGlobalID"){const m=M(a);m!==void 0&&(I[a.name]=m)}const g=k(i,d,this._delimiter,ie(I,n));for(const a of g){const m=this._parseCoordinateValue(a[e]),F=this._parseCoordinateValue(a[t]);if(!(F==null||m==null||isNaN(m)||isNaN(F))){a[e]=m,a[t]=F;for(const f in a)if(!(f===e||f===t)){if(r.isDateField(f)){const u=new Date(a[f]);a[f]=L(u,a[f])?u.getTime():null}else if(r.isNumericField(f)){const u=N(a[f]);isNaN(u)?a[f]=null:a[f]=u}}a[n]=y,y++,l.push(new ye(F,m)),c.push(a)}}if(!W({wkid:4326},o))if($(o))for(const a of l)[a.x,a.y]=z(a.x,a.y,he);else l=Y(J,l,U.WGS84,o,null,null);const h=[];for(let a=0;a<l.length;a++){const{x:m,y:F}=l[a],f=c[a];f[n]=a+1,h.push(new K(new X([],[m,F]),f,null,f[n]))}return h}_parseCoordinateValue(i){if(i==null||i==="")return null;let e=N(i);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(i)),e}async _checkProjection(i){try{await v(Z,i)}catch{throw new _("csv-layer:projection-not-supported","Projection not supported")}}}function ge(s,i){var m,F,f;const e=i.parsingOptions||{},t={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=t.layerDefinition={name:B(i.url,pe)||"csv",drawingInfo:me,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},r=q(s),o=(m=r.next().value)==null?void 0:m.trim(),l=(F=r.next().value)==null?void 0:F.trim();if(!o)throw new _("csv-layer:empty-csv","CSV is empty",{csv:s});const{delimiter:c,locationInfo:d}=se(o,l,e);if(!c)throw new _("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:o,secondLine:l,parsingOptions:e});if(!d)throw new _("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:o,secondLine:l,parsingOptions:e});t.locationInfo=d,t.delimiter=c;const{names:y,aliases:I}=j(o,c),g=ae(s,t.delimiter,y,I,t.locationInfo);if((f=e.fields)!=null&&f.length){const u=new E(e.fields);for(const p of g){const b=u.get(p.name);b&&Object.assign(p,b)}}if(!g.some(u=>u.type==="esriFieldTypeOID"?(n.objectIdField=u.name,!0):!1)){const u={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=u.name,g.unshift(u)}n.fields=g;const a=new E(n.fields);if(t.locationInfo&&(t.locationInfo.latitudeFieldName=a.get(t.locationInfo.latitudeFieldName).name,t.locationInfo.longitudeFieldName=a.get(t.locationInfo.longitudeFieldName).name),n.timeInfo){const u=n.timeInfo;if(u.startTimeField){const p=a.get(u.startTimeField);p?(u.startTimeField=p.name,p.type="esriFieldTypeDate"):u.startTimeField=null}if(u.endTimeField){const p=a.get(u.endTimeField);p?(u.endTimeField=p.name,p.type="esriFieldTypeDate"):u.endTimeField=null}if(u.trackIdField){const p=a.get(u.trackIdField);p?u.trackIdField=p.name:u.trackIdField=null}!u.startTimeField&&!u.endTimeField&&(n.timeInfo=null)}return t}export{Ze as default};
