import{L as B,K as A,N as G,O as Z,Q as w,R as H,S as J,E as m,U as g,V as q,W as ee,X as $,Y as R,Z as k,I as te,$ as Q,a0 as ie,a1 as I,a2 as se,a3 as O}from"./index-ffb342b4.js";const S=B.getLogger("esri.layers.support.ElevationSampler");class W{queryElevation(e){return le(e.clone(),this)}on(){return ce}projectIfRequired(e,t){return X(e,t)}}class ne extends W{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super(),this.tile=e,this.noDataValue=i;const s=e.tile.extent;this.extent=G(s,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=s;const n=w(t.spatialReference),l=t.lodAt(e.tile.level).resolution*n;this.demResolution={min:l,max:l}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return t==null?!1:this.containsAt(t.x,t.y)}containsAt(e,t){return H(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const i=this.extent,s=`${i.xmin}, ${i.ymin}, ${i.xmax}, ${i.ymax}`;return S.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class V extends W{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super();let s;typeof t=="number"?(this.noDataValue=t,s=null):(s=t,this.noDataValue=i),s?this.samplers=e.map(l=>new ne(l,s,this.noDataValue)):this.samplers=e;const n=this.samplers[0];if(!n)this.extent=G(Z(),s.spatialReference),this.demResolution={min:0,max:0};else{this.extent=n.extent.clone();const{min:l,max:a}=n.demResolution;this.demResolution={min:l,max:a};for(let o=1;o<this.samplers.length;o++){const r=this.samplers[o];this.extent.union(r.extent),this.demResolution.min=Math.min(this.demResolution.min,r.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,r.demResolution.max)}}}elevationAt(e,t){for(const i of this.samplers)if(i.containsAt(e,t))return i.elevationAt(e,t);return S.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function le(c,e){const t=X(c,e.spatialReference);if(!t)return null;switch(c.type){case"point":oe(c,t,e);break;case"polyline":ae(c,t,e);break;case"multipoint":re(c,t,e);break}return c}function X(c,e){if(c==null)return null;const t=c.spatialReference;if(t.equals(e))return c;const i=J(c,e);return i||S.error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),i}function oe(c,e,t){c.z=t.elevationAt(e.x,e.y)}function ae(c,e,t){T.spatialReference=e.spatialReference;const i=c.hasM&&!c.hasZ;for(let s=0;s<c.paths.length;s++){const n=c.paths[s],l=e.paths[s];for(let a=0;a<n.length;a++){const o=n[a],r=l[a];T.x=r[0],T.y=r[1],i&&(o[3]=o[2]),o[2]=t.elevationAt(T.x,T.y)}}c.hasZ=!0}function re(c,e,t){T.spatialReference=e.spatialReference;const i=c.hasM&&!c.hasZ;for(let s=0;s<c.points.length;s++){const n=c.points[s],l=e.points[s];T.x=l[0],T.y=l[1],i&&(n[3]=n[2]),n[2]=t.elevationAt(T.x,T.y)}c.hasZ=!0}const T=new A,ce={remove(){}};class ue{constructor(e,t){this.data=e,this.safeWidth=(e.width-1)*.99999999,this.dx=(e.width-1)/(t[2]-t[0]),this.dy=(e.width-1)/(t[3]-t[1]),this.x0=t[0],this.y1=t[3]}}class P{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new ue(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:s,dx:n,dy:l,y1:a,x0:o}=this._samplerData,{width:r,values:u,noDataValue:p}=s,f=j(l*(a-t),0,i),h=j(n*(e-o),0,i),D=Math.floor(f),M=Math.floor(h),_=D*r+M,z=_+r,x=u[_],E=u[z],F=u[_+1],C=u[z+1];if(x!==p&&E!==p&&F!==p&&C!==p){const N=f-D,b=h-M,L=x+(F-x)*b,K=E+(C-E)*b;return L+(K-L)*N}}}function j(c,e,t){return c<e?e:c>t?t:c}class me{async queryAll(e,t,i){if(i&&i.ignoreInvisibleLayers?e=e.filter(r=>r.visible):e=e.slice(),!e.length)throw new m("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const s=v.fromGeometry(t);let n=!1;(!i||!i.returnSampleInfo)&&(n=!0);const l={...y,...i,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,l),o=await this._queryAllContinue(e,a,l);return o.geometry=o.geometry.export(),n&&delete o.sampleInfo,o}async query(e,t,i){if(!e)throw new m("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof v)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new m("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const s={...y,...i},n=new he(e,t.spatialReference,s),l=s.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(n,t,l),await this._selectTiles(n,l),await this._populateElevationTiles(n,l),this._sampleGeometryWithElevation(n),this._createQueryResult(n,l)}async createSampler(e,t,i){if(!e)throw new m("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new m("elevation-query:invalid-extent","Invalid or undefined extent");const s={...y,...i};return this._createSampler(e,t,s)}async createSamplerAll(e,t,i){if(i&&i.ignoreInvisibleLayers?e=e.filter(l=>l.visible):e=e.slice(),!e.length)throw new m("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new m("elevation-query:invalid-extent","Invalid or undefined extent");const s={...y,...i,returnSampleInfo:!0},n=await this._createSampler(e[e.length-1],t,s);return this._createSamplerAllContinue(e,t,n,s)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const l=t.spatialReference,a=e.tileInfo.spatialReference;l.equals(a)||(await g([{source:l,dest:a}],{signal:n}),t=q(t,a));const o=new fe(e,t,i,s);return await this._selectTiles(o,n),await this._populateElevationTiles(o,n),new V(o.elevationTiles,o.layer.tileInfo,o.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map(r=>ee(r.extent)),l=await this._createSampler(e[e.length-1],t,s,n);if(l.samplers.length===0)return i;const a=i.samplers.concat(l.samplers),o=new V(a,s.noDataValue);return this._createSamplerAllContinue(e,t,o,s)}async _queryAllContinue(e,t,i){const s=e.pop(),n=t.geometry.coordinates,l=t.sampleInfo;$(l);const a=[],o=[];for(let f=0;f<n.length;f++){const h=l[f];h.demResolution>=0?h.source||(h.source=s):e.length&&(a.push(n[f]),o.push(f))}if(!e.length||a.length===0)return t;const r=t.geometry.clone(a),u=await this.query(e[e.length-1],r,i),p=u.sampleInfo;if(!p)throw new Error("no sampleInfo");return o.forEach((f,h)=>{n[f].z=u.geometry.coordinates[h].z,l[f].demResolution=p[h].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i=await e.geometry.project(e.outSpatialReference,t);$(i);const s={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(s.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),s}async _createGeometryDescriptor(e,t,i){let s;const n=e.layer.tileInfo.spatialReference;if(t instanceof v?s=await t.project(n,i):(await g([{source:t.spatialReference,dest:n}],{signal:i}),s=q(t,n)),!s)throw new m("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);e.geometry=v.fromGeometry(s)}async _selectTiles(e,t){e.type==="geometry"&&this._preselectOutsideLayerExtent(e);const i=e.options.demResolution;if(typeof i=="number")this._selectTilesClosestResolution(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else if(i==="auto")await this._selectTilesAuto(e,t);else throw new m("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`)}_preselectOutsideLayerExtent(e){if(e.layer.fullExtent==null)return;const t=new P(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(s=>{const n=s.x,l=s.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(s.elevationTile=t)})}_selectTilesClosestResolution(e,t){const i=e.layer.tileInfo,s=this._findNearestDemResolutionLODIndex(i,t);e.selectTilesAtLOD(s)}_findNearestDemResolutionLODIndex(e,t){const i=w(e.spatialReference),s=t/i;let n=e.lods[0],l=0;for(let a=1;a<e.lods.length;a++){const o=e.lods[a];Math.abs(o.resolution-s)<Math.abs(n.resolution-s)&&(n=o,l=a)}return l}async _selectTilesFinestContiguous(e,t){const i=U(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const s=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const n=s.tilemapCache,l=e.getTilesToFetch();try{if(n)await R(Promise.all(l.map(a=>n.fetchAvailability(a.level,a.row,a.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new m("elevation-query:has-unavailable-tiles")}catch(a){k(a),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},n=e.options.cache,l=e.options.noDataValue,a=i.map(async o=>{if(o.id==null)return;const r=`${e.layer.uid}:${o.id}:${l}`,u=n!=null?n.get(r):null,p=u??await e.layer.fetchTile(o.level,o.row,o.col,{noDataValue:l,signal:t});n!=null&&n.put(r,p),s[o.id]=new P(o,p)});await R(te(a),t),e.populateElevationTiles(s)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const s=e.getTilesToFetch(),n={},l=s.map(async a=>{const o=new Q(null,0,0,0,Z()),r=await ie(i.fetchAvailabilityUpsample(a.level,a.row,a.col,o,{signal:t}));if(r.ok===!1){k(r.error);return}a.id!=null&&(n[a.id]=o)});await R(Promise.all(l),t),e.remapTiles(n)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=o=>{o.id!=null&&(o.id in s?s[o.id]++:(s[o.id]=1,i++))},l=o=>{if(o.id==null)return;const r=s[o.id];r===1?(delete s[o.id],i--):s[o.id]=r-1};e.forEachTileToFetch(n,l);let a=!0;for(;a&&(a=!1,e.forEachTileToFetch(o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(a=!0),n(o))},l),!!a););}_selectTilesAutoFinest(e){const t=U(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch((n,l)=>{i.upsampleTile(n)?s=!0:l()}),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const n=i.sample(t.x,t.y);n!=null?s=n:t.elevationTile=null}t.z=s})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=w(t.spatialReference);return e.geometry.coordinates.map(s=>{let n=-1;return s.elevationTile&&s.elevationTile!==e.outsideExtentTile&&(n=t.lodAt(s.elevationTile.tile.level).resolution*i),{demResolution:n}})}}class v{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new v;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await g([{source:this.spatialReference,dest:e}],{signal:t});const i=new I({spatialReference:this.spatialReference,points:this.coordinates.map(a=>[a.x,a.y])}),s=q(i,e);if(!s)return null;const n=this.coordinates.map((a,o)=>{const r=a.clone(),u=s.points[o];return r.x=u[0],r.y=u[1],r}),l=this.clone(n);return l.spatialReference=e,l}static fromGeometry(e){const t=new v;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof v)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,s)=>{const n=e.clone(i);return n.spatialReference=s,n};else switch(e.type){case"point":{const i=e,{hasZ:s,hasM:n}=i;s&&n?t.coordinates=[new d(i.x,i.y,i.z,i.m)]:s?t.coordinates=[new d(i.x,i.y,i.z)]:n?t.coordinates=[new d(i.x,i.y,null,i.m)]:t.coordinates=[new d(i.x,i.y)],t._exporter=(l,a)=>e.hasM?new A(l[0].x,l[0].y,l[0].z,l[0].m,a):new A(l[0].x,l[0].y,l[0].z,a);break}case"multipoint":{const i=e,{hasZ:s,hasM:n}=i;s&&n?t.coordinates=i.points.map(l=>new d(l[0],l[1],l[2],l[3])):s?t.coordinates=i.points.map(l=>new d(l[0],l[1],l[2])):n?t.coordinates=i.points.map(l=>new d(l[0],l[1],null,l[2])):t.coordinates=i.points.map(l=>new d(l[0],l[1])),t._exporter=(l,a)=>e.hasM?new I({points:l.map(o=>[o.x,o.y,o.z,o.m]),hasZ:!0,hasM:!0,spatiaReference:a}):new I(l.map(o=>[o.x,o.y,o.z]),a);break}case"polyline":{const i=e,s=[],n=[],{hasZ:l,hasM:a}=e;let o=0;for(const r of i.paths)if(n.push([o,o+r.length]),o+=r.length,l&&a)for(const u of r)s.push(new d(u[0],u[1],u[2],u[3]));else if(l)for(const u of r)s.push(new d(u[0],u[1],u[2]));else if(a)for(const u of r)s.push(new d(u[0],u[1],null,u[2]));else for(const u of r)s.push(new d(u[0],u[1]));t.coordinates=s,t._exporter=(r,u)=>{const p=e.hasM?r.map(h=>[h.x,h.y,h.z,h.m]):r.map(h=>[h.x,h.y,h.z]),f=n.map(h=>p.slice(h[0],h[1]));return new se({paths:f,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class d{constructor(e,t,i=null,s=null,n=null,l=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=l}clone(){return new d(this.x,this.y,this.z,this.m)}}class Y{constructor(e,t){this.layer=e,this.options=t}}class he extends Y{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(s=>s.tile=t.tileAt(i,s.x,s.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(t=>!t.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const s=(t=i.tile)==null?void 0:t.id;i.tile=s?e[s]:null}}getTilesToFetch(){var i;const e={},t=[];for(const s of this.geometry.coordinates){const n=s.tile;if(!n)continue;const l=(i=s.tile)==null?void 0:i.id;!s.elevationTile&&l&&!e[l]&&(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class fe extends Y{constructor(e,t,i,s){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(i==null)return-1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],l=n.resolution*t.size[0],a=n.resolution*t.size[1],o=Math.ceil(i.width/l),r=Math.ceil(i.height/a);if(o*r<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(s=>{if(this._fetchedCandidates.has(s)){t&&t(s);return}let n=!1;e(s,()=>n=!0),n?t&&t(s):this._candidateTiles.push(s)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const a of e){const o=a.id;o&&!i[o]?(i[o]=a,s.push(a)):t&&t(a)}const n=s.sort((a,o)=>a.level-o.level);return n.filter((a,o)=>{for(let r=0;r<o;r++){const u=n[r].extent;if(u&&a.extent&&O(u,a.extent))return t&&t(a),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const i=this.layer.tileInfo,s=i.lods[e],n=i.tileAt(s.level,t.xmin,t.ymin),l=n.extent;if(l==null)return;const a=s.resolution*i.size[0],o=s.resolution*i.size[1],r=Math.ceil((t.xmax-l[0])/a),u=Math.ceil((t.ymax-l[1])/o);for(let p=0;p<u;p++)for(let f=0;f<r;f++){const h=new Q(null,n.level,n.row-p,n.col+f);i.updateTileInfo(h),this._tileIsMasked(h)||this._candidateTiles.push(h)}}_tileIsMasked(e){return this.maskExtents?this.maskExtents.some(t=>e.extent&&O(t,e.extent)):!1}}function U(c,e=0){let t=c.lods.length-1;if(e>0){const i=w(c.spatialReference),s=e/i,n=c.lods.findIndex(l=>l.resolution<s);n===0?t=0:n>0&&(t=n-1)}return t}const pe=20,y={maximumAutoTileRequests:pe,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{me as ElevationQuery,v as GeometryDescriptor,U as getFinestLodIndex};
