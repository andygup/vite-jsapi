import{au as E,be as L,bf as O,E as C,eC as c,I as _,ct as N,m as W,ae as r,af as i,ai as I,ep as J,bt as x,et as S,ex as U,er as D,du as k,bG as X,dX as T,bb as $,a$ as Q}from"./index-468a9268.js";import"./UniqueValueRenderer-ac017c28.js";import{a as Y,w as G}from"./jsonUtils-e039d20c.js";import{M}from"./MultiOriginJSONSupport-401b6783.js";import{d as V,a as z}from"./clientSideDefaults-e5f4472d.js";import{a as B,b as A,p as H,f as K,W as Z}from"./wfsUtils-7a674bc9.js";import{F as ee}from"./FeatureSet-09da8445.js";import{B as te}from"./BlendLayer-3dc4b03d.js";import{C as re}from"./CustomParametersMixin-dd84a15e.js";import{F as ie,a as oe}from"./FeatureReductionLayer-14d66fcf.js";import{O as se}from"./OperationalLayer-22d46980.js";import{O as ae}from"./OrderedLayer-c6a98791.js";import{P as ne}from"./PortalLayer-4b72e3f9.js";import{R as pe}from"./RefreshableLayer-66cdb688.js";import{S as le}from"./ScaleRangeLayer-58703611.js";import{T as ue}from"./TemporalLayer-60387239.js";import{e as de,l as ye,a as me,o as ce,p as fe,s as he,u as ge}from"./commonProperties-99999309.js";import{F as R}from"./Field-88bfb4af.js";import{d as we}from"./fieldProperties-c86bc95e.js";import{L as Fe,r as ve}from"./labelingInfo-94054623.js";import{Q as y}from"./Query-ee569148.js";import{c as be}from"./popupUtils-59ed80cd.js";import"./LegendOptions-dcb522eb.js";import"./diffUtils-71027438.js";import"./SizeVariable-e8cc32d6.js";import"./colorRamps-4cbb7a49.js";import"./sizeVariableUtils-2914222a.js";import"./lengthUtils-edd0ce65.js";import"./ColorStop-60446843.js";import"./jsonUtils-123a2bd9.js";import"./styleUtils-cc56472a.js";import"./featureFlags-2a723cce.js";import"./DictionaryLoader-f1871e3b.js";import"./LRUCache-d3406418.js";import"./MemCache-3df47c80.js";import"./FieldsIndex-ab7b931c.js";import"./heatmapUtils-adcbaceb.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./QueryEngineCapabilities-60118ddb.js";import"./defaultsJSON-b396ba80.js";import"./geojson-8dd05f0e.js";import"./OptimizedGeometry-af84d2ad.js";import"./xmlUtils-2b925ee3.js";import"./jsonUtils-e00c5139.js";import"./parser-0c644652.js";import"./_commonjsHelpers-725317a4.js";import"./FeatureEffect-af7e9639.js";import"./clusterUtils-a3a72d39.js";import"./portalItemUtils-a011a0ff.js";import"./ElevationInfo-3032ca55.js";import"./fieldType-31d95250.js";import"./labelUtils-e4e35bc9.js";let u=class extends E(J){constructor(){super(...arguments),this._connection=null,this.capabilities=V(!1,!1),this.type="wfs",this.refresh=L(async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const s=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return ee.fromJSON(s)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const s=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:s.count,extent:O.fromJSON(s.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){var b;const{url:t,customParameters:s,name:n,namespaceUri:p,spatialReference:a,fields:d,geometryType:f,swapXY:h}=this.layer;if(!t)throw new C("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await B(t,{customParameters:s,...e}));const l=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some(g=>this.layer[g]==null)?await A(this.wfsCapabilities,n,p,{spatialReference:a,customParameters:s,signal:e==null?void 0:e.signal}):{...H(d??[]),geometryType:f,name:n,namespaceUri:p,spatialReference:a,swapXY:h},j=K(this.wfsCapabilities.readFeatureTypes(),l.name,l.namespaceUri),q=c.toJSON(l.geometryType);return{customParameters:s,featureType:j,fields:((b=l.fields)==null?void 0:b.map(g=>g.toJSON()))??[],geometryField:l.geometryField,geometryType:q,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:l.objectIdField,spatialReference:l.spatialReference.toJSON(),swapXY:!!l.swapXY}}async _startWorker(e){const[t,s]=await _([this._createLoadOptions(e),N("WFSSourceWorker",{...e,strategy:W("feature-layers-workers")?"dedicated":"local"})]),n=t.error||s.error||null,p=s.value||null;if(n)throw p&&p.close(),n;const a=t.value;this._connection=s.value;const d=(await this._connection.invoke("load",a,e)).extent;this.sourceJSON={extent:d,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:z(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};r([i()],u.prototype,"capabilities",void 0);r([i({constructOnly:!0})],u.prototype,"layer",void 0);r([i()],u.prototype,"sourceJSON",void 0);r([i()],u.prototype,"type",void 0);r([i()],u.prototype,"wfsCapabilities",void 0);u=r([I("esri.layers.graphics.sources.WFSSource")],u);var w;const P=we();let o=w=class extends ae(re(ie(oe(te(ue(pe(le(se(ne(M(Q))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:d,objectIdField:f,spatialReference:h,swapXY:F,url:v,wfsCapabilities:l}=e;return new w({customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:d,objectIdField:f,spatialReference:h,swapXY:F,url:v,wfsCapabilities:l})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new u({layer:this}),this.spatialReference=x.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),S(this.renderer,this.fieldsIndex),U(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){var e;return(e=this.source)==null?void 0:e.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,s){const n=e.filter(p=>p.name!==Z);this.geometryField&&n.unshift(new R({name:this.geometryField,alias:this.geometryField,type:"geometry"})),D(s,n.map(p=>p.toJSON()),t)}get parsedUrl(){return k(this.url)}set renderer(e){S(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){var e;return(e=this.source)==null?void 0:e.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return be(this,e)}createQuery(){const e=new y;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:s}=this;return t!=null&&s!=null?e.timeExtent=s.offset(-t.value,t.unit):e.timeExtent=s||null,e}getFieldDomain(e,t){var s;return(s=this.getField(e))==null?void 0:s.domain}getField(e){var t;return(t=this.fieldsIndex)==null?void 0:t.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(y.from(e)||this.createQuery(),t)).then(s=>{if(s!=null&&s.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(y.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(y.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(y.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],o.prototype,"capabilities",null);r([i({type:String})],o.prototype,"copyright",void 0);r([i({readOnly:!0})],o.prototype,"createQueryVersion",null);r([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy(m){return{enabled:!!(m&&Object.keys(m).length>0),ignoreOrigin:!0}}}}})],o.prototype,"customParameters",void 0);r([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null);r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0);r([i({type:String})],o.prototype,"displayField",void 0);r([i(de)],o.prototype,"elevationInfo",void 0);r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"featureUrl",void 0);r([i({type:[R],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0);r([X("fields")],o.prototype,"writeFields",null);r([i(P.fieldsIndex)],o.prototype,"fieldsIndex",void 0);r([i({type:O,json:{name:"extent"}})],o.prototype,"fullExtent",void 0);r([i()],o.prototype,"geometryField",void 0);r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:c.read},write:{target:"layerDefinition.geometryType",writer:c.write,ignoreOrigin:!0},origins:{service:{read:c.read}}}})],o.prototype,"geometryType",void 0);r([i({type:String})],o.prototype,"id",void 0);r([i(ye)],o.prototype,"labelsVisible",void 0);r([i({type:[Fe],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ve},write:!0}})],o.prototype,"labelingInfo",void 0);r([i(me)],o.prototype,"legendEnabled",void 0);r([i({type:["show","hide"]})],o.prototype,"listMode",void 0);r([i({type:String})],o.prototype,"objectIdField",void 0);r([i({type:["WFS"]})],o.prototype,"operationalLayerType",void 0);r([i({type:T,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"maxFeatures",void 0);r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],o.prototype,"mode",void 0);r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"name",void 0);r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"namespaceUri",void 0);r([i(ce)],o.prototype,"opacity",void 0);r([i(P.outFields)],o.prototype,"outFields",void 0);r([i({readOnly:!0})],o.prototype,"parsedUrl",null);r([i(fe)],o.prototype,"popupEnabled",void 0);r([i({type:$,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0);r([i({types:Y,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:G,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],o.prototype,"renderer",null);r([i(he)],o.prototype,"screenSizePerspectiveEnabled",void 0);r([i({readOnly:!0})],o.prototype,"source",void 0);r([i({type:x,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],o.prototype,"spatialReference",void 0);r([i({readOnly:!0,type:[T],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"spatialReferences",void 0);r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"swapXY",void 0);r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],o.prototype,"title",void 0);r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0);r([i(ge)],o.prototype,"url",void 0);r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"version",void 0);r([i()],o.prototype,"wfsCapabilities",null);o=w=r([I("esri.layers.WFSLayer")],o);const Ot=o;export{Ot as default};
