import{w as v,y as k,b9 as R,bB as z,E as S,t as $,g7 as X,fA as K,fz as q,fC as ee,Q as C,g8 as M,cE as N,dj as Z,g9 as te,cn as se,d8 as H,cd as ie,cj as re,O as ae,a9 as ne,ga as oe}from"./index-ffb342b4.js";import{M as ce,a as le}from"./MemCache-0b9a9ce4.js";import{n as U}from"./normalizeUtils-ec352ded.js";import{e as he}from"./featureConversionUtils-c38cba79.js";import{Q as f,S as ue,g as de,v as E,a as fe,b as me,h as pe}from"./QueryEngineResult-6947bc07.js";import{c as B,p as A,a as ye}from"./projectionSupport-6c80ea64.js";import{q as _e}from"./QueryEngineCapabilities-60118ddb.js";import{g as ge,a as b,b as xe,c as V,d as W}from"./timeSupport-06d007d4.js";import{Q,c as D,n as J,g as Se}from"./utils-989d8fa5.js";import{F as we}from"./FieldsIndex-19734375.js";function Fe(P){return P!=null&&P.every(e=>e.statisticType!=="exceedslimit")}const w="feature-store:unsupported-query",Re=new ce(2e6);let Qe=0;class Ge{constructor(e){this._geometryQueryCache=null,this._changeHandle=null,this.capabilities={query:_e},this.geometryType=e.geometryType,this.hasM=!!e.hasM,this.hasZ=!!e.hasZ,this.objectIdField=e.objectIdField,this.spatialReference=e.spatialReference,this.definitionExpression=e.definitionExpression,this.featureStore=e.featureStore,this.aggregateAdapter=e.aggregateAdapter,this._changeHandle=this.featureStore.events.on("changed",()=>this.clearCache()),this.timeInfo=e.timeInfo,e.cacheSpatialQueries&&(this._geometryQueryCache=new le(Qe+++"$$",Re)),this.fieldsIndex=new we(e.fields),e.scheduler&&e.priority&&(this._frameTask=e.scheduler.registerTask(e.priority))}destroy(){this._frameTask=v(this._frameTask),this.clearCache(),k(this._geometryQueryCache),this._changeHandle=v(this._changeHandle),k(this.fieldsIndex)}get featureAdapter(){return this.featureStore.featureAdapter}clearCache(){var e;(e=this._geometryQueryCache)==null||e.clear(),this._allFeaturesPromise=null,this._timeExtentPromise=null}async executeQuery(e,t){try{return(await this._executeQuery(e,{},t)).createQueryResponse()}catch(s){if(s!==Q)throw s;return new f([],e,this).createQueryResponse()}}async executeQueryForCount(e={},t){try{return(await this._executeQuery(e,{returnGeometry:!1,returnCentroid:!1,outSR:null},t)).createQueryResponseForCount()}catch(s){if(s!==Q)throw s;return 0}}async executeQueryForExtent(e,t){const s=e.outSR;try{const i=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),a=i.size;if(!a)return{count:0,extent:null};const r=await this._getBounds(i.items,i.spatialReference,s||this.spatialReference);return{count:a,extent:r}}catch(i){if(i===Q)return{count:0,extent:null};throw i}}async executeQueryForIds(e,t){return this.executeQueryForIdSet(e,t).then(s=>Array.from(s))}async executeQueryForIdSet(e,t){try{const s=await this._executeQuery(e,{returnGeometry:!0,returnCentroid:!1,outSR:null},t),i=s.items,a=new Set;return await this._reschedule(()=>{for(const r of i)a.add(s.featureAdapter.getObjectId(r))},t),a}catch(s){if(s===Q)return new Set;throw s}}async executeQueryForSnapping(e,t){const{point:s,distance:i,types:a}=e;if(a===ue.NONE)return{candidates:[]};const r=await this._reschedule(()=>this._checkQuerySupport(e.query),t),n=!R(s.spatialReference,this.spatialReference);n&&await B(s.spatialReference,this.spatialReference);const o=typeof i=="number"?i:i.x,h=typeof i=="number"?i:i.y,l={xmin:s.x-o,xmax:s.x+o,ymin:s.y-h,ymax:s.y+h,spatialReference:s.spatialReference},c=n?A(l,this.spatialReference):l;if(!c)return{candidates:[]};const m=(await U(z(s),null,{signal:t}))[0],d=(await U(z(c),null,{signal:t}))[0];if(m==null||d==null)return{candidates:[]};const g=new f(await this._reschedule(()=>this._searchFeatures(this._getQueryBBoxes(d.toJSON())),t),r,this);await this._reschedule(()=>this._executeObjectIdsQuery(g),t),await this._reschedule(()=>this._executeTimeQuery(g),t),await this._reschedule(()=>this._executeAttributesQuery(g),t);const y=m.toJSON(),x=n?A(y,this.spatialReference):y,p=n?Math.max(c.xmax-c.xmin,c.ymax-c.ymin)/2:i;return g.createSnappingResponse({...e,point:x,distance:p},s.spatialReference)}async executeQueryForLatestObservations(e,t){if(!this.timeInfo||!this.timeInfo.trackIdField)throw new S(w,"Missing timeInfo or timeInfo.trackIdField",{query:e,timeInfo:this.timeInfo});try{const s=await this._executeQuery(e,{},t);return await this._reschedule(()=>this._filterLatest(s),t),s.createQueryResponse()}catch(s){if(s!==Q)throw s;return new f([],e,this).createQueryResponse()}}async executeQueryForSummaryStatistics(e={},t,s){const{field:i,normalizationField:a,valueExpression:r}=t;return(await this._getQueryEngineResultForStats(e,{field:i,normalizationField:a,valueExpression:r},s)).createSummaryStatisticsResponse(t)}async executeQueryForUniqueValues(e={},t,s){const{field:i,field2:a,field3:r,valueExpression:n}=t;return(await this._getQueryEngineResultForStats(e,{field:i,field2:a,field3:r,valueExpression:n},s)).createUniqueValuesResponse(t)}async executeQueryForClassBreaks(e={},t,s){const{field:i,normalizationField:a,valueExpression:r}=t;return(await this._getQueryEngineResultForStats(e,{field:i,normalizationField:a,valueExpression:r},s)).createClassBreaksResponse(t)}async executeQueryForHistogram(e={},t,s){const{field:i,normalizationField:a,valueExpression:r}=t;return(await this._getQueryEngineResultForStats(e,{field:i,normalizationField:a,valueExpression:r},s)).createHistogramResponse(t)}async fetchRecomputedExtents(e){const[t,s]=await Promise.all(["getFullExtent"in this.featureStore&&this.featureStore.getFullExtent?Promise.resolve(this.featureStore.getFullExtent(this.spatialReference)):this._getBounds(await this._getAllFeatures(),this.spatialReference,this.spatialReference),this._timeExtentPromise!=null?this._timeExtentPromise:this._timeExtentPromise=ge(this.timeInfo,this.featureStore)]);return $(e),{fullExtent:t,timeExtent:s}}async _getBounds(e,t,s){const i=X(q(),K);await this.featureStore.forEachBounds(e,n=>ee(i,n));const a={xmin:i[0],ymin:i[1],xmax:i[3],ymax:i[4],spatialReference:D(this.spatialReference)};this.hasZ&&isFinite(i[2])&&isFinite(i[5])&&(a.zmin=i[2],a.zmax=i[5]);const r=A(a,t,s);if(r.spatialReference=D(s),r.xmax-r.xmin===0){const n=C(r.spatialReference);r.xmin-=n,r.xmax+=n}if(r.ymax-r.ymin===0){const n=C(r.spatialReference);r.ymin-=n,r.ymax+=n}if(this.hasZ&&r.zmin!=null&&r.zmax!=null&&r.zmax-r.zmin===0){const n=C(r.spatialReference);r.zmin-=n,r.zmax+=n}return r}async _schedule(e,t){return this._frameTask!=null?this._frameTask.schedule(e,t):e(M)}async _reschedule(e,t){return this._frameTask!=null?this._frameTask.reschedule(e,t):e(M)}async _getAllFeaturesQueryEngineResult(e){return new f(await this._getAllFeatures(),e,this)}async _getAllFeatures(){if(this._allFeaturesPromise==null){const s=[];this._allFeaturesPromise=(async()=>{await this.featureStore.forEach(i=>s.push(i))})().then(()=>s)}const e=this._allFeaturesPromise,t=await e;return e===this._allFeaturesPromise?t.slice():this._getAllFeatures()}async _executeQuery(e,t,s){e=N(e),e=await this._schedule(()=>J(e,this.definitionExpression,this.spatialReference),s),e=await this._reschedule(()=>this._checkQuerySupport(e),s),e={...e,...t};const i=await this._reschedule(()=>this._executeSceneFilterQuery(e,s),s),a=await this._reschedule(()=>this._executeGeometryQuery(e,i,s),s);return await this._reschedule(()=>this._executeAggregateIdsQuery(a),s),await this._reschedule(()=>this._executeObjectIdsQuery(a),s),await this._reschedule(()=>this._executeTimeQuery(a),s),await this._reschedule(()=>this._executeAttributesQuery(a),s),a}async _executeSceneFilterQuery(e,t){if(e.sceneFilter==null)return null;const{outSR:s,returnGeometry:i,returnCentroid:a}=e,r=this.featureStore.featureSpatialReference,n=e.sceneFilter.geometry,o=r==null||R(r,n.spatialReference)?n:A(n,r);if(!o)return null;const h=i||a,c=Z(s)&&!R(this.spatialReference,s)&&h?async _=>this._project(_,s):_=>_,m=this.featureAdapter,d=await this._reschedule(()=>this._searchFeatures(this._getQueryBBoxes(o)),t);if(e.sceneFilter.spatialRelationship==="disjoint"){if(!d.length)return null;const _=new Set;for(const u of d)_.add(m.getObjectId(u));const j=await this._reschedule(()=>this._getAllFeatures(),t),T=await this._reschedule(async()=>{const u=await b("esriSpatialRelDisjoint",o,this.geometryType,this.hasZ,this.hasM),I=F=>!_.has(m.getObjectId(F))||u(m.getGeometry(F)),O=await this._runSpatialFilter(j,I,t);return new f(O,e,this)},t);return c(T)}if(!d.length)return new f([],e,this);if(this._canExecuteSinglePass(o,e))return c(new f(d,e,this));const x=await b("esriSpatialRelContains",o,this.geometryType,this.hasZ,this.hasM),p=await this._runSpatialFilter(d,_=>x(m.getGeometry(_)),t);return c(new f(p,e,this))}async _executeGeometryQuery(e,t,s){if(t!=null&&t.items.length===0)return t;e=t!=null?t.query:e;const{geometry:i,outSR:a,spatialRel:r,returnGeometry:n,returnCentroid:o}=e,h=this.featureStore.featureSpatialReference,l=!i||h==null||R(h,i.spatialReference)?i:A(i,h),c=n||o,m=Z(a)&&!R(this.spatialReference,a),d=this._geometryQueryCache&&t==null?JSON.stringify(m&&c?{originalFilterGeometry:i,spatialRelationship:r,outSpatialReference:a}:{originalFilterGeometry:i,spatialRelationship:r}):null,g=d?this._geometryQueryCache.get(d):null;if(g!=null)return new f(g,e,this);const y=async u=>(m&&c&&await this._project(u,a),d&&this._geometryQueryCache.put(d,u.items,u.items.length+1),u);if(!l)return y(t??await this._getAllFeaturesQueryEngineResult(e));const x=this.featureAdapter;let p=await this._reschedule(()=>this._searchFeatures(this._getQueryBBoxes(i)),s);if(r==="esriSpatialRelDisjoint"){if(!p.length)return y(t??await this._getAllFeaturesQueryEngineResult(e));const u=new Set;for(const F of p)u.add(x.getObjectId(F));const I=t!=null?t.items:await this._reschedule(()=>this._getAllFeatures(),s),O=await this._reschedule(async()=>{const F=await b(r,l,this.geometryType,this.hasZ,this.hasM),L=G=>!u.has(x.getObjectId(G))||F(x.getGeometry(G)),Y=await this._runSpatialFilter(I,L,s);return new f(Y,e,this)},s);return y(O)}if(t!=null){const u=new oe;p=p.filter(I=>te(t.items,I,t.items.length,u)>=0)}if(!p.length){const u=new f([],e,this);return d&&this._geometryQueryCache.put(d,u.items,1),u}if(this._canExecuteSinglePass(l,e))return y(new f(p,e,this));const j=await b(r,l,this.geometryType,this.hasZ,this.hasM),T=await this._runSpatialFilter(p,u=>j(x.getGeometry(u)),s);return y(new f(T,e,this))}_executeAggregateIdsQuery(e){if(e.items.length===0||!e.query.aggregateIds||!e.query.aggregateIds.length||this.aggregateAdapter==null)return;const t=new Set;for(const i of e.query.aggregateIds)this.aggregateAdapter.getFeatureObjectIds(i).forEach(r=>t.add(r));const s=this.featureAdapter.getObjectId;e.items=e.items.filter(i=>t.has(s(i)))}_executeObjectIdsQuery(e){if(e.items.length===0||!e.query.objectIds||!e.query.objectIds.length)return;const t=new Set(e.query.objectIds),s=this.featureAdapter.getObjectId;e.items=e.items.filter(i=>t.has(s(i)))}_executeTimeQuery(e){if(e.items.length===0)return;const t=xe(this.timeInfo,e.query.timeExtent,this.featureAdapter);t!=null&&(e.items=e.items.filter(t))}_executeAttributesQuery(e){if(e.items.length===0)return;const t=de(e.query.where,this.fieldsIndex);if(t){if(!t.isStandardized)throw new TypeError("Where clause is not standardized");e.items=e.items.filter(s=>t.testFeature(s,this.featureAdapter))}}async _runSpatialFilter(e,t,s){if(!t)return e;if(this._frameTask==null)return e.filter(n=>t(n));let i=0;const a=new Array,r=async n=>{for(;i<e.length;){const o=e[i++];t(o)&&(a.push(o),n.madeProgress()),n.done&&await this._reschedule(h=>r(h),s)}};return this._reschedule(n=>r(n),s).then(()=>a)}_filterLatest(e){const{trackIdField:t,startTimeField:s,endTimeField:i}=this.timeInfo,a=i||s,r=new Map,n=this.featureAdapter.getAttribute;for(const o of e.items){const h=n(o,t),l=n(o,a),c=r.get(h);(!c||l>n(c,a))&&r.set(h,o)}e.items=Array.from(r.values())}_canExecuteSinglePass(e,t){const{spatialRel:s}=t;return V(e)&&(s==="esriSpatialRelEnvelopeIntersects"||this.geometryType==="esriGeometryPoint"&&(s==="esriSpatialRelIntersects"||s==="esriSpatialRelContains"||s==="esriSpatialRelWithin"))}async _project(e,t){if(!t||R(this.spatialReference,t))return e;const s=this.featureAdapter,i=await ye(e.items.map(a=>Se(this.geometryType,this.hasZ,this.hasM,s.getGeometry(a))),this.spatialReference,t);return e.items=i.map((a,r)=>s.cloneWithGeometry(e.items[r],he(a,this.hasZ,this.hasM))),e}_getQueryBBoxes(e){if(V(e)){if(se(e))return[H(e.xmin,e.ymin,e.xmax,e.ymax)];if(ie(e))return e.rings.map(t=>H(Math.min(t[0][0],t[2][0]),Math.min(t[0][1],t[2][1]),Math.max(t[0][0],t[2][0]),Math.max(t[0][1],t[2][1])))}return[re(ae(),e)]}async _searchFeatures(e){const t=new Set;await Promise.all(e.map(i=>this.featureStore.forEachInBounds(i,a=>t.add(a))));const s=Array.from(t.values());return t.clear(),s}async _checkStatisticsSupport(e,t){if((e.distance??0)<0||e.geometryPrecision!=null||e.multipatchOption||e.pixelSize||e.relationParam||e.text||e.outStatistics||e.groupByFieldsForStatistics||e.having||e.orderByFields)throw new S(w,"Unsupported query options",{query:e});return this._checkAttributesQuerySupport(e),Promise.all([this._checkStatisticsParamsSupport(t),W(e,this.geometryType,this.spatialReference),B(this.spatialReference,e.outSR)]).then(()=>e)}async _checkStatisticsParamsSupport(e){let t=[];if(e.valueExpression){const{arcadeUtils:s}=await ne();t=s.extractFieldNames(e.valueExpression)}if(e.field&&t.push(e.field),e.field2&&t.push(e.field2),e.field3&&t.push(e.field3),e.normalizationField&&t.push(e.normalizationField),!t.length)throw new S(w,"params should have at least a field or valueExpression",{params:e});E(this.fieldsIndex,t,"params contains missing fields")}async _checkQuerySupport(e){if((e.distance??0)<0||e.geometryPrecision!=null||e.multipatchOption||e.pixelSize||e.relationParam||e.text)throw new S(w,"Unsupported query options",{query:e});return this._checkAttributesQuerySupport(e),this._checkStatisticsQuerySupport(e),Promise.all([W(e,this.geometryType,this.spatialReference),B(this.spatialReference,e.outSR)]).then(()=>e)}_checkAttributesQuerySupport(e){const{outFields:t,orderByFields:s,returnDistinctValues:i,outStatistics:a}=e,r=a?a.map(n=>n.outStatisticFieldName&&n.outStatisticFieldName.toLowerCase()).filter(Boolean):[];if(s&&s.length>0){const n=" asc",o=" desc",h=s.map(l=>{const c=l.toLowerCase();return c.includes(n)?c.split(n)[0]:c.includes(o)?c.split(o)[0]:l}).filter(l=>!r.includes(l));E(this.fieldsIndex,h,"orderByFields contains missing fields")}if(t&&t.length>0)E(this.fieldsIndex,t,"outFields contains missing fields");else if(i)throw new S(w,"outFields should be specified for returnDistinctValues",{query:e});fe(this.fieldsIndex,e.where)}_checkStatisticsQuerySupport(e){const{outStatistics:t,groupByFieldsForStatistics:s,having:i}=e,a=s&&s.length,r=t&&t.length;if(i){if(!(a&&r))throw new S(w,"outStatistics and groupByFieldsForStatistics should be specified with having",{query:e});me(this.fieldsIndex,i,t)}if(r){if(!Fe(t))return;const n=t.map(o=>o.onStatisticField).filter(Boolean);E(this.fieldsIndex,n,"onStatisticFields contains missing fields"),a&&E(this.fieldsIndex,s,"groupByFieldsForStatistics contains missing fields");for(const o of t){const{onStatisticField:h,statisticType:l}=o;if((l==="percentile_disc"||l==="percentile_cont")&&"statisticParameters"in o){const{statisticParameters:m}=o;if(!m)throw new S(w,"statisticParamters should be set for percentile type",{definition:o,query:e})}else if(l!=="count"&&h&&pe(h,this.fieldsIndex))throw new S(w,"outStatistics contains non-numeric fields",{definition:o,query:e})}}}async _getQueryEngineResultForStats(e,t,s){e=N(e);try{e=await this._schedule(()=>J(e,this.definitionExpression,this.spatialReference),s),e=await this._reschedule(()=>this._checkStatisticsSupport(e,t),s);const i=await this._reschedule(()=>this._executeSceneFilterQuery(e,s),s),a=await this._reschedule(()=>this._executeGeometryQuery(e,i,s),s);return await this._reschedule(()=>this._executeAggregateIdsQuery(a),s),await this._reschedule(()=>this._executeObjectIdsQuery(a),s),await this._reschedule(()=>this._executeTimeQuery(a),s),await this._reschedule(()=>this._executeAttributesQuery(a),s),a}catch(i){if(i!==Q)throw i;return new f([],e,this)}}}export{Ge as Q};
