import{au as p,ae as i,af as o,ai as u,aj as f}from"./index-30d9bb6f.js";import{s as d}from"./sql-445b0f6c.js";import{c as b}from"./commonProperties-50a31c94.js";import{g as c}from"./floorFilterUtils-0e56040f.js";import{i as g}from"./sublayerUtils-8842449c.js";const S={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let t=class extends p(f){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(r=>{const l=c(this.floors,r);return r.toExportImageJSON(l)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&g(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",r=>this.notifyChange(S[r.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(r=>r.id).join(","):"show:-1":null}get layerDefs(){var l;const e=!!((l=this.floors)!=null&&l.length),r=this.visibleSublayers.filter(a=>a.definitionExpression!=null||e&&a.floorInfo!=null);return r.length?JSON.stringify(r.reduce((a,s)=>{const n=c(this.floors,s),y=d(n,s.definitionExpression);return y!=null&&(a[s.id]=y),a},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,l=s=>{const n=this.scale,y=n===0,m=s.minScale===0||n<=s.minScale,h=s.maxScale===0||n>=s.maxScale;s.visible&&(y||m&&h)&&(s.sublayers?s.sublayers.forEach(l):e.unshift(s))};r&&r.forEach(l);const a=this._get("visibleSublayers");return!a||a.length!==e.length||a.some((s,n)=>e[n]!==s)?e:a}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}};i([o({readOnly:!0})],t.prototype,"dynamicLayers",null);i([o()],t.prototype,"floors",void 0);i([o({readOnly:!0})],t.prototype,"hasDynamicLayers",null);i([o()],t.prototype,"layer",null);i([o({readOnly:!0})],t.prototype,"layers",null);i([o({readOnly:!0})],t.prototype,"layerDefs",null);i([o({type:Number})],t.prototype,"scale",void 0);i([o(b)],t.prototype,"timeExtent",void 0);i([o({readOnly:!0})],t.prototype,"version",null);i([o({readOnly:!0})],t.prototype,"visibleSublayers",null);t=i([u("esri.layers.mixins.ExportImageParameters")],t);export{t as E};
