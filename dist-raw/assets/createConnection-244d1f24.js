import{aP as R,E as a,ae as g,af as m,ai as S,fm as v,cH as F,L as i,aO as x,a as E,r as N,bB as P,_ as M,bt as T}from"./index-ffb342b4.js";import{e as k}from"./query-ad51ba53.js";import{Q as W}from"./Query-b9f237df.js";import"./normalizeUtils-ec352ded.js";import"./normalizeUtilsCommon-99b04a51.js";import"./pbfQueryUtils-0fea6fbe.js";import"./pbf-6f2a85bf.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./queryZScale-b5ad7594.js";import"./Field-9647a27a.js";import"./fieldType-b14303b4.js";let w=class extends R.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new a("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};g([m({readOnly:!0})],w.prototype,"connectionError",null);w=g([S("esri.layers.support.StreamConnection")],w);const L=w;var _;(function(c){c[c.CONNECTING=0]="CONNECTING",c[c.OPEN=1]="OPEN",c[c.CLOSING=2]="CLOSING",c[c.CLOSED=3]="CLOSED"})(_||(_={}));let y=class extends L{constructor(e){super(),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=v(t,s,r),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case _.CONNECTING:case _.OPEN:return"connected";case _.CLOSING:case _.CLOSED:return"disconnected"}}sendMessageToSocket(e){if(this._websocket==null){this._outstandingMessages.push(e);return}this._websocket.send(JSON.stringify(e))}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const s=F(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;if(this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts){i.getLogger(this.declaredClass).error(new a("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),this.destroy();return}return i.getLogger(this.declaredClass).error(new a("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await x(t),this._tryCreateWebSocket(e,Math.min(t*1.5,this._config.maxReconnectionInterval*1e3),r+1)}}_setWebSocketJSONParseHandler(e){e.onmessage=t=>{try{const r=JSON.parse(t.data);this._onMessage(r)}catch(r){i.getLogger(this.declaredClass).error(new a("websocket-connection","Failed to parse message, invalid JSON",{error:r}));return}}}_createWebSocket(e){return new Promise((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed){s.onclose=null,s.close();return}s.onclose=o=>this._onClose(o),s.onerror=o=>this._onError(o),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=o=>{s.onopen=s.onclose=null,r(o)}})}async _handshake(e=1e4){const t=this._websocket;if(t==null)return;const r=E(),s=t.onmessage,{filter:o,outFields:n,spatialReference:l}=this._config;return r.timeout(e),t.onmessage=u=>{var f;let d=null;try{d=JSON.parse(u.data)}catch{}(!d||typeof d!="object")&&(i.getLogger(this.declaredClass).error(new a("websocket-connection","Protocol violation. Handshake failed - malformed message",u.data)),r.reject(),this.destroy()),((f=d.spatialReference)==null?void 0:f.wkid)!==(l==null?void 0:l.wkid)&&(i.getLogger(this.declaredClass).error(new a("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,u.data)),r.reject(),this.destroy()),d.format!=="json"&&(i.getLogger(this.declaredClass).error(new a("websocket-connection","Protocol violation. Handshake failed - format is not set",u.data)),r.reject(),this.destroy()),o&&d.filter!==o&&i.getLogger(this.declaredClass).error(new a("websocket-connection","Tried to set filter, but server doesn't support it")),n&&d.outFields!==n&&i.getLogger(this.declaredClass).error(new a("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const h of this._outstandingMessages)t.send(JSON.stringify(h));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:o,outFields:n,format:"json",spatialReference:{wkid:l.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),i.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),e.code!==1e3&&i.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};g([m()],y.prototype,"connectionStatus",null);g([m()],y.prototype,"errorString",void 0);y=g([S("esri.layers.graphics.sources.connections.WebSocketConnection")],y);const q=1e4,j={maxQueryDepth:5,maxRecordCountFactor:3};let C=class extends y{constructor(e){super({...j,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||i.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){i.getLogger(this.declaredClass).error(new a("geoevent-connection","Failed to parse message",r));return}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},o=(await N(e.path,{query:t,responseType:"json"})).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return F(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return i.getLogger(this.declaredClass).error(new a("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=E(),l=()=>{o||(!this.destroyed&&this._websocket===r&&i.getLogger(this.declaredClass).error(new a("geoevent-connection","Server timed out when setting filter")),n.reject())},u=d=>{const f=JSON.parse(d.data);f.filter&&(f.error&&(i.getLogger(this.declaredClass).error(new a("geoevent-connection","Failed to set service filter",f.error)),this._set("errorString",`Could not set service filter - ${f.error}`),n.reject(f.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())};return r.onmessage=u,r.send(s),setTimeout(l,q),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e!=null&&e.geometry)try{const s=P(e.geometry);if(s.type!=="extent")throw new a(`Expected extent but found type ${s.type}`);r.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){i.getLogger(this.declaredClass).error(new a("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return e!=null&&e.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return i.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const l in o)e.attributes[l]=o[l];return n&&(e.geometry=n),!e.geometry&&!e.centroid&&i.getLogger(this.declaredClass).error(new a("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const n of o.features)this.onFeature(this._enrich(n))}catch(e){i.getLogger(this.declaredClass).error(new a("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){var b;const t=await M(()=>import("./FeatureLayer-5d8499e3.js"),["assets/FeatureLayer-5d8499e3.js","assets/index-ffb342b4.js","assets/index-d832a396.css","assets/UniqueValueRenderer-9d1002cf.js","assets/LegendOptions-0798b0b9.js","assets/diffUtils-d9e7d9d5.js","assets/SizeVariable-5571e455.js","assets/colorRamps-bcaaf237.js","assets/sizeVariableUtils-2914222a.js","assets/lengthUtils-81eb77d2.js","assets/ColorStop-69649184.js","assets/jsonUtils-d970b431.js","assets/styleUtils-7b70a1b4.js","assets/featureFlags-b0a4f6c7.js","assets/jsonUtils-fcc69467.js","assets/DictionaryLoader-cef2ab61.js","assets/LRUCache-7d80c941.js","assets/MemCache-0b9a9ce4.js","assets/FieldsIndex-19734375.js","assets/heatmapUtils-a1ba5203.js","assets/vec4-3dd523e8.js","assets/vec4f64-efdcb593.js","assets/MultiOriginJSONSupport-8a274e44.js","assets/sql-46e4bdd9.js","assets/FeatureLayerBase-6c8dbc52.js","assets/Field-9647a27a.js","assets/fieldType-b14303b4.js","assets/commonProperties-ac9466c5.js","assets/ElevationInfo-3858b8bb.js","assets/AttachmentQuery-a81b6c0b.js","assets/Query-b9f237df.js","assets/RelationshipQuery-df8a4aee.js","assets/serviceCapabilitiesUtils-c15cc356.js","assets/editsZScale-93f171ff.js","assets/queryZScale-b5ad7594.js","assets/FeatureSet-b9324b47.js","assets/APIKeyMixin-bb8d3f14.js","assets/ArcGISService-36126778.js","assets/BlendLayer-f2397c0f.js","assets/jsonUtils-83529e2a.js","assets/parser-b7037908.js","assets/_commonjsHelpers-725317a4.js","assets/CustomParametersMixin-4f7843a4.js","assets/EditBusLayer-726c0dac.js","assets/FeatureReductionLayer-e0eca34b.js","assets/FeatureEffect-9a976584.js","assets/clusterUtils-2ed109d6.js","assets/labelingInfo-df91e583.js","assets/labelUtils-ebd7215b.js","assets/defaultsJSON-b396ba80.js","assets/OperationalLayer-43bf6295.js","assets/OrderedLayer-9f7c5530.js","assets/PortalLayer-641234b2.js","assets/portalItemUtils-b3ac2156.js","assets/RefreshableLayer-7e7030e9.js","assets/ScaleRangeLayer-c00a5713.js","assets/TemporalLayer-dfef6fde.js","assets/FeatureTemplate-0ec4ad27.js","assets/FeatureType-d55aca33.js","assets/fieldProperties-9d112e1c.js","assets/versionUtils-7acaee31.js","assets/styleUtils-69730ec3.js","assets/TopFeaturesQuery-ef9a39c0.js","assets/popupUtils-28cf220f.js"]),r=new t.default({url:e}),{capabilities:s}=await r.load(),o=s.query.supportsMaxRecordCountFactor,n=s.query.supportsPagination,l=s.query.supportsCentroid,u=this._config.maxRecordCountFactor,d=r.capabilities.query.maxRecordCount,f=o?d*u:d,h=new W;if(h.outFields=this._config.outFields??["*"],h.where=((b=this._config.filter)==null?void 0:b.where)??"1=1",h.returnGeometry=!0,h.returnExceededLimitFeatures=!0,h.outSpatialReference=T.fromJSON(this._config.spatialReference),l&&(h.returnCentroid=!0),o&&(h.maxRecordCountFactor=u),n)return h.num=f,r.destroy(),this._queryPages(e,h);const O=await k(e,h,this._config.sourceSpatialReference);return r.destroy(),O.data}async _queryPages(e,t,r=[],s=0){t.start=t.num!=null?s*t.num:null;const{data:o}=await k(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,s+1)):(r.forEach(n=>o.features.push(n)),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const n=o.attributes[s];t.set(n,o)}this._relatedFeatures=t}};C=g([S("esri.layers.graphics.sources.connections.GeoEventConnection")],C);const I=C;let p=class extends L{constructor(e){super(),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=v(t,s,r)}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};g([m()],p.prototype,"connectionStatus",void 0);g([m()],p.prototype,"errorString",void 0);p=g([S("esri.layers.support.ClientSideConnection")],p);function te(c,e,t,r,s,o,n,l){const u={source:c,sourceSpatialReference:e,spatialReference:t,geometryType:r,filter:s,maxReconnectionAttempts:o,maxReconnectionInterval:n,customParameters:l};return c?c.path.startsWith("wss://")||c.path.startsWith("ws://")?new y(u):new I(u):new p(u)}export{te as createConnection};
