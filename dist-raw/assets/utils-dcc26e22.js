import{a as Zt}from"./colorUtils-6f72410e.js";import{ae as l,af as m,ai as b,bD as $t,ag as be,cG as Ft,eg as tt,cE as D,bF as lt,bG as pt,ha as et,E as we,K as Yt,bf as _e}from"./index-30d9bb6f.js";import{P as d,o as Ee,v as De,p as vt,M as Ae,N as Fe,w as Ge,x as V,y as ke,z as Ve,t as ve,A as ze,B as Oe}from"./dataUtils-09807d65.js";import{a as Le,b as Ue,f as ft,r as $e,g as Pe,h as Qt,i as We,G as It,j as qe,s as He,k as Pt,l as Xe,m as Ke,n as Ze}from"./RasterSymbolizer-9f67227d.js";import{t as Ye,f as Qe}from"./colorRamps-8d992597.js";let bt=class extends $t{constructor(){super(...arguments),this.raster=void 0}};l([m({json:{write:!0}})],bt.prototype,"raster",void 0);bt=l([b("esri.layers.support.rasterFunctions.AspectFunctionArguments")],bt);const j=bt;var Ct;let Rt=Ct=class extends j{clone(){return new Ct({raster:this.raster})}};Rt=Ct=l([b("esri.layers.support.rasterFunctions.AspectFunctionArguments")],Rt);const Je=Rt,tn=new Set(["slope","aspect","curvature","hillshade","shadedrelief"]);let I=class extends $t{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n!=null&&n.length;){e.unshift(...n);const r=[];for(let u=0;u<n.length;u++){const{parameters:c}=n[u],f=c.rasters||c.raster&&[c.raster];f!=null&&f.length&&r.push(...f)}n=r}for(let r=e.length-1;r>=0;r--)e[r].isNoopProcess&&e.splice(r,1);let o=!1;for(let r=0;r<e.length;r++){const u=e[r];u.id=e.length-r-1;const{rasters:c}=u.parameters;o=o||c!=null&&c.length>1}const i=e.some(({name:r})=>tn.has(r.toLowerCase()));return{functions:e,hasBranches:o,hasSurfaceFunction:i}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let i=0;i<n.length;i++){const r=n[i];if(r!=null&&this._isRasterFunctionValue(r)){const u=r.bind(t,e,this.id+i);if(!u.success)return this._bindingResult=u,u;o=o&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const e=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(e.length>1){const i=e.map(u=>u.processInputBandIds()[0]);this.rawInputBandIds=i,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((u,c)=>u!==c);const r=e.filter(u=>u.functionName==="ExtractBand");return r.length&&r.forEach((u,c)=>{u.isInputBandIdsSwizzled=!0,u.swizzledBandSelection=[c,c,c]}),this.rawInputBandIds}const n=e[0];if(n){if(s=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:i}=this.sourceRasterInfos[0];for(let r=0;r<i;r++)s.push(r)}const o=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=o.some((i,r)=>i!==r),this.rawInputBandIds=o,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>n!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return((t==null?void 0:t.startsWith("u"))||(t==null?void 0:t.startsWith("s")))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.map(e=>this.functionArguments[e]).flat()}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(e.length===0)return s;const o=e.map(r=>{if(r&&typeof r=="object"&&"bind"in r&&r.rasterInfo)return r.rasterInfo;if(typeof r=="string"&&n.includes(r))return s[n.indexOf(r)];if(typeof r!="number")return s[0]}),i=o.find(r=>r)??s[0];return o.forEach((r,u)=>{r===void 0&&(o[u]=i)}),o}_getPrimaryRasterId(t){return t==null?void 0:t.url}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const o=t.sourceRasters[n];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,e,s);else{const i=o,r=this._getPrimaryRasterId(i);if(r==null)continue;s.includes(r)||(this.mainPrimaryRasterId===r?(e.unshift(i),s.unshift(r)):(e.push(i),s.push(r)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const n=s[0];return n==null?null:n.clone()}if(typeof t=="string"){const n=e.primaryRasterIds.indexOf(t);return n===-1?null:s[n]}if(typeof t=="number"){const n=s[0];if(n==null)return null;const{width:o,height:i,pixelType:r,mask:u}=n,c=u?new Uint8Array(u):null,f=new Float32Array(o*i);f.fill(t);const p=this.sourceRasterInfos[0].bandCount,h=new Array(p).fill(f);return new d({width:o,height:i,pixelType:r,pixels:h,mask:c})}return t.process(e)}};l([m({json:{write:!0}})],I.prototype,"functionName",void 0);l([m({json:{write:!0}})],I.prototype,"functionArguments",void 0);l([m()],I.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}}),be(a=>a==null?void 0:a.toLowerCase())],I.prototype,"outputPixelType",void 0);l([m({json:{write:!0}})],I.prototype,"mainPrimaryRasterId",void 0);l([m()],I.prototype,"sourceRasters",void 0);l([m({type:[Le],json:{write:!0}})],I.prototype,"sourceRasterInfos",void 0);l([m({json:{write:!0}})],I.prototype,"rasterInfo",void 0);l([m({json:{write:!0}})],I.prototype,"readingBufferSize",void 0);l([m({json:{write:!0}})],I.prototype,"id",void 0);l([m()],I.prototype,"isNoopProcess",void 0);l([m()],I.prototype,"supportsGPU",null);l([m()],I.prototype,"rawInputBandIds",void 0);l([m()],I.prototype,"isInputBandIdsSwizzled",void 0);l([m()],I.prototype,"swizzledBandSelection",void 0);l([m()],I.prototype,"isBranch",void 0);l([m()],I.prototype,"flatWebGLFunctionChain",null);l([m()],I.prototype,"_bindingResult",void 0);I=l([b("esri.layers.support.rasterFunctions.BaseRasterFunction")],I);const _=I;let W=class extends _{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var s;const t=this.sourceRasterInfos[0];this.isGCS=((s=t.spatialReference)==null?void 0:s.isGeographic)??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var r;const e=(r=t.pixelBlocks)==null?void 0:r[0];if(e==null)return null;const{extent:s,primaryPixelSizes:n}=t,o=n==null?void 0:n[0],i=o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return Ue(e,{resolution:i})}};l([m({json:{write:!0,name:"rasterFunction"}})],W.prototype,"functionName",void 0);l([m({type:Je,json:{write:!0,name:"rasterFunctionArguments"}})],W.prototype,"functionArguments",void 0);l([m()],W.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],W.prototype,"isGCS",void 0);W=l([b("esri.layers.support.rasterFunctions.AspectFunction")],W);const en=W,nn=new Set(["+","-","*","/","(",")"]);function sn(a,t){a=a.replace(/ /g,""),a.startsWith("-")&&(a="0"+a),a.startsWith("+")&&(a=a.slice(1,a.length));const e=a.split(""),s=[],n=[];let o="";for(let i=0;i<e.length;i++){const r=e[i];if(nn.has(r))o!==""&&n.push(parseFloat(o)),s.push(r),o="";else if(r.toLowerCase()==="b"){i++,o=r.concat(e[i]),n.push(t[parseInt(o[1],10)-1]),o="";continue}else{o=o.concat(r),i===e.length-1&&n.push(parseFloat(o));continue}}return{ops:s,nums:n}}function rn(a,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let n,o,i;typeof e=="number"?(i=s,n=i.length,o=new Float32Array(n),o.fill(e)):(n=e.length,o=e,s.constructor===Number?(i=new Float32Array(n),i.fill(s)):i=s);const r=new Float32Array(n);switch(t){case"+":for(let u=0;u<n;u++)(a==null||a[u])&&(r[u]=o[u]+i[u]);break;case"-":for(let u=0;u<n;u++)(a==null||a[u])&&(r[u]=o[u]-i[u]);break;case"*":for(let u=0;u<n;u++)(a==null||a[u])&&(r[u]=o[u]*i[u]);break;case"/":for(let u=0;u<n;u++)(a==null||a[u])&&i[u]&&(r[u]=o[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function on(a,t){a.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let n=0;n<a.length;n++)if(a[n]==="(")e=n;else if(a[n]===")"){s=n;break}s===e+1&&a.splice(e,2)}while(s===e+1);return a}function an(a){if(a.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let i=0;i<a.length;i++)if(a[i]==="(")t=i;else if(a[i]===")"){e=i;break}const s=e===0?a:a.slice(t+1,e);let n=-1;for(let i=0;i<s.length;i++)if(s[i]==="*"||s[i]==="/"){n=i;break}if(n>-1)e>0&&(n+=t+1);else{for(let i=0;i<s.length;i++)if(s[i]==="+"||s[i]==="-"){n=i;break}e>0&&(n+=t+1)}let o=0;for(let i=0;i<n;i++)a[i]==="("&&o++;return{opIndex:n,numIndex:n-o}}function un(a,t,e){let{ops:s,nums:n}=sn(e,t);if(s.length===0){const i=n.length===1?n[0]:t[0];if(i instanceof Float32Array)return[i];const r=new Float32Array(t[0].length);return typeof i=="number"?r.fill(i):r.set(i),[r]}let o;for(;s.length>0;){const{numIndex:i,opIndex:r}=an(s),u=s[r];if(o=rn(a,u,n[i],n[i+1]),s.length===1)break;s=on(s,r),n.splice(i,2,o)}return[o]}const cn=new Ft({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function ln(a,t){if(!Ee(a))return a;const{equation:e,method:s}=t,n=t.bandIndexes.map(f=>f-1),{pixels:o,mask:i}=a;let r;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=Jt(i,o[n[0]],o[n[1]]);break;case"ndwi":r=Jt(i,o[n[1]],o[n[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=fn(i,o[n[0]],o[n[1]]);break;case"ci-g":case"ci-re":r=mn(i,o[n[0]],o[n[1]]);break;case"savi":r=hn(i,o[n[0]],o[n[1]],n[2]+1);break;case"tsavi":r=dn(i,o[n[0]],o[n[1]],n[2]+1,n[3]+1,n[4]+1);break;case"msavi":r=gn(i,o[n[0]],o[n[1]]);break;case"gemi":r=yn(i,o[n[0]],o[n[1]]);break;case"pvi":r=xn(i,o[n[0]],o[n[1]],n[2]+1,n[3]+1);break;case"gvitm":r=bn(i,[o[n[0]],o[n[1]],o[n[2]],o[n[3]],o[n[4]],o[n[5]]]);break;case"sultan":r=wn(i,[o[n[0]],o[n[1]],o[n[2]],o[n[3]],o[n[4]],o[n[5]]]);break;case"vari":r=An(i,[o[n[0]],o[n[1]],o[n[2]]]);break;case"mtvi2":r=Fn(i,[o[n[0]],o[n[1]],o[n[2]]]);break;case"rtvi-core":r=vn(i,[o[n[0]],o[n[1]],o[n[2]]]);break;case"evi":r=Pn(i,[o[n[0]],o[n[1]],o[n[2]]]);break;case"wndwi":r=In(i,[o[n[0]],o[n[1]],o[n[2]]],n[3]?n[3]+1:.5);break;case"bai":r=Cn(i,o[n[0]],o[n[1]]);break;case"custom":r=un(i,o,e);break;default:return a}const u=i!=null?new Uint8Array(i.length):null;i!=null&&u!=null&&u.set(i);const c=new d({width:a.width,height:a.height,pixelType:"f32",pixels:r,mask:u});return c.updateStatistics(),c}function pn(a,t,e,s){const{mask:n,pixels:o,width:i,height:r}=a,u=o[e],c=o[t],f=c.length,p=s?new Uint8Array(f):new Float32Array(f),h=s?100:1,x=s?100.5:0;for(let F=0;F<f;F++)if(n==null||n[F]){const S=u[F],xt=c[F],Kt=S+xt;Kt&&(p[F]=(S-xt)/Kt*h+x)}const A=s?"u8":"f32",g=new d({width:i,height:r,mask:n,pixelType:A,pixels:[p]});return g.updateStatistics(),g}function R(a){const t=new Float32Array(9);return t[a[0]*3]=1,t[a[1]*3+1]=1,t[a[2]*3+2]=1,t}function Jt(a,t,e){const s=e.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],r=e[o],u=i+r;u&&(n[o]=(i-r)/u)}return[n]}function fn(a,t,e){const s=e.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],r=e[o];r&&(n[o]=i/r)}return[n]}function mn(a,t,e){const s=t.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=t[o],r=e[o];r&&(n[o]=i/r-1)}return[n]}function hn(a,t,e,s){const n=e.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(a==null||a[i]){const r=e[i],u=t[i],c=u+r+s;c&&(o[i]=(u-r)/c*(1+s))}return[o]}function dn(a,t,e,s,n,o){const i=e.length,r=new Float32Array(i),u=-n*s+o*(1+s*s);for(let c=0;c<i;c++)if(a==null||a[c]){const f=e[c],p=t[c],h=n*p+f+u;h&&(r[c]=s*(p-s*f-n)/h)}return[r]}function gn(a,t,e){const s=e.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=e[o],r=t[o];n[o]=.5*(2*(r+1)-Math.sqrt((2*r+1)**2-8*(r-i)))}return[n]}function yn(a,t,e){const s=e.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o]){const i=e[o],r=t[o];if(i!==1){const u=(2*(r*r-i*i)+1.5*r+.5*i)/(r+i+.5);n[o]=u*(1-.25*u)-(i-.125)/(1-i)}}return[n]}function xn(a,t,e,s,n){const o=e.length,i=new Float32Array(o),r=Math.sqrt(1+s*s);for(let u=0;u<o;u++)if(a==null||a[u]){const c=e[u],f=t[u];i[u]=(f-s*c-n)/r}return[i]}function bn(a,t){const[e,s,n,o,i,r]=t,u=e.length,c=new Float32Array(u);for(let f=0;f<u;f++)(a==null||a[f])&&(c[f]=-.2848*e[f]-.2435*s[f]-.5436*n[f]+.7243*o[f]+.084*i[f]-1.18*r[f]);return[c]}function wn(a,t){const[e,,s,n,o,i]=t,r=e.length,u=new Float32Array(r),c=new Float32Array(r),f=new Float32Array(r);for(let p=0;p<r;p++)(a==null||a[p])&&(u[p]=i[p]?o[p]/i[p]*100:0,c[p]=e[p]?o[p]/e[p]*100:0,f[p]=n[p]?s[p]/n[p]*(o[p]/n[p])*100:0);return[u,c,f]}function An(a,t){const[e,s,n]=t,o=e.length,i=new Float32Array(o);for(let r=0;r<o;r++)if(a==null||a[r])for(r=0;r<o;r++){const u=e[r],c=s[r],f=n[r],p=c+u-f;p&&(i[r]=(c-u)/p)}return[i]}function Fn(a,t){const[e,s,n]=t,o=e.length,i=new Float32Array(o);for(let r=0;r<o;r++)if(a==null||a[r])for(r=0;r<o;r++){const u=e[r],c=s[r],f=n[r],p=Math.sqrt((2*u+1)**2-6*u-5*Math.sqrt(c)-.5);i[r]=1.5*(1.2*(u-f)-2.5*(c-f))*p}return[i]}function vn(a,t){const[e,s,n]=t,o=e.length,i=new Float32Array(o);for(let r=0;r<o;r++)if(a==null||a[r])for(r=0;r<o;r++){const u=e[r],c=s[r],f=n[r];i[r]=100*(u-c)-10*(u-f)}return[i]}function Pn(a,t){const[e,s,n]=t,o=e.length,i=new Float32Array(o);for(let r=0;r<o;r++)if(a==null||a[r])for(r=0;r<o;r++){const u=e[r],c=s[r],f=n[r],p=u+6*c-7.5*f+1;p&&(i[r]=2.5*(u-c)/p)}return[i]}function In(a,t,e=.5){const[s,n,o]=t,i=n.length,r=new Float32Array(i);for(let u=0;u<i;u++)if(a==null||a[u])for(u=0;u<i;u++){const c=s[u],f=n[u],p=o[u],h=c+e*f+(1-e)*p;h&&(r[u]=(c-e*f-(1-e)*p)/h)}return[r]}function Cn(a,t,e){const s=e.length,n=new Float32Array(s);for(let o=0;o<s;o++)if(a==null||a[o])for(o=0;o<s;o++){const i=t[o],r=e[o],u=(.1-i)**2+(.06-r)**2;u&&(n[o]=1/u)}return[n]}var Bt;let mt=Bt=class extends j{constructor(){super(...arguments),this.method="custom"}clone(){return new Bt({method:this.method,bandIndexes:this.bandIndexes,raster:D(this.raster)})}};l([m({json:{type:String,write:!0}})],mt.prototype,"bandIndexes",void 0);l([tt(cn)],mt.prototype,"method",void 0);mt=Bt=l([b("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],mt);const Rn=mt,Bn=new Set(["vari","mtvi2","rtvi-core","evi"]);let nt=class extends _{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0],e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=null,e.histograms=null,e.bandCount=this.functionArguments.method==="sultan"?t.bandCount:1,this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){var i;const e=(i=t.pixelBlocks)==null?void 0:i[0];if(e==null)return e;const{method:s,bandIndexes:n}=this.functionArguments,o=n.split(" ").map(r=>parseFloat(r));return ln(e,{method:s,bandIndexes:o,equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(r=>parseFloat(r)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const o=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=R([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=R([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=R([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=R([e[0],e[1],0]),n="ci";break;case"savi":s=R([e[0],e[1],0]),n="savi",o[0]=t[2]+1;break;case"tsavi":s=R([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=R([e[0],e[1],0]),n="msavi";break;case"gemi":s=R([e[0],e[1],0]),n="gemi";break;case"pvi":s=R([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=R([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=R([e[0],e[1],e[2]]),n="mtvi2";break;case"rtvi-core":s=R([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=R([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=R([e[0],e[1],0]),n="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=R([e[1],e[0],0]),n="bai";break;default:s=R([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:o}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(r=>parseFloat(r)-1),s=t.length,n=e.map(r=>r>=s?s-1:r),o=Bn.has(this.functionArguments.method)?3:2,i=n.slice(0,o).map(r=>t[r]);return i.length===2&&i.push(0),i}};l([m({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0);l([m({type:Rn,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0);l([m()],nt.prototype,"rasterArgumentNames",void 0);nt=l([b("esri.layers.support.rasterFunctions.BandArithmeticFunction")],nt);const Tn=nt;var Tt;let k=Tt=class extends j{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return $e.includes(e)?e:null}readColorRamp(t){return Qe(t)}readColorRampName(t,e){if(!t)return null;const s=ft.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return s?ft.fromJSON(s):null}clone(){var t;return new Tt({colormap:D(this.colormap),colormapName:this.colormapName,colorRamp:(t=this.colorRamp)==null?void 0:t.clone(),colorRampName:this.colorRampName})}};l([m({type:[[Number]],json:{write:!0}})],k.prototype,"colormap",void 0);l([m({type:String,json:{write:!0}})],k.prototype,"colormapName",void 0);l([be("colormapName")],k.prototype,"castColormapName",null);l([m({types:Ye,json:{write:!0}})],k.prototype,"colorRamp",void 0);l([lt("colorRamp")],k.prototype,"readColorRamp",null);l([m({type:ft.apiValues,json:{type:ft.jsonValues,write:ft.write}})],k.prototype,"colorRampName",void 0);l([lt("colorRampName")],k.prototype,"readColorRampName",null);k=Tt=l([b("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],k);const Nn=k,Sn=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Mn=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Wt(a,t){const e=[],s=[];for(let o=0;o<a.length-1;o++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:a[o].slice(1),toColor:a[o+1].slice(1)}),s.push(a[o+1][0]-a[o][0]);const n=a[a.length-1][0];return t=t??s,Pe({type:"multipart",colorRamps:e},{numColors:n,weights:t})}function jn(){return Wt([[0,0,191,191],[51,0,255,0],[102,255,255,0],[153,255,127,0],[204,191,127,63],[256,20,20,20]])}function _n(){const t=Wt([[0,255,255,255],[70,0,0,255],[80,205,193,173],[100,150,150,150],[110,120,100,51],[130,120,200,100],[140,28,144,3],[160,6,55,0],[180,10,30,25],[201,6,27,7]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function En(){return Pe({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Dn(){const a=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(Math.random()*255));a.push(e)}return a}function Gn(){return Wt([[0,38,54,41],[69,79,90,82],[131,156,156,156],[256,253,241,253]],[.268,.238,.495])}function kn(a){let t;switch(a){case"elevation":t=jn();break;case"gray":t=En();break;case"hillshade":t=Gn();break;case"ndvi":t=Sn;break;case"ndvi2":t=_n();break;case"ndvi3":t=Mn;break;case"random":t=Dn();break}return t?(t=t.map((e,s)=>[s,...e]),t):null}let z=class extends _{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:o}=this.functionArguments;if(!(e!=null&&e.length))if(n)e=Qt(n,{interpolateAlpha:!0});else if(o){const r=We(o);r&&(e=Qt(r))}else s&&(e=kn(s));if(!(e!=null&&e.length))return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],z.prototype,"functionName",void 0);l([m({type:Nn,json:{write:!0,name:"rasterFunctionArguments"}})],z.prototype,"functionArguments",void 0);l([m()],z.prototype,"rasterArgumentNames",void 0);l([m()],z.prototype,"isNoopProcess",void 0);l([m({json:{write:!0}})],z.prototype,"indexedColormap",void 0);z=l([b("esri.layers.support.rasterFunctions.ColormapFunction")],z);const Vn=z;var Nt;let ht=Nt=class extends j{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new Nt({rasters:D(this.rasters)})}};l([m({json:{write:!0}})],ht.prototype,"rasters",void 0);l([pt("rasters")],ht.prototype,"writeRasters",null);ht=Nt=l([b("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],ht);const zn=ht;let st=class extends _{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,i)=>o+i),t.every(({statistics:o})=>o!=null&&o.length)){const o=[];t.forEach(({statistics:i})=>i!=null&&o.push(...i)),s.statistics=o}if(t.every(({histograms:o})=>o!=null&&o.length)){const o=[];t.forEach(({histograms:i})=>i!=null&&o.push(...i)),s.histograms=o}return s.bandCount>1&&(s.colormap=null,s.attributeTable=null),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return!e||(e==null?void 0:e[0])==null?null:De(e)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};l([m({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0);l([m({type:zn,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0);l([m()],st.prototype,"rasterArgumentNames",void 0);st=l([b("esri.layers.support.rasterFunctions.CompositeBandFunction")],st);const On=st,w={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ln={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},M={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},G={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Un={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ie={setNull:50,conditional:78},te={...Ln,...M,...G,...Un,...Ie},P=new Map;P.set(w.none,[0,0,0,0,1,0,0,0,0]);P.set(w.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]);P.set(w.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]);P.set(w.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]);P.set(w.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]);P.set(w.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]);P.set(w.gradientWest,[-1,0,1,-2,0,2,-1,0,1]);P.set(w.gradientEast,[1,0,-1,2,0,-2,1,0,-1]);P.set(w.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]);P.set(w.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]);P.set(w.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]);P.set(w.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]);P.set(w.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]);P.set(w.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]);P.set(w.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]);P.set(w.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]);P.set(w.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]);P.set(w.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]);P.set(w.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]);P.set(w.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]);P.set(w.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]);P.set(w.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]);P.set(w.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);function $n(a){const t=Math.sqrt(a.length),e=a.slice(0,t),s=[1];for(let n=1;n<t;n++){let o=null;for(let i=0;i<t;i++){const r=a[i+n*t],u=a[i];if(o==null)if(u===0){if(r)return{separable:!1,row:null,col:null}}else o=r/u;else if(r/u!==o)return{separable:!1,row:null,col:null}}if(o==null)return{separable:!1,row:null,col:null};s.push(o)}return{separable:!0,row:e,col:s}}function ee(a,t,e,s,n,o,i){const r=new Float32Array(t*e),u=o.length,c=i?0:s,f=i?s:0,p=i?1:t;for(let h=c;h<e-c;h++){const x=h*t;for(let A=f;A<t-f;A++){if(n&&!n[x+A])continue;let g=0;for(let F=0;F<u;F++)g+=a[x+A+(F-s)*p]*o[F];r[x+A]=g}}return r}function Wn(a,t,e,s,n,o,i){const r=new Float32Array(t*e),u=Math.floor(s/2),c=Math.floor(n/2);for(let f=u;f<e-u;f++){const p=f*t;for(let h=c;h<t-c;h++){if(o&&!o[p+h])continue;let x=0;for(let A=0;A<s;A++)for(let g=0;g<n;g++)x+=a[p+h+(A-u)*t+g-c]*i[A*n+g];r[p+h]=x}}return r}function qn(a,t,e=!0){const{pixels:s,width:n,height:o,pixelType:i,mask:r}=a,u=s.length,c=[],{kernel:f,rows:p,cols:h}=t;for(let x=0;x<u;x++){const A=s[x],g=Wn(A,n,o,p,h,r,f);e&&Ce(g,n,o,p,h),c.push(g)}return new d({width:n,height:o,pixelType:i,pixels:c,mask:r})}function Ce(a,t,e,s,n){const o=Math.floor(s/2);for(let r=0;r<o;r++)for(let u=0;u<t;u++)a[r*t+u]=a[(n-1-r)*t+u],a[(e-1-r)*t+u]=a[(e-n+r)*t+u];const i=Math.floor(n/2);for(let r=0;r<e;r++){const u=r*t;for(let c=0;c<i;c++)a[u+c]=a[u+n-1-c],a[u+t-c-1]=a[u+t+c-n]}}function Hn(a,t,e,s=!0){const{pixels:n,width:o,height:i,pixelType:r,mask:u}=a,c=n.length,f=[],p=t.length,h=e.length,x=Math.floor(p/2),A=Math.floor(h/2);for(let g=0;g<c;g++){const F=n[g];let S=ee(F,o,i,x,u,t,!0);S=ee(S,o,i,A,u,e,!1),s&&Ce(S,o,i,p,h),f.push(S)}return new d({width:o,height:i,pixelType:r,pixels:f,mask:u})}function Xn(a,t){const e=$n(t.kernel),s=t.mirrorEdges!==!1,n=e.separable?Hn(a,e.row,e.col,s):qn(a,t,s),{outputPixelType:o}=t;return o&&n.clamp(o),n}var St;let q=St=class extends j{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=P.get(t);if(!e||t===w.userDefined||t===w.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new St({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:D(this.raster)})}};l([m({json:{type:Number,write:!0}})],q.prototype,"rows",void 0);l([m({json:{type:Number,write:!0}})],q.prototype,"cols",void 0);l([m({json:{name:"type",type:Number,write:!0}})],q.prototype,"convolutionType",null);l([m({json:{type:[Number],write:!0}})],q.prototype,"kernel",void 0);q=St=l([b("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],q);const Kn=q,ne=25;let rt=class extends _{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(w).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==w.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const i=o.clone();i.pixelType=this.outputPixelType;const r=[w.none,w.sharpen,w.sharpen2,w.sharpening3x3,w.sharpening5x5];return this.outputPixelType!=="u8"&&!r.includes(t)&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:n.length<=ne}}_processPixels(t){var r;const e=(r=t.pixelBlocks)==null?void 0:r[0];if(e==null||this.functionArguments.convolutionType===w.none)return e;let{kernel:s,rows:n,cols:o}=this.functionArguments;const i=s.reduce((u,c)=>u+c);return i===0||i===1||(s=s.map(u=>u/i)),Xn(e,{kernel:s,rows:n,cols:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const e=t.reduce((n,o)=>n+o);e===0||e===1||(t=t.map(n=>n/e));const s=new Float32Array(ne);return s.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:s,clampRange:vt(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0);l([m({type:Kn,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0);l([m()],rt.prototype,"rasterArgumentNames",void 0);rt=l([b("esri.layers.support.rasterFunctions.ConvolutionFunction")],rt);const Zn=rt;var Mt;const Re=new Ft({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let ot=Mt=class extends j{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Re.fromJSON(e.type??e.curvatureType??0)}clone(){return new Mt({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};l([m({json:{write:{target:"type"}}}),tt(Re)],ot.prototype,"curvatureType",void 0);l([lt("curvatureType",["type","curvatureType"])],ot.prototype,"readCurvatureType",null);l([m({type:Number,json:{write:!0}})],ot.prototype,"zFactor",void 0);ot=Mt=l([b("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],ot);const Yn=ot;let H=class extends _{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var f;const e=(f=t.pixelBlocks)==null?void 0:f[0];if(e==null)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:o,primaryPixelSizes:i}=t,r=i==null?void 0:i[0],u=r??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1}),c=this.isGCS&&s>=1?s*It:s;return qe(e,{zFactor:c,curvatureType:n,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments,s=this.isGCS&&t>=1?t*It:t;return{curvatureType:e,zFactor:s}}};l([m({json:{write:!0,name:"rasterFunction"}})],H.prototype,"functionName",void 0);l([m({type:Yn,json:{write:!0,name:"rasterFunctionArguments"}})],H.prototype,"functionArguments",void 0);l([m()],H.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],H.prototype,"isGCS",void 0);H=l([b("esri.layers.support.rasterFunctions.CurvatureFunction")],H);const Qn=H;var jt;let dt=jt=class extends j{constructor(){super(...arguments),this.bandIds=[],this.missingBandAction=Ae.bestMatch}clone(){return new jt({bandIds:[...this.bandIds],missingBandAction:this.missingBandAction})}};l([m({json:{write:!0}})],dt.prototype,"bandIds",void 0);l([m({json:{write:!0}})],dt.prototype,"missingBandAction",void 0);dt=jt=l([b("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],dt);const Jn=dt;let it=class extends _{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{bandIds:n,missingBandAction:o}=this.functionArguments;if(o===Ae.fail&&n.some(f=>f<0||f>=s))return{success:!1,supportsGPU:!1,error:"extract-band-function: invalid bandIds"};this.outputPixelType=this._getOutputPixelType("f32");const i=e.clone();i.pixelType=this.outputPixelType,i.bandCount=n.length;const{statistics:r,histograms:u}=i;return r!=null&&r.length&&(i.statistics=n.map(f=>r[f]||r[r.length-1])),u!=null&&u.length&&(i.histograms=n.map(f=>u[f]||u[u.length-1])),this.rasterInfo=i,{success:!0,supportsGPU:i.bandCount<=3}}_processPixels(t){var o;const e=(o=t.pixelBlocks)==null?void 0:o[0];if(e==null)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(i=>i>=s?s-1:i);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let s=0;s<3;s++)t[s]=Math.min(t[s],2)}return{bandIndexMat3:R(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(n=>n>=e?e-1:n).map(n=>t[n])}};l([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0);l([m({type:Jn,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0);l([m()],it.prototype,"rasterArgumentNames",void 0);it=l([b("esri.layers.support.rasterFunctions.ExtractBandFunction")],it);const ts=it;var _t;let X=_t=class extends j{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new _t({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:D(this.rasters)})}};l([m({json:{write:!0}})],X.prototype,"operation",void 0);l([m({json:{write:!0}})],X.prototype,"rasters",void 0);l([pt("rasters")],X.prototype,"writeRasters",null);l([m({json:{write:!0}})],X.prototype,"processAsMultiband",void 0);X=_t=l([b("esri.layers.support.rasterFunctions.LocalFunctionArguments")],X);const es=X,B=new Map;B.set(G.acos,[0,Math.PI]);B.set(G.asin,[-Math.PI/2,Math.PI/2]);B.set(G.atan,[-Math.PI/2,Math.PI/2]);B.set(G.cos,[-1,1]);B.set(G.sin,[-1,1]);B.set(M.booleanAnd,[0,1]);B.set(M.booleanNot,[0,1]);B.set(M.booleanOr,[0,1]);B.set(M.booleanXOr,[0,1]);B.set(M.equalTo,[0,1]);B.set(M.notEqual,[0,1]);B.set(M.greaterThan,[0,1]);B.set(M.greaterThanEqual,[0,1]);B.set(M.lessThan,[0,1]);B.set(M.lessThanEqual,[0,1]);B.set(M.isNull,[0,1]);function ns(a){return B.get(a)}const se=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function ss(a,t=!1){const e=a.map(r=>r.mask),s=e.filter(r=>r!=null),n=a[0].pixels[0].length;if(s.length===0)return new Uint8Array(n).fill(255);const o=s[0],i=new Uint8Array(o);if(s.length===1)return i;if(!t){for(let r=1;r<s.length;r++){const u=s[r];for(let c=0;c<i.length;c++)i[c]&&(i[c]=u[c]?255:0)}return i}if(s.length!==e.length)return new Uint8Array(n).fill(255);for(let r=1;r<s.length;r++){const u=s[r];for(let c=0;c<i.length;c++)i[c]===0&&(i[c]=u[c]?255:0)}return i}function rs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]+n[r]);return i}function os(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand("f32",n);return o.set(s),o}function is(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]-n[r]);return i}function as(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]*n[r]);return i}function us(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand(e,n);for(let i=0;i<n;i++)(!t||t[i])&&(o[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return o}function Be(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]/n[r]);return i}function cs(a,t,e){return Be(a,t,"f32")}function ls(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=Math.floor(s[r]/n[r]));return i}function ps(a,t,e,s){const n=a[0],o=n.length,i=d.createEmptyBand(e,o);if(s===G.atanh){for(let u=0;u<o;u++)if(t[u]){const c=n[u];Math.abs(c)>=1?t[u]=0:i[u]=Math.atanh(c)}return i}const r=s===G.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(t[u]){const c=n[u];Math.abs(c)>1?t[u]=0:i[u]=r(c)}return i}function fs(a,t,e,s){const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s(n[r]));return i}function ms(a,t,e,s){const[n,o]=a,i=n.length,r=d.createEmptyBand(e,i);for(let u=0;u<i;u++)(!t||t[u])&&(r[u]=s(n[u],o[u]));return r}function hs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]&n[r]);return i}function re(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]<<n[r]);return i}function ds(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand(e,n);for(let i=0;i<n;i++)(!t||t[i])&&(o[i]=~s[i]);return o}function gs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]|n[r]);return i}function ys(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]>>n[r]);return i}function xs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]^n[r]);return i}function bs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]&&n[r]?1:0);return i}function ws(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand(e,n);for(let i=0;i<n;i++)(!t||t[i])&&(o[i]=s[i]?0:1);return o}function As(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]||n[r]?1:0);return i}function Fs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=(s[r]?1:0)^(n[r]?1:0));return i}function vs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]===n[r]?1:0);return i}function qt(a,t,e,s){const[n]=a,o=n.length,i=d.createEmptyBand(e,o),r=s===Math.E;for(let u=0;u<o;u++)(!t||t[u])&&(i[u]=r?Math.exp(n[u]):s**n[u]);return i}function Ps(a,t,e){return qt(a,t,e,10)}function Is(a,t,e){return qt(a,t,e,2)}function Cs(a,t,e){return qt(a,t,e,Math.E)}function Ht(a,t,e,s){const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(n[r]<=0?t[r]=0:i[r]=s(n[r]));return i}function Rs(a,t,e){return Ht(a,t,e,Math.log10)}function Bs(a,t,e){return Ht(a,t,e,Math.log2)}function Ts(a,t,e){return Ht(a,t,e,Math.log)}function Ns(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]>n[r]?1:0);return i}function Ss(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]>=n[r]?1:0);return i}function Ms(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]<n[r]?1:0);return i}function js(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]<=n[r]?1:0);return i}function _s(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand(e,n);if(!t)return o;for(let i=0;i<n;i++)o[i]=t[i]?0:1;return o}function Es(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]%n[r]);return i}function Ds(a,t,e){const[s]=a,n=s.length,o=d.createEmptyBand(e,n);for(let i=0;i<n;i++)(!t||t[i])&&(o[i]=-s[i]);return o}function Gs(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)(!t||t[r])&&(i[r]=s[r]===n[r]?0:1);return i}function ks(a,t,e){const[s,n]=a,o=s.length,i=d.createEmptyBand(e,o),r=new Uint8Array(o);for(let u=0;u<o;u++)(t==null||t[u])&&s[u]===0&&(i[u]=n[u],r[u]=255);return{band:i,mask:r}}function oe(a,t,e){const[s,n,o]=a,i=s.length,r=d.createEmptyBand(e,i);for(let u=0;u<i;u++)(!t||t[u])&&(r[u]=s[u]?n[u]:o[u]);return r}function ie(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r]){let u=n[r];for(let c=1;c<s;c++){const f=a[c][r];u<f&&(u=f)}i[r]=u}return i}function ae(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r]){let u=n[r];for(let c=1;c<s;c++){const f=a[c][r];u>f&&(u=f)}i[r]=u}return i}function ue(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r]){let u=n[r],c=u;for(let f=1;f<s;f++){const p=a[f][r];c<p?c=p:u>p&&(u=p)}i[r]=c-u}return i}function ce(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r]){let u=0;for(let c=0;c<s;c++)u+=a[c][r];i[r]=u/s}return i}function le(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r])for(let u=0;u<s;u++){const c=a[u];i[r]+=c[r]}return i}function pe(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)if(!t||t[r]){const u=new Float32Array(s);let c=0;for(let p=0;p<s;p++){const h=a[p];c+=h[r],u[p]=h[r]}c/=s;let f=0;for(let p=0;p<s;p++)f+=(u[p]-c)**2;i[r]=Math.sqrt(f/s)}return i}function fe(a,t,e){const s=a.length;if(s<2)return a[0];const n=Math.floor(s/2),[o]=a,i=o.length,r=d.createEmptyBand(e,i),u=new Float32Array(s),c=s%2===1;for(let f=0;f<i;f++)if(!t||t[f]){for(let p=0;p<s;p++)u[p]=a[p][f];u.sort(),r[f]=c?u[n]:(u[n]+u[n-1])/2}return r}function Te(a,t,e){const[s,n]=a;if(n==null)return s;const o=s.length,i=d.createEmptyBand(e,o);for(let r=0;r<o;r++)t[r]&&(s[r]===n[r]?i[r]=s[r]:t[r]=0);return i}function me(a,t,e){const s=a.length;if(s<=2)return Te(a,t,e);const n=a[0].length,o=d.createEmptyBand(e,n),i=new Map;for(let r=0;r<n;r++)if(!t||t[r]){i.clear();let u;for(let p=0;p<s;p++)u=a[p][r],i.set(u,i.has(u)?i.get(u)+1:1);let c=0,f=0;for(const p of i.keys())c=i.get(p),c>f&&(f=c,u=p);o[r]=u}return o}function he(a,t,e){const s=a.length;if(s<=2)return Te(a,t,e);const n=a[0].length,o=d.createEmptyBand(e,n),i=new Map;for(let r=0;r<n;r++)if(!t||t[r]){i.clear();let u;for(let p=0;p<s;p++)u=a[p][r],i.set(u,i.has(u)?i.get(u)+1:1);let c=0,f=a.length;for(const p of i.keys())c=i.get(p),c<f&&(f=c,u=p);o[r]=u}return o}function de(a,t,e){const s=a.length;if(s<2)return a[0];const[n]=a,o=n.length,i=d.createEmptyBand(e,o),r=new Set;for(let u=0;u<o;u++)if(!t||t[u]){r.clear();let c;for(let f=0;f<s;f++)c=a[f][u],r.add(c);i[u]=r.size}return i}const C=new Map,wt=new Map,y=new Map,v=new Map;function Vs(){C.size||(C.set(4,Math.sqrt),C.set(6,Math.acos),C.set(7,Math.asin),C.set(8,Math.atan),C.set(9,Math.atanh),C.set(10,Math.abs),C.set(21,Math.cos),C.set(22,Math.cosh),C.set(48,Math.floor),C.set(49,Math.ceil),C.set(51,Math.sin),C.set(52,Math.sinh),C.set(56,Math.tan),C.set(57,Math.tanh),C.set(59,Math.acosh),C.set(60,Math.asinh),C.set(65,Math.floor),wt.set(5,Math.pow),wt.set(61,Math.atan2),y.set(1,rs),y.set(2,is),y.set(3,as),y.set(11,hs),y.set(12,re),y.set(12,re),y.set(13,ds),y.set(14,gs),y.set(15,ys),y.set(16,xs),y.set(17,bs),y.set(18,ws),y.set(19,As),y.set(20,Fs),y.set(23,Be),y.set(24,vs),y.set(25,Cs),y.set(26,Ps),y.set(27,Is),y.set(28,Ns),y.set(29,Ss),y.set(30,us),y.set(31,_s),y.set(32,os),y.set(33,Ms),y.set(34,js),y.set(35,Ts),y.set(36,Rs),y.set(37,Bs),y.set(44,Es),y.set(45,Ds),y.set(46,Gs),y.set(64,cs),y.set(65,ls),y.set(76,oe),y.set(78,oe),v.set(38,me),v.set(39,ie),v.set(40,ce),v.set(41,fe),v.set(42,ae),v.set(43,he),v.set(47,ue),v.set(54,pe),v.set(55,le),v.set(58,de),v.set(66,me),v.set(67,ie),v.set(68,ce),v.set(69,fe),v.set(70,ae),v.set(71,he),v.set(72,ue),v.set(73,pe),v.set(74,le),v.set(75,de))}function zs(a,t,e,s){let[n,o]=vt(e);const i=e.startsWith("u")||e.startsWith("s");i&&(n-=1e-5,o+=1e-5);for(let r=0;r<t.length;r++)if(t[r]){const u=a[r];isNaN(u)||u<n||u>o?t[r]=0:s[r]=i?Math.round(u):u}}function Os(a,t,e={}){Vs();const s=t>=66&&t<=75;let n=ss(a,s);const{outputPixelType:o="f32"}=e,i=!v.has(t)||e.processAsMultiband,r=i?a[0].pixels.length:1,u=[];for(let p=0;p<r;p++){const h=v.has(t)&&!i?a.flatMap(g=>g.pixels):a.map(g=>g.pixels[p]);let x,A=!0;if(t===Ie.setNull){const g=ks(h,n,o);x=g.band,n=g.mask,A=!1}else y.has(t)?x=y.get(t)(h,n,"f64"):C.has(t)?t===G.asin||t===G.acos||t===G.atanh?x=ps(h,n,"f64",t):x=fs(h,n,"f64",C.get(t)):wt.has(t)?x=ms(h,n,"f64",wt.get(t)):v.has(t)?x=v.get(t)(h,n,"f64"):(x=h[0],A=!1);if(A&&t!==M.isNull&&!B.has(t)){const g=d.createEmptyBand(o,x.length);n||(n=new Uint8Array(x.length).fill(255)),zs(x,n,o,g),x=g}u.push(x)}const c=a[0];return new d({width:c.width,height:c.height,pixelType:o,mask:t===M.isNull?null:n,pixels:u})}let at=class extends _{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(h=>h.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:i}=this.functionArguments,r=se[o];if(!(r===999||i.length===r||i.length<=1&&r===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${r}`};this.outputPixelType=this._getOutputPixelType("f32");const c=e.clone();c.pixelType=this.outputPixelType,c.statistics=null,c.histograms=null,c.colormap=null,c.attributeTable=null,c.bandCount=r===999&&!n?1:s;const f=ns(o);if(f){c.statistics=[];for(let h=0;h<c.bandCount;h++)c.statistics[h]={min:f[0],max:f[1],avg:(f[0]+f[1])/2,stddev:(f[0]+f[1])/10}}return this.rasterInfo=c,{success:!0,supportsGPU:c.bandCount===1&&r<=3&&(o<11||o>16)}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:Os(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){var u;const{operation:t}=this.functionArguments,e=se[t],s=((u=Object.keys(te).find(c=>te[c]===t))==null?void 0:u.toLowerCase())??"undefined",n=this.outputPixelType??"f32";let[o,i]=vt(n);const r=n.startsWith("u")||n.startsWith("s");return r&&(o-=1e-4,i+=1e-4),{imageCount:e,operationName:s,domainRange:[o,i],isOutputRounded:r}}};l([m({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0);l([m({type:es,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0);l([m()],at.prototype,"rasterArgumentNames",void 0);at=l([b("esri.layers.support.rasterFunctions.LocalFunction")],at);const Ls=at;var Et;let K=Et=class extends j{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Fe.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!(t!=null&&t.length))return null;let e=!1;const s=t.map(n=>{if(typeof n=="number")return e=!0,[n];if(typeof n=="string"){const o=n.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return e=e||o.length>0,o.length===0?null:o}return null});return e?s:null}clone(){var t,e;return new Et({includedRanges:((t=this.includedRanges)==null?void 0:t.slice())??[],noDataValues:((e=this.noDataValues)==null?void 0:e.slice())??[],noDataInterpretation:this.noDataInterpretation})}};l([m({json:{write:!0}})],K.prototype,"includedRanges",void 0);l([m({json:{write:!0}})],K.prototype,"noDataValues",void 0);l([m()],K.prototype,"normalizedNoDataValues",null);l([m({json:{write:!0}})],K.prototype,"noDataInterpretation",void 0);K=Et=l([b("esri.layers.support.rasterFunctions.MaskFunctionArguments")],K);const Us=K;let Z=class extends _{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!(s!=null&&s.length||n!=null&&n.length))return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let u=0;u<t.bandCount;u++){const c=Ge(e,s==null?void 0:s.slice(u*2,u*2+2),n==null?void 0:n[u]);if(c==null){o=null;break}o.push(c)}this.lookups=o;const i=n!=null&&n.every(u=>{var c;return(u==null?void 0:u.length)===((c=n[0])==null?void 0:c.length)});return{success:!0,supportsGPU:(!s||s.length<=V*2)&&(!n||i&&n[0].length<=V)}}_processPixels(t){var c;const e=(c=t.pixelBlocks)==null?void 0:c[0];if(e==null)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:o,noDataInterpretation:i,normalizedNoDataValues:r}=this.functionArguments,u=i===Fe.matchAll;return ke(e,{includedRanges:o,noDataValues:r,outputPixelType:s,matchAll:u,lookups:n})}_getWebGLParameters(){var o;const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(V);s.fill(et),(o=e==null?void 0:e[0])!=null&&o.length&&s.set(e[0]);const n=new Float32Array(V);for(let i=0;i<n.length;i+=2)n[i]=(t==null?void 0:t[i])??-et,n[i+1]=(t==null?void 0:t[i+1])??et;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};l([m({json:{write:!0,name:"rasterFunction"}})],Z.prototype,"functionName",void 0);l([m({type:Us,json:{write:!0,name:"rasterFunctionArguments"}})],Z.prototype,"functionArguments",void 0);l([m()],Z.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],Z.prototype,"lookups",void 0);Z=l([b("esri.layers.support.rasterFunctions.MaskFunction")],Z);const $s=Z;var Dt;let ut=Dt=class extends j{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new Dt({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};l([m({json:{write:!0}})],ut.prototype,"visibleBandID",void 0);l([m({json:{write:!0}})],ut.prototype,"infraredBandID",void 0);l([m({json:{write:!0}})],ut.prototype,"scientificOutput",void 0);ut=Dt=l([b("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],ut);const Ws=ut;let ct=class extends _{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const e=this.sourceRasterInfos[0].clone();e.pixelType=this.outputPixelType,e.colormap=null,e.histograms=null,e.bandCount=1;const[s,n,o,i]=t?[-1,1,0,.1]:[0,200,100,10];return e.statistics=[{min:s,max:n,avg:o,stddev:i}],this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var i;const e=(i=t.pixelBlocks)==null?void 0:i[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:o}=this.functionArguments;return pn(e,s,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:R(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};l([m({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0);l([m({type:Ws,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0);l([m()],ct.prototype,"rasterArgumentNames",void 0);ct=l([b("esri.layers.support.rasterFunctions.NDVIFunction")],ct);const qs=ct;var Gt;let O=Gt=class extends j{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Gt({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};l([m({json:{write:!0}})],O.prototype,"inputRanges",void 0);l([m({json:{write:!0}})],O.prototype,"outputValues",void 0);l([m({json:{write:!0}})],O.prototype,"noDataRanges",void 0);l([m({json:{write:!0}})],O.prototype,"allowUnmatched",void 0);l([m({json:{write:!0}})],O.prototype,"isLastInputRangeInclusive",void 0);O=Gt=l([b("esri.layers.support.rasterFunctions.RemapFunctionArguments")],O);const Hs=O;let Y=class extends _{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:o,inputRanges:i,noDataRanges:r,isLastInputRangeInclusive:u}=this.functionArguments;if(s!=null&&s.length&&(o!=null&&o.length))if(n){const f=Math.min.apply(null,[...o,s[0].min]),p=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:f,max:p}]}else{let f=o[0],p=f;for(let h=0;h<o.length;h++)f=f>o[h]?o[h]:f,p=p>o[h]?p:o[h];t.statistics=[{...s[0],min:f,max:p}]}return this.rasterInfo=t,this.lookup=n?null:Ve({srcPixelType:e,inputRanges:i,outputValues:o,noDataRanges:r,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=V)&&(!r||r.length<=V)}}_processPixels(t){var f;const e=(f=t.pixelBlocks)==null?void 0:f[0];if(e==null)return null;const{lookup:s,outputPixelType:n}=this;if(s){const p=ve(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return p!=null&&s.mask&&(p.mask=ze(e.pixels[0],e.mask,s.mask,s.offset,"u8")),p}const{inputRanges:o,outputValues:i,noDataRanges:r,allowUnmatched:u,isLastInputRangeInclusive:c}=this.functionArguments;return Oe(e,{inputRanges:o,outputValues:i,noDataRanges:r,outputPixelType:n,allowUnmatched:u,isLastInputRangeInclusive:c})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(V*3),o=1e-5,i=this.functionArguments.inputRanges??[],r=this.functionArguments.outputValues??[],u=r.length;for(let p=0;p<V;p++)n[p*3]=i[p*2]??et-1,n[p*3+1]=i[p*2+1]??et,n[p*3+2]=r[p]??0,p<u&&(p>0&&(n[p*3]-=o),(p<u-1||!s)&&(n[p*3+1]-=o));const c=new Float32Array(V*2);c.fill(et),e!=null&&e.length&&c.set(e);const f=vt(this.outputPixelType);return{allowUnmatched:t,rangeMaps:n,noDataRanges:c,clampRange:f}}};l([m({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0);l([m({type:Hs,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0);l([m()],Y.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],Y.prototype,"lookup",void 0);Y=l([b("esri.layers.support.rasterFunctions.RemapFunction")],Y);const Xs=Y;var kt;const Ks=new Ft({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let L=kt=class extends j{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new kt({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([tt(Ks)],L.prototype,"slopeType",void 0);l([m({type:Number,json:{write:!0}})],L.prototype,"zFactor",void 0);l([m({type:Number,json:{name:"psPower",write:!0}})],L.prototype,"pixelSizePower",void 0);l([m({type:Number,json:{name:"psZFactor",write:!0}})],L.prototype,"pixelSizeFactor",void 0);l([m({type:Boolean,json:{write:!0}})],L.prototype,"removeEdgeEffect",void 0);L=kt=l([b("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],L);const Zs=L;let Q=class extends _{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){var e;this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=((e=t.spatialReference)==null?void 0:e.isGeographic)??!1,{success:!0,supportsGPU:!0}}_processPixels(t){var h;const e=(h=t.pixelBlocks)==null?void 0:h[0];if(e==null)return null;const{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:r}=this,{extent:u,primaryPixelSizes:c}=t,f=c==null?void 0:c[0],p=f??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return He(e,{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i,isGCS:r,resolution:p})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*It:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};l([m({json:{write:!0,name:"rasterFunction"}})],Q.prototype,"functionName",void 0);l([m({type:Zs,json:{write:!0,name:"rasterFunctionArguments"}})],Q.prototype,"functionArguments",void 0);l([m()],Q.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],Q.prototype,"isGCS",void 0);Q=l([b("esri.layers.support.rasterFunctions.SlopeFunction")],Q);const Ys=Q;var Vt;let J=Vt=class extends j{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!(t!=null&&t.length))return null;const s=[];return t.forEach(n=>{const o={min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation};s.push(o)}),s}writeStatistics(t,e,s){if(!(t!=null&&t.length))return;const n=[];t.forEach(o=>{const i={...o,mean:o.avg,standardDeviation:o.stddev};delete i.avg,delete i.stddev,n.push(i)}),e[s]=n}clone(){return new Vt({statistics:D(this.statistics),histograms:D(this.histograms)})}};l([m({json:{write:!0}})],J.prototype,"statistics",void 0);l([lt("statistics")],J.prototype,"readStatistics",null);l([pt("statistics")],J.prototype,"writeStatistics",null);l([m({json:{write:!0}})],J.prototype,"histograms",void 0);J=Vt=l([b("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],J);const Qs=J;let U=class extends _{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){var e;return(e=t.pixelBlocks)==null?void 0:e[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],U.prototype,"functionName",void 0);l([m({type:Qs,json:{write:!0,name:"rasterFunctionArguments"}})],U.prototype,"functionArguments",void 0);l([m()],U.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],U.prototype,"indexedColormap",void 0);l([m()],U.prototype,"isNoopProcess",void 0);U=l([b("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],U);const Js=U;var zt;const tr=new Ft({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let T=zt=class extends j{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t!=null&&t.length&&(Array.isArray(t[0])||(t=t.map(n=>[n.min,n.max,n.avg,n.stddev])),e[s]=t)}clone(){return new zt({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:D(this.statistics),gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};l([m({type:Boolean,json:{write:!0}})],T.prototype,"computeGamma",void 0);l([m({type:Boolean,json:{name:"dra",write:!0}})],T.prototype,"dynamicRangeAdjustment",void 0);l([m({type:[Number],json:{write:!0}})],T.prototype,"gamma",void 0);l([m()],T.prototype,"histograms",void 0);l([m({type:Number,json:{write:!0}})],T.prototype,"maxPercent",void 0);l([m({type:Number,json:{write:!0}})],T.prototype,"minPercent",void 0);l([m({type:Number,json:{write:!0}})],T.prototype,"numberOfStandardDeviations",void 0);l([m({type:Number,json:{name:"max",write:!0}})],T.prototype,"outputMax",void 0);l([m({type:Number,json:{name:"min",write:!0}})],T.prototype,"outputMin",void 0);l([m({type:Number,json:{write:!0}})],T.prototype,"sigmoidStrengthLevel",void 0);l([m({json:{type:[[Number]],write:!0}})],T.prototype,"statistics",void 0);l([pt("statistics")],T.prototype,"writeStatistics",null);l([tt(tr)],T.prototype,"stretchType",void 0);l([m({type:Boolean,json:{write:!0}})],T.prototype,"useGamma",void 0);T=zt=l([b("esri.layers.support.rasterFunctions.StretchFunctionArguments")],T);const er=T;let $=class extends _{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:i}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const f=Pt(s.toJSON(),{rasterInfo:t}),p=this._isOutputRoundingNeeded()?"round":"float";this.lookup=Xe({pixelType:e,...f,gamma:i?o:null,rounding:p}),this.cutOffs=f}else n||(this.cutOffs=Pt(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const u=t.clone();return u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,this.outputPixelType==="u8"&&(u.keyProperties.DataType="processed"),this.rasterInfo=u,{success:!0,supportsGPU:!n}}_processPixels(t){var r;const e=(r=t.pixelBlocks)==null?void 0:r[0];if(e==null)return e;const{lookup:s}=this;if(s)return ve(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||Pt(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=n.useGamma?n.gamma:null;return Ke(e,{...o,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,i=n&&s&&s.length?Ze(o,s):[1,1,1],{minCutOff:r,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};r.length===1&&(r[1]=r[2]=r[0],u[1]=u[2]=u[0]);const c=new Float32Array(o);let f;for(f=0;f<o;f++)c[f]=(e-t)/(u[f]-r[f]);const p=this._isOutputRoundingNeeded();return{bandCount:o,outMin:t,outMax:e,minCutOff:r,maxCutOff:u,factor:c,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&i?i:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};l([m({json:{write:!0,name:"rasterFunction"}})],$.prototype,"functionName",void 0);l([m({type:er,json:{write:!0,name:"rasterFunctionArguments"}})],$.prototype,"functionArguments",void 0);l([m()],$.prototype,"rasterArgumentNames",void 0);l([m({json:{write:!0}})],$.prototype,"lookup",void 0);l([m({json:{write:!0}})],$.prototype,"cutOffs",void 0);$=l([b("esri.layers.support.rasterFunctions.StretchFunction")],$);const nr=$,N=new Map;N.set("Aspect",{desc:"Aspect Function",ctor:en,rasterArgumentNames:["raster"]});N.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Tn,rasterArgumentNames:["raster"]});N.set("Colormap",{desc:"Colormap Function",ctor:Vn,rasterArgumentNames:["raster"]});N.set("CompositeBand",{desc:"CompositeBand Function",ctor:On,rasterArgumentNames:["rasters"]});N.set("Convolution",{desc:"Convolution Function",ctor:Zn,rasterArgumentNames:["raster"]});N.set("ExtractBand",{desc:"ExtractBand Function",ctor:ts,rasterArgumentNames:["raster"]});N.set("Curvature",{desc:"Curvature Function",ctor:Qn,rasterArgumentNames:["raster"]});N.set("Local",{desc:"Local Function",ctor:Ls,rasterArgumentNames:["rasters"]});N.set("Mask",{desc:"Mask Function",ctor:$s,rasterArgumentNames:["raster"]});N.set("NDVI",{desc:"NDVI Function",ctor:qs,rasterArgumentNames:["raster"]});N.set("Remap",{desc:"Remap Function",ctor:Xs,rasterArgumentNames:["raster"]});N.set("Slope",{desc:"Slope Function",ctor:Ys,rasterArgumentNames:["raster"]});N.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Js,rasterArgumentNames:["raster"]});N.set("Stretch",{desc:"Stretch Function",ctor:nr,rasterArgumentNames:["raster"]});function sr(a,t){const{rasterFunctionArguments:e}=a;if(!e)return;(e.rasters||[e.raster]).forEach(n=>{!n||typeof n=="number"||(typeof n=="string"?n.startsWith("http")&&(t.includes(n)||t.push(n)):"rasterFunctionArguments"in n&&sr(n,t))})}function Zr(a,t){if(t=t??{},a=D(a),"function"in a&&"arguments"in a&&a.arguments&&(a=or(a,t)),"rasterFunction"in a)return a=Ot(a),Ne(a,t);throw new we("raster-function-helper","unsupported raster function json.")}function rr(a,t){return t[0]==="rasters"&&Array.isArray(a.rasters)?a.rasters:t.map(s=>a[s])}function ge(a){return!!(a&&typeof a=="object"&&a.rasterFunction&&a.rasterFunctionArguments)}function Ot(a){var n;const{rasterFunction:t,rasterFunctionArguments:e}=a,s={};for(const o in e){let i=e[o];const r=o.toLowerCase();if(r==="rasters"&&Array.isArray(i)){s.rasters=i.map(u=>ge(u)?Ot(u):u);continue}switch(ge(i)&&(i=Ot(i)),r){case"dra":s.dra=i;break;case"pspower":s.psPower=i;break;case"pszfactor":s.psZFactor=i;break;case"bandids":s.bandIds=i;break;default:{const u=o[0].toLowerCase()+o.slice(1);s[u]=i}}}return t==="Local"&&!((n=s.rasters)!=null&&n.length)&&(s.rasters=["$$"]),{...a,rasterFunctionArguments:s}}function Ne(a,t){var x,A;const{rasterFunction:e,rasterFunctionArguments:s}=a,n=(x=a.outputPixelType)==null?void 0:x.toLowerCase();if(e==null||!N.has(e))throw new we("raster-function-helper",`unsupported raster function: ${e}`);const o=N.get(e),r=(typeof o.ctor=="function"?o.ctor:o.ctor.default).fromJSON({...a,outputPixelType:n}),{rasterArgumentNames:u}=r,c=[],f=rr(s,u),p=u[0]==="rasters",h=[];for(let g=0;g<f.length;g++){const F=f[g];let S;F==null||typeof F=="string"&&F.startsWith("$")?c.push(t==null?void 0:t.raster):typeof F=="string"?t[F]&&c.push(t[F]):typeof F!="number"&&"rasterFunction"in F&&(S=Ne(F,t),p||(r.functionArguments[u[g]]=S),c.push(S)),p&&h.push(S??F)}if(p&&(r.functionArguments.rasters=h),t){r.sourceRasters=c;const g=(A=t.raster)==null?void 0:A.url;g&&(r.mainPrimaryRasterId=g)}return r}function Se(a,t){if(!(a&&t))return;let e;for(e in a){const s=a[e];!s||typeof s!="object"||("function"in s&&s.function&&s.arguments?Se(s.arguments,t):"type"in s&&"value"in s&&s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function Lt(a){var t;if(!a||typeof a!="object")return a;if(Array.isArray(a)&&a.length===0)return a.length===0?null:["number","string"].includes(typeof a[0])?a:a.map(e=>Lt(e));if("value"in a&&["number","string","boolean"].includes(typeof a.value))return a.value;if(!("type"in a))return a;switch(a.type){case"Scalar":return a.value;case"AlgorithmicColorRamp":return ye(a);case"MultiPartColorRamp":return{type:"multipart",colorRamps:a.ArrayOfColorRamp.map(ye)};case"ArgumentArray":return!((t=a.elements)!=null&&t.length)||a.elements[0].type==="RasterStatistics"?a.elements:a.elements[0].type==="RasterFunctionVariable"?a.elements.map(e=>e.value!=null?Lt(e.value):e.name.toLowerCase().includes("raster")?"$$":null):a;default:return a}}function ye(a){const t=a.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=a;if(!Array.isArray(e)){const{r:n,g:o,b:i}=Zt({h:e.Hue,s:e.Saturation,v:e.Value});e=[n,o,i,e.AlphaValue]}if(!Array.isArray(s)){const{r:n,g:o,b:i}=Zt({h:s.Hue,s:s.Saturation,v:s.Value});s=[n,o,i,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function or(a,t){t&&Se(a,t);const e={};return Me(a,e),e}function Me(a,t){if(!(a&&t))return;const{function:e,arguments:s}=a;if(!(e&&s))return;t.rasterFunction=e.type.replace("Function",""),t.outputPixelType=e.pixelType;const n={};t.rasterFunctionArguments=n;for(const o in s){const i=s[o];typeof i=="object"&&("function"in i&&i.function&&i.arguments?(t.rasterFunctionArguments[o]={},Me(i,t.rasterFunctionArguments[o])):"value"in i&&(n[o]=Lt(i.value)))}switch(n.DEM&&!n.Raster&&(n.Raster=n.DEM,delete n.DEM),t.rasterFunction){case"Stretch":ir(n);break;case"Colormap":ar(n);break;case"Convolution":ur(n);break;case"Mask":cr(n);break}}function ir(a){var t;(t=a.Statistics)!=null&&t.length&&typeof a.Statistics=="object"&&(a.Statistics=a.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),a.NumberOfStandardDeviation!=null&&(a.NumberOfStandardDeviations=a.NumberOfStandardDeviation,delete a.NumberOfStandardDeviation)}function ar(a){var t,e;((e=(t=a.ColorRamp)==null?void 0:t.type)==null?void 0:e.toLowerCase())==="randomcolorramp"&&(delete a.ColorRamp,a.ColormapName="Random"),a.ColorSchemeType===0&&delete a.ColorRamp}function ur(a){a.ConvolutionType!=null&&(a.Type=a.ConvolutionType,delete a.ConvolutionType)}function cr(a){var t;(t=a.NoDataValues)!=null&&t.length&&typeof a.NoDataValues[0]=="string"&&(a.NoDataValues=a.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}let gt=class extends $t{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};l([m()],gt.prototype,"affectsPixelSize",null);l([m({json:{write:!0}})],gt.prototype,"spatialReference",void 0);gt=l([b("esri.layers.support.rasterTransforms.BaseRasterTransform")],gt);const Xt=gt;let yt=class extends Xt{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return t=t.clone(),t.type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return t=t.clone(),t.type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}};l([tt({GCSShiftXform:"gcs-shift"})],yt.prototype,"type",void 0);l([m()],yt.prototype,"tolerance",void 0);yt=l([b("esri.layers.support.rasterTransforms.GCSShiftTransform")],yt);const lr=yt;let At=class extends Xt{constructor(){super(...arguments),this.type="identity"}};l([tt({IdentityXform:"identity"})],At.prototype,"type",void 0);At=l([b("esri.layers.support.rasterTransforms.IdentityTransform")],At);const pr=At;function Ut(a,t,e){const{x:s,y:n}=t;if(e<2){const A=a[0]+s*a[2]+n*a[4],g=a[1]+s*a[3]+n*a[5];return{x:A,y:g}}if(e===2){const A=s*s,g=n*n,F=s*n,S=a[0]+s*a[2]+n*a[4]+A*a[6]+F*a[8]+g*a[10],xt=a[1]+s*a[3]+n*a[5]+A*a[7]+F*a[9]+g*a[11];return{x:S,y:xt}}const o=s*s,i=n*n,r=s*n,u=o*s,c=o*n,f=s*i,p=n*i,h=a[0]+s*a[2]+n*a[4]+o*a[6]+r*a[8]+i*a[10]+u*a[12]+c*a[14]+f*a[16]+p*a[18],x=a[1]+s*a[3]+n*a[5]+o*a[7]+r*a[9]+i*a[11]+u*a[13]+c*a[15]+f*a[17]+p*a[19];return{x:h,y:x}}function xe(a,t,e){const{xmin:s,ymin:n,xmax:o,ymax:i,spatialReference:r}=t;let u=[];if(e<2)u.push({x:s,y:i}),u.push({x:o,y:i}),u.push({x:s,y:n}),u.push({x:o,y:n});else{let p=10;for(let h=0;h<p;h++)u.push({x:s,y:n+(i-n)*h/(p-1)}),u.push({x:o,y:n+(i-n)*h/(p-1)});p=8;for(let h=1;h<=p;h++)u.push({x:s+(o-s)*h/p,y:n}),u.push({x:s+(o-s)*h/p,y:i})}u=u.map(p=>Ut(a,p,e));const c=u.map(p=>p.x),f=u.map(p=>p.y);return new _e({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,f),ymax:Math.max.apply(null,f),spatialReference:r})}function fr(a){const[t,e,s,n,o,i]=a,r=s*i-o*n,u=i/r,c=-o/r,f=(o*e-t*i)/r,p=o*n-s*i,h=n/p,x=-s/p,A=(s*e-t*n)/p;return[f,A,u,h,c,x]}let E=class extends Xt{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:s,coeffY:n}=e;if(!(s!=null&&s.length&&(n!=null&&n.length)&&s.length===n.length))return null;const o=[];for(let i=0;i<s.length;i++)o.push(s[i]),o.push(n[i]);return o}writeForwardCoefficients(t,e,s){const n=[],o=[];for(let i=0;i<(t==null?void 0:t.length);i++)i%2===0?n.push(t[i]):o.push(t[i]);e.coeffX=n,e.coeffY=o}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=fr(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:s,inverseCoeffY:n}=e;if(!(s!=null&&s.length&&(n!=null&&n.length)&&s.length===n.length))return null;const o=[];for(let i=0;i<s.length;i++)o.push(s[i]),o.push(n[i]);return o}writeInverseCoefficients(t,e,s){const n=[],o=[];for(let i=0;i<(t==null?void 0:t.length);i++)i%2===0?n.push(t[i]):o.push(t[i]);e.inverseCoeffX=n,e.inverseCoeffY=o}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type==="point"){const e=Ut(this.forwardCoefficients,t,this.polynomialOrder);return new Yt({x:e.x,y:e.y,spatialReference:t.spatialReference})}return xe(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type==="point"){const e=Ut(this.inverseCoefficients,t,this.polynomialOrder);return new Yt({x:e.x,y:e.y,spatialReference:t.spatialReference})}return xe(this.inverseCoefficients,t,this.polynomialOrder)}};l([m({json:{write:!0}})],E.prototype,"polynomialOrder",void 0);l([m()],E.prototype,"forwardCoefficients",void 0);l([lt("forwardCoefficients",["coeffX","coeffY"])],E.prototype,"readForwardCoefficients",null);l([pt("forwardCoefficients")],E.prototype,"writeForwardCoefficients",null);l([m({json:{write:!0}})],E.prototype,"inverseCoefficients",null);l([lt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],E.prototype,"readInverseCoefficients",null);l([pt("inverseCoefficients")],E.prototype,"writeInverseCoefficients",null);l([m()],E.prototype,"affectsPixelSize",null);l([tt({PolynomialXform:"polynomial"})],E.prototype,"type",void 0);E=l([b("esri.layers.support.rasterTransforms.PolynomialTransform")],E);const mr=E,je={GCSShiftXform:lr,IdentityXform:pr,PolynomialXform:mr},hr=Object.keys(je);function eo(a){const t=a==null?void 0:a.type;return!a||hr.includes(t)}function no(a){if(!(a==null?void 0:a.type))return null;const e=je[a==null?void 0:a.type];if(e){const s=new e;return s.read(a),s}return null}export{lr as G,mr as P,Zr as c,sr as g,eo as i,no as r};
