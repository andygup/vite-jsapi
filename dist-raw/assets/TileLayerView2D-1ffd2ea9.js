import{b5 as _,b6 as y,b7 as V,b8 as I,A as T,b9 as v,i as o,ba as u,L as H,ae as l,af as d,ai as b}from"./index-1ff2b83b.js";import"./MagnifierPrograms-052982c8.js";import"./Container-c03efaff.js";import"./BufferPool-908c1506.js";import"./color-931e5528.js";import"./WGLContainer-d45d831d.js";import"./enums-08489827.js";import"./TextureDescriptor-d93b8350.js";import"./ProgramTemplate-cedad509.js";import"./MaterialKey-ac09a7af.js";import"./utils-ab80218c.js";import"./VertexArrayObject-174fcb9d.js";import"./StyleDefinition-edaaf36e.js";import"./enums-977a0ba8.js";import"./OrderIndependentTransparency-01632ab9.js";import"./floatRGBA-bf12c96e.js";import{G as q}from"./GraphicsView2D-39268077.js";import"./AttributeStoreView-1002ec4b.js";import"./earcut-db592379.js";import"./featureConversionUtils-e2e44d08.js";import"./lengthUtils-a56675d8.js";import"./vec3f32-ec4c3c20.js";import"./normalizeUtils-19de81d3.js";import{B as L,c as g,r as f}from"./imageUtils-d46bf56b.js";import{L as Q,a as S}from"./LayerView-961a55ce.js";import{H as U}from"./HighlightGraphicContainer-ea672233.js";import{R as C}from"./RefreshableLayerView-6a37db19.js";import{i as G,M as R,c as D}from"./drapedUtils-56cd28a2.js";import"./_commonjsHelpers-725317a4.js";import"./ExpandedCIM-51e5278e.js";import"./BidiEngine-cdaf024a.js";import"./GeometryUtils-26dde58c.js";import"./enums-eb6e4255.js";import"./definitions-3f56d206.js";import"./Rect-df8ea165.js";import"./quantizationUtils-719bd53e.js";import"./rasterizingUtils-be3180de.js";import"./pbf-8c7438c3.js";import"./GeometryUtils-0ab64fac.js";import"./imageutils-60ffcceb.js";import"./Matcher-e4e9830d.js";import"./visualVariablesUtils-73777b49.js";import"./visualVariablesUtils-d9203111.js";import"./tileUtils-fdb57ff2.js";import"./TurboLine-4024b500.js";import"./defaultsJSON-b396ba80.js";import"./OptimizedGeometry-af84d2ad.js";import"./LRUCache-6f7e49d4.js";import"./MemCache-0e11f97c.js";import"./devEnvironmentUtils-e2e22b53.js";import"./styleUtils-7c3bb336.js";import"./featureFlags-fd0f9f5d.js";import"./CircularArray-7e036143.js";import"./DisjointTimerQuery-0b864cc8.js";import"./throttle-9d01e8e8.js";import"./ComputedAttributeStorage-5e6b576c.js";import"./FieldsIndex-9b7b8612.js";import"./arcadeTimeUtils-0132b4b1.js";import"./executionError-e2eca390.js";import"./centroid-1116d1e7.js";import"./diffUtils-218aeec0.js";import"./sizeVariableUtils-2914222a.js";import"./parser-4edf9fb4.js";import"./VertexElementDescriptor-24e04d97.js";import"./config-c06e4a6d.js";import"./heatmapUtils-2699876b.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./basicInterfaces-cc58f4ac.js";import"./normalizeUtilsSync-98f0d7ee.js";import"./normalizeUtilsCommon-8aa6d9c6.js";import"./projectionSupport-55a539de.js";import"./json-9ae8d6f8.js";import"./labelingInfo-c9b9bf14.js";import"./labelUtils-6157dfad.js";import"./jsonUtils-2332f9ae.js";import"./schemaUtils-29acd33d.js";import"./sql-f95a493c.js";import"./clusterUtils-c8666ffc.js";import"./SizeVariable-26ffe240.js";import"./colorRamps-2ec53a25.js";import"./LegendOptions-94e3feca.js";import"./util-b57eab6f.js";import"./TiledDisplayObject-136f3a7e.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./BitmapTileContainer-be57b9bf.js";import"./Bitmap-70782460.js";import"./TileContainer-efa0645f.js";import"./BaseGraphicContainer-143a5b98.js";import"./FeatureContainer-e8f208b6.js";import"./scaleUtils-0008e580.js";import"./floorFilterUtils-0e56040f.js";import"./sublayerUtils-48923dcb.js";import"./popupUtils-35aabe62.js";const F=[0,0];let h=class extends C(L(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new _,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new V({tileInfoView:this._tileInfoView,concurrency:e&&e.length*10||10,process:(t,i)=>this.fetchTile(t,i)}),this._tileStrategy=new I({cachePolicy:"keep",resampling:this.resampling,acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),tileInfoView:this._tileInfoView}),G(this,this.layer)){const t=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new R({createFetchPopupFeaturesQueryGeometry:(i,r)=>D(i,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(i,r)=>{t.graphicUpdateHandler({graphic:i,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(T(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var e;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(e,t):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return v((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(e=>this._enqueueTileFetch(e)))}isUpdating(){var e;return((e=this._fetchQueue)==null?void 0:e.updating)??!1}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(F,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:m=0}=t;if(!i)try{return await this._fetchImage(e,r)}catch(s){if(!o(s)&&!this.resampling)return g(this._tileInfoView.tileInfo.size);if(m<3){const n=this._tileInfoView.getTileParentId(e.id);if(n){const c=new u(n),w=await this.fetchTile(c,{...t,resamplingLevel:m+1});return f(this._tileInfoView,w,c,e)}}throw s}const a=new u(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:r}),a.level!==e.level&&!this.resampling)return g(this._tileInfoView.tileInfo.size);p=await this._fetchImage(a,r)}catch(s){if(o(s))throw s;p=await this._fetchImage(e,r)}return this.resampling?f(this._tileInfoView,p,a,e):p}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){o(t)||H.getLogger(this.declaredClass).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};l([d()],h.prototype,"_fetchQueue",void 0);l([d()],h.prototype,"resampling",null);h=l([b("esri.views.2d.layers.TileLayerView2D")],h);const Ht=h;export{Ht as default};
