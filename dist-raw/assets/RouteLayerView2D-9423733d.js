import{J as c,ca as u,B as _,aB as n,A as d,ae as l,af as g,ai as w}from"./index-0cbe37a0.js";import{D as y,a as f,P as V,b as k,c as G,R as M,S as I}from"./Stop-e3dec897.js";import{L as F,a as C}from"./LayerView-3efbec1b.js";import{G as H}from"./GraphicContainer-c3aac673.js";import{G as D}from"./GraphicsView2D-d3fe8d46.js";import"./Container-8061ac15.js";import"./parser-4c0b00b2.js";import"./_commonjsHelpers-725317a4.js";import"./definitions-3f56d206.js";import"./enums-08489827.js";import"./TextureDescriptor-1f8c554e.js";import"./color-1b66ad26.js";import"./enums-eb6e4255.js";import"./VertexElementDescriptor-24e04d97.js";import"./BaseGraphicContainer-585d75db.js";import"./FeatureContainer-b8d61260.js";import"./AttributeStoreView-ea5af718.js";import"./TiledDisplayObject-f72684e6.js";import"./visualVariablesUtils-cb5e1ca6.js";import"./visualVariablesUtils-fff56d02.js";import"./VertexArrayObject-33fced1a.js";import"./TileContainer-d41d7eaf.js";import"./WGLContainer-dd6a26c0.js";import"./ProgramTemplate-c0332644.js";import"./MaterialKey-e90d5ee5.js";import"./utils-c4b4ba96.js";import"./heatmapUtils-c9f41040.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./StyleDefinition-edaaf36e.js";import"./config-c06e4a6d.js";import"./GeometryUtils-0ab64fac.js";import"./earcut-db592379.js";import"./featureConversionUtils-f0b03e2b.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./lengthUtils-3c389155.js";import"./vec3f32-ec4c3c20.js";import"./normalizeUtils-89acfe4c.js";import"./normalizeUtilsCommon-088d2983.js";import"./ExpandedCIM-757539da.js";import"./BidiEngine-cdaf024a.js";import"./GeometryUtils-26dde58c.js";import"./Rect-df8ea165.js";import"./quantizationUtils-7579f13f.js";import"./floatRGBA-2c89f36a.js";import"./normalizeUtilsSync-4d7ea9cd.js";import"./projectionSupport-f22cfeca.js";import"./json-9ae8d6f8.js";import"./labelingInfo-e7968113.js";import"./labelUtils-c3e92de5.js";import"./defaultsJSON-b396ba80.js";import"./jsonUtils-98d903f2.js";import"./Matcher-de913064.js";import"./tileUtils-fdb57ff2.js";import"./TurboLine-396782fd.js";import"./LRUCache-75f2ea80.js";import"./MemCache-8eec5c08.js";import"./devEnvironmentUtils-e2e22b53.js";import"./styleUtils-2fd95cb0.js";import"./featureFlags-986067cc.js";import"./schemaUtils-fdf930ff.js";import"./sql-e009a7de.js";import"./diffUtils-6d46a8ba.js";import"./clusterUtils-ffb33f67.js";import"./SizeVariable-f1c59b14.js";import"./colorRamps-3b9c4be9.js";import"./LegendOptions-fe356083.js";import"./sizeVariableUtils-2914222a.js";import"./util-340d902b.js";import"./ComputedAttributeStorage-0c84c7b0.js";import"./FieldsIndex-91c8dad2.js";import"./arcadeTimeUtils-e5ed1ad1.js";import"./executionError-e2eca390.js";import"./centroid-1116d1e7.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),$=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],a={graphic:null,property:null,oldValue:null,newValue:null};function m(r){return r instanceof y||r instanceof f||r instanceof V||r instanceof k||r instanceof G||r instanceof M||r instanceof I}function L(r){return c.isCollection(r)&&r.length&&m(r.getItemAt(0))}function U(r){return Array.isArray(r)&&r.length>0&&m(r[0])}let h=class extends F(C){constructor(){super(...arguments),this._graphics=new c,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>this.layer!=null&&!this.destroyed?[this.layer.routeInfo!=null?new c([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),_)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;m(t)?i=[this._getNetworkFeatureUid(t)]:U(t)?i=t.map(s=>this._getNetworkFeatureUid(s)):L(t)?i=t.map(s=>this._getNetworkFeatureUid(s)).toArray():i=[t.uid];const e=i.filter(n);return e.length?(this._addHighlight(e),{remove:()=>this._removeHighlight(e)}):b}async hitTest(t,i){if(this.suspended)return null;const e=this._graphicsView.hitTest(t).filter(n).map(o=>this._networkGraphicMap.get(o));if(!e.length)return null;const{layer:s}=this;return e.reverse().map(o=>({type:"route",layer:s,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),e=new H(t.featuresTilingScheme);this._graphicsView=new D({container:e,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(e),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return $.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;e===0?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const e=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(e),e}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const e=this._createGraphic(i);return e.symbol==null?null:(this._networkFeatureMap.set(i,e),this._networkGraphicMap.set(e,i),e)}).filter(n));for(const i of t.added)this.addHandles([d(()=>i.geometry,(e,s)=>{this._updateGraphic(i,"geometry",e,s)}),d(()=>i.symbol,(e,s)=>{this._updateGraphic(i,"symbol",e,s)})],i);this._graphics.sort((i,e)=>this._getDrawOrder(i)-this._getDrawOrder(e))}}_updateGraphic(t,i,e,s){if(!this._networkFeatureMap.has(t)){const p=this._createGraphic(t);this._networkFeatureMap.set(t,p),this._networkGraphicMap.set(p,t),this._graphics.add(p);return}const o=this._networkFeatureMap.get(t);o[i]=e,a.graphic=o,a.property=i,a.oldValue=s,a.newValue=e,this._graphicsView.graphicUpdateHandler(a)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};l([g()],h.prototype,"_graphics",void 0);l([g()],h.prototype,"_routeItems",null);h=l([w("esri.views.2d.layers.RouteLayerView2D")],h);const ii=h;export{ii as default};
