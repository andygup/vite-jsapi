import{L as V}from"./index-1ff2b83b.js";const L=V.getLogger("esri.views.3d.support.buffer.math");function C(t,n,e){v(t.typedBuffer,n.typedBuffer,e,t.typedBufferStride,n.typedBufferStride)}function v(t,n,e,o=3,s=o){if(t.length/o!==Math.ceil(n.length/s))return L.error("source and destination buffers need to have the same number of elements"),t;const f=t.length/o,l=e[0],u=e[1],c=e[2],i=e[4],p=e[5],y=e[6],a=e[8],b=e[9],r=e[10],B=e[12],g=e[13],O=e[14];let m=0,h=0;for(let M=0;M<f;M++){const w=n[m],z=n[m+1],x=n[m+2];t[h]=l*w+i*z+a*x+B,t[h+1]=u*w+p*z+b*x+g,t[h+2]=c*w+y*z+r*x+O,m+=s,h+=o}return t}function D(t,n,e){q(t.typedBuffer,n.typedBuffer,e,t.typedBufferStride,n.typedBufferStride)}function q(t,n,e,o=3,s=o){if(t.length/o!==Math.ceil(n.length/s)){L.error("source and destination buffers need to have the same number of elements");return}const f=t.length/o,l=e[0],u=e[1],c=e[2],i=e[3],p=e[4],y=e[5],a=e[6],b=e[7],r=e[8];let B=0,g=0;for(let O=0;O<f;O++){const m=n[B],h=n[B+1],M=n[B+2];t[g]=l*m+i*h+a*M,t[g+1]=u*m+p*h+b*M,t[g+2]=c*m+y*h+r*M,B+=s,g+=o}}function E(t,n,e){j(t.typedBuffer,n,e,t.typedBufferStride)}function j(t,n,e,o=3){const s=Math.min(t.length/o,n.count),f=n.typedBuffer,l=n.typedBufferStride;let u=0,c=0;for(let i=0;i<s;i++)t[c]=e*f[u],t[c+1]=e*f[u+1],t[c+2]=e*f[u+2],u+=l,c+=o}function F(t,n){k(t.typedBuffer,n.typedBuffer,t.typedBufferStride,n.typedBufferStride)}function k(t,n,e=3,o=e){const s=Math.min(t.length/e,n.length/o);let f=0,l=0;for(let u=0;u<s;u++){const c=n[f],i=n[f+1],p=n[f+2],y=c*c+i*i+p*p;if(y>0){const a=1/Math.sqrt(y);t[l]=a*c,t[l+1]=a*i,t[l+2]=a*p}f+=o,l+=e}}export{q as a,C as b,D as c,F as d,E as e,L as m,k as n,j as s,v as t};
