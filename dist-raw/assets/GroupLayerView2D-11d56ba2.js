import{ae as a,af as n,bc as d,ai as h,J as V,A as l,aZ as o,bd as u}from"./index-1ff2b83b.js";import{G as w}from"./GroupContainer-7b0eed27.js";import{a as m,L as c}from"./LayerView-961a55ce.js";import"./WGLContainer-d45d831d.js";import"./definitions-3f56d206.js";import"./VertexArrayObject-174fcb9d.js";import"./TextureDescriptor-d93b8350.js";import"./enums-08489827.js";import"./VertexElementDescriptor-24e04d97.js";import"./color-931e5528.js";import"./enums-eb6e4255.js";import"./ProgramTemplate-cedad509.js";import"./MaterialKey-ac09a7af.js";import"./utils-ab80218c.js";import"./heatmapUtils-2699876b.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./StyleDefinition-edaaf36e.js";import"./config-c06e4a6d.js";import"./GeometryUtils-0ab64fac.js";import"./Container-c03efaff.js";import"./parser-4edf9fb4.js";import"./_commonjsHelpers-725317a4.js";import"./earcut-db592379.js";import"./featureConversionUtils-e2e44d08.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";let t=class extends m{constructor(i){super(i),this.type="group",this.layerViews=new V}destroy(){this.handles.removeAll();const i=this.layerViews.toArray();for(const e of i)e.destroy();this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.handles.add([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),l(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},o),l(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},o)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(i){this._set("layerViews",u(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{const r=this._findLayerViewForLayer(e);return!!(r!=null&&r.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder(),i==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.getItemAt(0)))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map(r=>l(()=>r.visible,s=>this._applyVisibility(()=>{s!==this.visible&&(r.visible=this.visible)},()=>this._applyExclusiveVisibility(s?r:null)),o)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var r,s;this._hasLayerViewVisibleOverrides()&&(((r=this.layer)==null?void 0:r.visibilityMode)==="inherited"?i():((s=this.layer)==null?void 0:s.visibilityMode)==="exclusive"&&e())}};a([n({cast:d})],t.prototype,"layerViews",null);a([n({readOnly:!0})],t.prototype,"updatingProgress",null);a([n()],t.prototype,"view",void 0);t=a([h("esri.views.layers.GroupLayerView")],t);const v=t;let y=class extends c(v){constructor(){super(...arguments),this.container=new w}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};y=a([h("esri.views.2d.layers.GroupLayerView2D")],y);const N=y;export{N as default};
