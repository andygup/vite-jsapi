import{ae as s,af as o,bF as w,bf as G,bt as X,ai as R,r as J,du as Z,t as z,au as Y,aM as ee,E as I,eQ as y,hW as re,m as te,e6 as ie,L as O,eo as ae,J as q,bx as se,dB as F,_ as le,cE as P,eC as j,dX as $,bG as T,bb as ne,bE as U,ag as oe,eU as _,ep as ye,ca as pe,A as ue,aZ as de,eV as fe}from"./index-ffb342b4.js";import{V as ce}from"./Version-87eca0a2.js";import{i as he,p as be}from"./commonProperties-ac9466c5.js";import"./UniqueValueRenderer-9d1002cf.js";import{a as ge,w as me}from"./jsonUtils-fcc69467.js";import{M as Se}from"./MultiOriginJSONSupport-8a274e44.js";import{s as Ie}from"./sql-46e4bdd9.js";import{Q as we}from"./QueryTask-56a560fd.js";import{F as ve}from"./FeatureType-d55aca33.js";import{F as Le}from"./Field-9647a27a.js";import{F as Ee}from"./FieldsIndex-19734375.js";import{v as Oe,L as _e}from"./labelingInfo-df91e583.js";import{g as Te,L as xe}from"./serviceCapabilitiesUtils-c15cc356.js";import{M as N,Q as De,D as Q}from"./Query-b9f237df.js";import{A as Pe}from"./AttachmentQuery-a81b6c0b.js";import{c as Fe}from"./popupUtils-28cf220f.js";import{a as Ae}from"./sublayerUtils-17ef553a.js";const Ye=p=>{let e=class extends p{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesPromise=null,this._allLayersAndTablesMap=null}readCapabilities(t,i){const a=i.capabilities&&i.capabilities.split(",").map(K=>K.toLowerCase().trim());if(!a)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const n=this.type,d=n!=="tile"&&!!i.supportsDynamicLayers,u=a.includes("query"),c=a.includes("map"),h=!!i.exportTilesAllowed,g=a.includes("tilemap"),S=a.includes("data"),L=n!=="tile"&&(!i.tileInfo||d),E=n!=="tile"&&(!i.tileInfo||d),f=n!=="tile",b=i.cimVersion&&ce.parse(i.cimVersion),x=(b==null?void 0:b.since(1,4))??!1,D=(b==null?void 0:b.since(2,0))??!1;return{operations:{supportsExportMap:c,supportsExportTiles:h,supportsIdentify:u,supportsQuery:S,supportsTileMap:g},exportMap:c?{supportsArcadeExpressionForLabeling:x,supportsSublayersChanges:f,supportsDynamicLayers:d,supportsSublayerVisibility:L,supportsSublayerDefinitionExpression:E,supportsCIMSymbols:D}:null,exportTiles:h?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(t,i){let a=i.currentVersion;return a||(i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?a=10:i.hasOwnProperty("supportedImageFormatTypes")?a=9.31:a=9.3),a}async fetchSublayerInfo(t,i){var a;try{return await this.fetchAllLayersAndTables(i),(a=this._allLayersAndTablesMap)==null?void 0:a.get(t)}catch{return}}async fetchAllLayersAndTables(t){await this.load(t),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=J(Z(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(a=>{this._allLayersAndTablesMap=new Map;for(const n of a.data.layers)this._allLayersAndTablesMap.set(n.id,n);return{result:a.data}},a=>({error:a})));const i=await this._allLayersAndTablesPromise;if(z(t),"result"in i)return i.result;throw i.error}};return s([o({readOnly:!0})],e.prototype,"capabilities",void 0),s([w("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],e.prototype,"readCapabilities",null),s([o({json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0),s([o({type:G})],e.prototype,"fullExtent",void 0),s([o(he)],e.prototype,"id",void 0),s([o({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],e.prototype,"legendEnabled",void 0),s([o(be)],e.prototype,"popupEnabled",void 0),s([o({type:X})],e.prototype,"spatialReference",void 0),s([o({readOnly:!0})],e.prototype,"version",void 0),s([w("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],e.prototype,"readVersion",null),e=s([R("esri.layers.mixins.ArcGISMapService")],e),e};var A;function C(p){return p!=null&&p.type==="esriSMS"}function k(p,e,r){var i;const t=this.originIdOf(e)>=_(r.origin);return{ignoreOrigin:!0,allowNull:t,enabled:r?((i=r.layer)==null?void 0:i.type)==="map-image"&&(r.writeSublayerStructure||t):!1}}function W(p,e,r){var t;return{enabled:r?((t=r.layer)==null?void 0:t.type)==="tile"&&this._isOverridden(e):!1}}function m(p,e,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function M(p,e,r){return{ignoreOrigin:!0,enabled:r?r.writeSublayerStructure||this.originIdOf(e)>=_(r.origin):!1}}let Me=0;const v=new Set;v.add("layer");v.add("parent");v.add("loaded");v.add("loadStatus");v.add("loadError");v.add("loadWarnings");let l=A=class extends Y(Se(ee(ye))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,source:t,url:i}=this;if(!r&&!i)throw new I("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let a=null;if(!r||this.originIdOf("url")>y.SERVICE||(t==null?void 0:t.type)==="data-layer")a=(await J(i,{responseType:"json",query:{f:"json"},...e})).data;else{let n=this.id;(t==null?void 0:t.type)==="map-layer"&&(n=t.mapLayerId),a=await r.fetchSublayerInfo(n,e)}a&&(this.sourceJSON=a,this.read({layerDefinition:a},{origin:"service"}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:a},data:{supportsAttachment:n}}=Te(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:n},query:{supportsFormatPBF:a}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new Ee(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if(r=r.layerDefinition||r,r.globalIdField)return r.globalIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeGlobalID")return t.name}}get id(){const e=this._get("id");return e??Me++}set id(e){var t,i,a;if(this._get("id")!==e){if(((a=(i=(t=this.layer)==null?void 0:t.capabilities)==null?void 0:i.exportMap)==null?void 0:a.supportsDynamicLayers)===!1){this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'");return}this._set("id",e)}}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(a=>a.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readObjectIdFieldFromService(e,r){if(r=r.layerDefinition||r,r.objectIdField)return r.objectIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeOID")return t.name}}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){var a;const t=r.layerDefinition;return 1-(((t==null?void 0:t.transparency)!=null?t.transparency:(a=t==null?void 0:t.drawingInfo)==null?void 0:a.transparency)??0)*.01}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-e*100}}}writeParent(e,r){!this.parent||this.parent===this.layer?r.parentLayerId=-1:r.parentLayerId=re(this.parent.id)}get queryTask(){var d;if(!this.layer)return null;const{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,a=te("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF),n=((d=t==null?void 0:t.operations)==null?void 0:d.supportsQueryAttachments)??!1;return new we({url:this.url,pbfSupported:a,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:n})}set renderer(e){if(e){for(const r of e.getSymbols())if(ie(r)){O.getLogger(this.declaredClass).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new N({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ae(q.ofType(A),e)}writeSublayers(e,r,t){var i;(i=this.sublayers)!=null&&i.length&&(r[t]=this.sublayers.map(a=>a.id).toArray().reverse())}readTypeIdField(e,r){r=r.layerDefinition||r;let t=r.typeIdField;if(t&&r.fields){t=t.toLowerCase();const i=r.fields.find(a=>a.name.toLowerCase()===t);i&&(t=i.name)}return t}get url(){var i;const e=((i=this.layer)==null?void 0:i.parsedUrl)??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,(r==null?void 0:r.type)==="map-layer")return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${se(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=F(this),r=new A;return F(r).store=e.clone(v),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return Fe(this,e)}createQuery(){return new De({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var a;if(this.hasOwnProperty("sublayers"))return null;const{layer:e}=this,r=e==null?void 0:e.parsedUrl,t=(await le(()=>import("./FeatureLayer-5d8499e3.js"),["assets/FeatureLayer-5d8499e3.js","assets/index-ffb342b4.js","assets/index-d832a396.css","assets/UniqueValueRenderer-9d1002cf.js","assets/LegendOptions-0798b0b9.js","assets/diffUtils-d9e7d9d5.js","assets/SizeVariable-5571e455.js","assets/colorRamps-bcaaf237.js","assets/sizeVariableUtils-2914222a.js","assets/lengthUtils-81eb77d2.js","assets/ColorStop-69649184.js","assets/jsonUtils-d970b431.js","assets/styleUtils-7b70a1b4.js","assets/featureFlags-b0a4f6c7.js","assets/jsonUtils-fcc69467.js","assets/DictionaryLoader-cef2ab61.js","assets/LRUCache-7d80c941.js","assets/MemCache-0b9a9ce4.js","assets/FieldsIndex-19734375.js","assets/heatmapUtils-a1ba5203.js","assets/vec4-3dd523e8.js","assets/vec4f64-efdcb593.js","assets/MultiOriginJSONSupport-8a274e44.js","assets/sql-46e4bdd9.js","assets/FeatureLayerBase-6c8dbc52.js","assets/Field-9647a27a.js","assets/fieldType-b14303b4.js","assets/commonProperties-ac9466c5.js","assets/ElevationInfo-3858b8bb.js","assets/AttachmentQuery-a81b6c0b.js","assets/Query-b9f237df.js","assets/RelationshipQuery-df8a4aee.js","assets/serviceCapabilitiesUtils-c15cc356.js","assets/editsZScale-93f171ff.js","assets/queryZScale-b5ad7594.js","assets/FeatureSet-b9324b47.js","assets/APIKeyMixin-bb8d3f14.js","assets/ArcGISService-36126778.js","assets/BlendLayer-f2397c0f.js","assets/jsonUtils-83529e2a.js","assets/parser-b7037908.js","assets/_commonjsHelpers-725317a4.js","assets/CustomParametersMixin-4f7843a4.js","assets/EditBusLayer-726c0dac.js","assets/FeatureReductionLayer-e0eca34b.js","assets/FeatureEffect-9a976584.js","assets/clusterUtils-2ed109d6.js","assets/labelingInfo-df91e583.js","assets/labelUtils-ebd7215b.js","assets/defaultsJSON-b396ba80.js","assets/OperationalLayer-43bf6295.js","assets/OrderedLayer-9f7c5530.js","assets/PortalLayer-641234b2.js","assets/portalItemUtils-b3ac2156.js","assets/RefreshableLayer-7e7030e9.js","assets/ScaleRangeLayer-c00a5713.js","assets/TemporalLayer-dfef6fde.js","assets/FeatureTemplate-0ec4ad27.js","assets/FeatureType-d55aca33.js","assets/fieldProperties-9d112e1c.js","assets/versionUtils-7acaee31.js","assets/styleUtils-69730ec3.js","assets/TopFeaturesQuery-ef9a39c0.js","assets/popupUtils-28cf220f.js"])).default,i=new t({url:r==null?void 0:r.path});return r&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source),(e==null?void 0:e.refreshInterval)!=null&&(i.refreshInterval=e.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=P(this.floorInfo)),this.originIdOf("labelingInfo")>y.SERVICE&&(i.labelingInfo=P(this.labelingInfo)),this.originIdOf("labelsVisible")>y.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>y.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>y.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>y.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>y.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>y.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>y.DEFAULTS&&(i.popupTemplate=P(this.popupTemplate)),this.originIdOf("renderer")>y.SERVICE&&(i.renderer=P(this.renderer)),((a=this.source)==null?void 0:a.type)==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>y.DEFAULTS&&(i.title=this.title),(e==null?void 0:e.type)==="map-image"&&e.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=e.customParameters),(e==null?void 0:e.type)==="tile"&&e.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=e.customParameters),i}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(i==null)return null;let a=null;return t==null||t.some(n=>{const{id:d}=n;return d==null?!1:(d.toString()===i.toString()&&(a=n),!!a)}),a}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const a=i.domains&&i.domains[e];if(a&&a.type!=="inherited")return a}return this._getLayerDomain(e)}async queryAttachments(e,r){var g,S;await this.load(),e=Pe.from(e);const t=this.capabilities;if(!((g=t==null?void 0:t.data)!=null&&g.supportsAttachment))throw new I("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:a,globalIds:n,num:d,size:u,start:c,where:h}=e;if(!((S=t==null?void 0:t.operations)!=null&&S.supportsQueryAttachments)){const L=(i==null?void 0:i.length)>0,E=(n==null?void 0:n.length)>0,f=(u==null?void 0:u.length)>0;if(L||E||f||d||c||h)throw new I("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e)}if(!(a!=null&&a.length||n!=null&&n.length||h))throw new I("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(e=this.createQuery(),r){var i,a;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new I("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new I("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...(i=this.layer)==null?void 0:i.customParameters,token:(a=this.layer)==null?void 0:a.apiKey}});if(t!=null&&t.features)for(const n of t.features)n.sourceLayer=this;return t}toExportImageJSON(e){var d;const r={id:this.id,source:((d=this.source)==null?void 0:d.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},t=Ie(e,this.definitionExpression);t!=null&&(r.definitionExpression=t);const a=["renderer","labelingInfo","opacity","labelsVisible"].reduce((u,c)=>(u[c]=this.originIdOf(c),u),{});if(Object.keys(a).some(u=>a[u]>y.SERVICE)){const u=r.drawingInfo={};if(a.renderer>y.SERVICE&&(u.renderer=this.renderer?this.renderer.toJSON():null),a.labelsVisible>y.SERVICE&&(u.showLabels=this.labelsVisible),this.labelsVisible&&a.labelingInfo>y.SERVICE){!this.loaded&&this.labelingInfo.some(h=>!h.labelPlacement)&&O.getLogger(this.declaredClass).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let c=this.labelingInfo;this.geometryType!=null&&(c=Oe(this.labelingInfo,j.toJSON(this.geometryType))),u.labelingInfo=c.filter(h=>h.labelPlacement).map(h=>h.toJSON({origin:"service",layer:this.layer})),u.showLabels=!0}a.opacity>y.SERVICE&&(u.transparency=100-this.opacity*100),this._assignDefaultSymbolColors(u.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,r=>{r.color||(r.style==="esriSMSX"||r.style==="esriSMSCross")&&(r.outline&&r.outline.color?r.color=r.outline.color:r.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of t)C(i.symbol)&&r(i.symbol);"symbol"in e&&C(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&C(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){var c,h,g,S;const t=this.layer,i=this._get(e);let a,n;switch(e){case"definitionExpression":case"floorInfo":a="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",n="supportsModification";break}const u=F(this).getDefaultOrigin();if(u!=="service"){if(a&&((g=(h=(c=this.layer)==null?void 0:c.capabilities)==null?void 0:h.exportMap)==null?void 0:g[a])===!1){this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${a}'`);return}if(n&&((S=this.capabilities)==null?void 0:S.exportMap[n])===!1){this._logLockedError(e,`capability not available 'capabilities.exportMap.${n}'`);return}}if(e==="source"&&this.loadStatus!=="not-loaded"){this._logLockedError(e,"'source' can't be changed after calling sublayer.load()");return}this._set(e,r),u!=="service"&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})}_handleSublayersChange(e,r){r&&(r.forEach(t=>{t.parent=null,t.layer=null}),this.handles.removeAll()),e&&(e.forEach(t=>{t.parent=this,t.layer=this.layer}),this.handles.add([e.on("after-add",({item:t})=>{t.parent=this,t.layer=this.layer}),e.on("after-remove",({item:t})=>{t.parent=null,t.layer=null}),e.on("before-changes",t=>{var a,n,d;const i=(d=(n=(a=this.layer)==null?void 0:a.capabilities)==null?void 0:n.exportMap)==null?void 0:d.supportsSublayersChanges;i==null||i||(O.getLogger(this.declaredClass).error(new I("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),t.preventDefault())})]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;O.getLogger(i).error(new I("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t==null?void 0:t.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};l.test={isMapImageLayerOverridePolicy:p=>p===m||p===k,isTileImageLayerOverridePolicy:p=>p===W};s([o({readOnly:!0})],l.prototype,"capabilities",void 0);s([w("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null);s([o()],l.prototype,"defaultPopupTemplate",null);s([o({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:k}}})],l.prototype,"definitionExpression",null);s([o({type:[Le],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0);s([o({readOnly:!0})],l.prototype,"fieldsIndex",null);s([o({type:xe,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:k},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null);s([o({type:G,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0);s([o({type:j.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:j.read}}}}})],l.prototype,"geometryType",void 0);s([o({type:String})],l.prototype,"globalIdField",void 0);s([w("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null);s([o({type:$,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null);s([o({value:null,type:[_e],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:m}}})],l.prototype,"labelingInfo",null);s([T("labelingInfo")],l.prototype,"writeLabelingInfo",null);s([o({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:m}}})],l.prototype,"labelsVisible",null);s([o({value:null})],l.prototype,"layer",null);s([o({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:M}}})],l.prototype,"legendEnabled",void 0);s([o({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null);s([o({type:Number,value:0,json:{write:{overridePolicy:m}}})],l.prototype,"minScale",null);s([w("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null);s([o({type:Number,value:0,json:{write:{overridePolicy:m}}})],l.prototype,"maxScale",null);s([w("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null);s([o({readOnly:!0})],l.prototype,"effectiveScaleRange",null);s([o({type:String})],l.prototype,"objectIdField",void 0);s([w("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null);s([o({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:m}}})],l.prototype,"opacity",null);s([w("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null);s([T("opacity")],l.prototype,"writeOpacity",null);s([o({json:{type:$,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:m}}})],l.prototype,"parent",void 0);s([T("parent")],l.prototype,"writeParent",null);s([o({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader(p,e){return!e.disablePopup}},write:{target:"disablePopup",overridePolicy:M,writer(p,e,r){e[r]=!p}}}})],l.prototype,"popupEnabled",void 0);s([o({type:ne,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:M}}})],l.prototype,"popupTemplate",void 0);s([o({readOnly:!0})],l.prototype,"queryTask",null);s([o({types:ge,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:m},origins:{"web-scene":{types:me,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:m}}}}})],l.prototype,"renderer",null);s([o({types:{key:"type",base:null,typeMap:{"data-layer":Q,"map-layer":N}},cast(p){if(p){if("mapLayerId"in p)return U(N,p);if("dataSource"in p)return U(Q,p)}return p},json:{name:"layerDefinition.source",write:{overridePolicy:m}}})],l.prototype,"source",null);s([o()],l.prototype,"sourceJSON",void 0);s([o({value:null,json:{type:[$],write:{target:"subLayerIds",allowNull:!0,overridePolicy:m}}})],l.prototype,"sublayers",null);s([oe("sublayers")],l.prototype,"castSublayers",null);s([T("sublayers")],l.prototype,"writeSublayers",null);s([o({type:String,json:{name:"name",write:{overridePolicy:M}}})],l.prototype,"title",void 0);s([o({type:String})],l.prototype,"typeIdField",void 0);s([w("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null);s([o({type:[ve],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0);s([o({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:W}}})],l.prototype,"url",null);s([o({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:m}}})],l.prototype,"visible",null);s([T("visible")],l.prototype,"writeVisible",null);l=A=s([R("esri.layers.support.Sublayer")],l);const B=l,Ce=O.getLogger("esri.layers.TileLayer");function Ve(p,e){const r=[],t={};return p&&p.forEach(i=>{const a=new B;if(a.read(i,e),t[a.id]=a,i.parentLayerId!=null&&i.parentLayerId!==-1){const n=t[i.parentLayerId];n.sublayers||(n.sublayers=[]),n.sublayers.unshift(a)}else r.unshift(a)}),r}const V=q.ofType(B);function H(p,e){p&&p.forEach(r=>{e(r),r.sublayers&&r.sublayers.length&&H(r.sublayers,e)})}const tr=p=>{let e=class extends p{constructor(...t){super(...t),this.allSublayers=new pe({getCollections:()=>[this.sublayers],getChildrenFunction(i){return i.sublayers}}),this.sublayersSourceJSON={[y.SERVICE]:{},[y.PORTAL_ITEM]:{},[y.WEB_SCENE]:{},[y.WEB_MAP]:{}},this.addHandles(ue(()=>this.sublayers,(i,a)=>this._handleSublayersChange(i,a),de))}destroy(){this.allSublayers.destroy()}readSublayers(t,i){if(!i||!t)return;const{sublayersSourceJSON:a}=this,n=_(i.origin);if(n<y.SERVICE||(a[n]={context:i,visibleLayers:t.visibleLayers||a[n].visibleLayers,layers:t.layers||a[n].layers},n>y.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:d,origin:u}=this.createSublayersForOrigin("web-document"),c=F(this);c.setDefaultOrigin(u),this._set("sublayers",new V(d)),c.setDefaultOrigin("user")}findSublayerById(t){return this.allSublayers.find(i=>i.id===t)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(t){const i=t==="web-document"?_("web-map"):_(t);let a=y.SERVICE,n=this.sublayersSourceJSON[y.SERVICE].layers,d=this.sublayersSourceJSON[y.SERVICE].context,u=null;const c=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(f=>f<=i);for(const f of c){const b=this.sublayersSourceJSON[f];Ae(b.layers)&&(a=f,n=b.layers,d=b.context,b.visibleLayers&&(u={visibleLayers:b.visibleLayers,context:b.context}))}const h=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(f=>f>a&&f<=i);let g=null;for(const f of h){const{layers:b,visibleLayers:x,context:D}=this.sublayersSourceJSON[f];b&&(g={layers:b,context:D}),x&&(u={visibleLayers:x,context:D})}const S=Ve(n,d),L=new Map,E=new Set;if(g)for(const f of g.layers)L.set(f.id,f);if(u!=null&&u.visibleLayers)for(const f of u.visibleLayers)E.add(f);return H(S,f=>{g&&f.read(L.get(f.id),g.context),u&&f.read({defaultVisibility:E.has(f.id)},u.context)}),{origin:fe(a),sublayers:new V({items:S})}}read(t,i){super.read(t,i),this.readSublayers(t,i)}_handleSublayersChange(t,i){i&&(i.forEach(a=>{a.parent=null,a.layer=null}),this.removeHandles("sublayers-owner")),t&&(t.forEach(a=>{a.parent=this,a.layer=this}),this.addHandles([t.on("after-add",({item:a})=>{a.parent=this,a.layer=this}),t.on("after-remove",({item:a})=>{a.parent=null,a.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(t.on("before-changes",a=>{Ce.error(new I("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),a.preventDefault()}),"sublayers-owner"))}};return s([o({readOnly:!0})],e.prototype,"allSublayers",void 0),s([o({readOnly:!0,type:q.ofType(B)})],e.prototype,"serviceSublayers",void 0),s([o({value:null,type:V,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),s([o({readOnly:!0})],e.prototype,"sublayersSourceJSON",void 0),e=s([R("esri.layers.mixins.SublayersOwner")],e),e};export{Ye as A,tr as S,B as a};
