import{ae as t,af as e,ai as u,bD as g,eg as R,ax as h,dX as y,cE as a}from"./index-30d9bb6f.js";let i=class extends g{constructor(l){super(l),this.type=null}};t([e({readOnly:!0,json:{read:!1,write:!0}})],i.prototype,"type",void 0);i=t([u("esri.rest.support.ColorRamp")],i);const c=i;var s;let r=s=class extends c{constructor(l){super(l),this.algorithm=null,this.fromColor=null,this.toColor=null,this.type="algorithmic"}clone(){return new s({fromColor:a(this.fromColor),toColor:a(this.toColor),algorithm:this.algorithm})}};t([R({esriCIELabAlgorithm:"cie-lab",esriHSVAlgorithm:"hsv",esriLabLChAlgorithm:"lab-lch"})],r.prototype,"algorithm",void 0);t([e({type:h,json:{type:[y],write:!0}})],r.prototype,"fromColor",void 0);t([e({type:h,json:{type:[y],write:!0}})],r.prototype,"toColor",void 0);t([e({type:["algorithmic"]})],r.prototype,"type",void 0);r=s=t([u("esri.rest.support.AlgorithmicColorRamp")],r);const n=r;var m;let p=m=class extends c{constructor(l){super(l),this.colorRamps=null,this.type="multipart"}clone(){return new m({colorRamps:a(this.colorRamps)})}};t([e({type:[n],json:{write:!0}})],p.prototype,"colorRamps",void 0);t([e({type:["multipart"]})],p.prototype,"type",void 0);p=m=t([u("esri.rest.support.MultipartColorRamp")],p);const C=p,b={key:"type",base:c,typeMap:{algorithmic:n,multipart:C}};function M(o){return!o||!o.type?null:o.type==="algorithmic"?n.fromJSON(o):o.type==="multipart"?C.fromJSON(o):null}export{C as M,M as f,b as t};
