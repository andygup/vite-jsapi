import{ae as m,ai as p}from"./index-1ff2b83b.js";import{d as l,g as h}from"./heatmapUtils-2699876b.js";import{B as d}from"./BitmapTileContainer-be57b9bf.js";import{B as c}from"./BaseTileRenderer-10e6a9ff.js";import"./vec4-3dd523e8.js";import"./vec4f64-efdcb593.js";import"./Bitmap-70782460.js";import"./Container-c03efaff.js";import"./parser-4edf9fb4.js";import"./_commonjsHelpers-725317a4.js";import"./definitions-3f56d206.js";import"./enums-08489827.js";import"./TextureDescriptor-d93b8350.js";import"./TiledDisplayObject-136f3a7e.js";import"./WGLContainer-d45d831d.js";import"./VertexArrayObject-174fcb9d.js";import"./VertexElementDescriptor-24e04d97.js";import"./color-931e5528.js";import"./enums-eb6e4255.js";import"./ProgramTemplate-cedad509.js";import"./MaterialKey-ac09a7af.js";import"./utils-ab80218c.js";import"./StyleDefinition-edaaf36e.js";import"./config-c06e4a6d.js";import"./GeometryUtils-0ab64fac.js";import"./earcut-db592379.js";import"./featureConversionUtils-e2e44d08.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./TileContainer-efa0645f.js";class u{constructor(){this.gradient=null,this.height=512,this.intensities=null,this.width=512}render(t){l(t,512,this.intensities,this.gradient,this.minDensity,this.maxDensity)}}let o=class extends c{constructor(t){super(t),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new d(t.tileInfoView)}createTile(t){const e=this._container.createTile(t);return this.tileInfoView.getTileCoords(e.bitmap,t),e.bitmap.resolution=this.tileInfoView.getTileResolution(t),e}onConfigUpdate(){const t=this.layer.renderer;if(t.type==="heatmap"){const{minDensity:e,maxDensity:r,colorStops:s}=t;this._intensityInfo.minDensity=e,this._intensityInfo.maxDensity=r,this._gradient=h(s),this.tiles.forEach(n=>{const i=n.bitmap.source;i&&(i.minDensity=e,i.maxDensity=r,i.gradient=this._gradient,n.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&t.type==="heatmap"}onTileData(t){const e=this.tiles.get(t.tileKey);if(!e)return;const r=t.intensityInfo,{minDensity:s,maxDensity:n}=this._intensityInfo,i=e.bitmap.source||new u;i.intensities=r&&r.matrix||null,i.minDensity=s,i.maxDensity=n,i.gradient=this._gradient,e.bitmap.source=i,this._container.addChild(e),this._container.requestRender(),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(t,e){return console.error(t),Promise.reject()}};o=m([p("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const N=o;export{N as default};
