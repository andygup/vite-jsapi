import{ae as r,af as a,bF as l,bt as o,ai as s}from"./index-6dc9db96.js";import{s as c,T as n}from"./TilemapCache-35bf5d67.js";const y=p=>{let e=class extends p{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(i,t){return t.minLOD!=null&&t.maxLOD!=null?i:0}readMaxScale(i,t){return t.minLOD!=null&&t.maxLOD!=null?i:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(i,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new n({layer:this}):null}destroy(){var i;(i=this.tilemapCache)==null||i.destroy()}};return r([a({json:{read:{source:"copyrightText"}}})],e.prototype,"copyright",void 0),r([a()],e.prototype,"minScale",void 0),r([l("service","minScale")],e.prototype,"readMinScale",null),r([a()],e.prototype,"maxScale",void 0),r([l("service","maxScale")],e.prototype,"readMaxScale",null),r([a({type:o})],e.prototype,"spatialReference",void 0),r([a({readOnly:!0})],e.prototype,"supportsBlankTile",null),r([a(c)],e.prototype,"tileInfo",void 0),r([a()],e.prototype,"tilemapCache",void 0),r([l("service","tilemapCache",["capabilities"])],e.prototype,"readTilemapCache",null),r([a()],e.prototype,"version",void 0),e=r([s("esri.layers.mixins.ArcGISCachedService")],e),e};export{y as A};
