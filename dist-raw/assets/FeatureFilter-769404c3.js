import{L as d,_,E as m,O as c,cj as p}from"./index-ffb342b4.js";import{a as y,b as f}from"./timeSupport-06d007d4.js";import{a as w}from"./utils-989d8fa5.js";import{Q as g}from"./Query-b9f237df.js";import{f as I}from"./FeatureStore2D-6f8a5b9b.js";import"./featureConversionUtils-c38cba79.js";import"./OptimizedGeometry-af84d2ad.js";import"./OptimizedFeatureSet-5c82fe5a.js";import"./projectionSupport-6c80ea64.js";import"./json-9ae8d6f8.js";import"./normalizeUtils-ec352ded.js";import"./normalizeUtilsCommon-99b04a51.js";import"./Field-9647a27a.js";import"./fieldType-b14303b4.js";import"./CircularArray-7e036143.js";import"./diffUtils-d9e7d9d5.js";import"./ComputedAttributeStorage-55909c32.js";import"./FieldsIndex-19734375.js";import"./arcadeTimeUtils-c52e5a06.js";import"./executionError-e2eca390.js";import"./centroid-1116d1e7.js";import"./definitions-3f56d206.js";import"./visualVariablesUtils-f72161c3.js";import"./color-3f29be9c.js";import"./enums-eb6e4255.js";import"./enums-08489827.js";import"./VertexElementDescriptor-24e04d97.js";import"./visualVariablesUtils-0ad0554c.js";const u=d.getLogger("esri.views.2d.layers.features.support.whereUtils"),b={getAttribute(s,e){return s.field(e)}};async function T(s,e){const t=await _(()=>import("./WhereClause-7ab6e388.js").then(i=>i.c),["assets/WhereClause-7ab6e388.js","assets/index-ffb342b4.js","assets/index-d832a396.css","assets/executionError-e2eca390.js","assets/_commonjsHelpers-725317a4.js"]);try{const i=t.WhereClause.create(s,e);if(!i.isStandardized){const r=new m("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",i);u.error(r)}return r=>{const l=r.readArcadeFeature();return i.testFeature(l,b)}}catch{return u.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",s),r=>!0}}const o=1,v=2;class Z{constructor(e){this._geometryBounds=c(),this._idToVisibility=new Map,this._serviceInfo=e}get hash(){return this._hash}check(e){return this._applyFilter(e)}clear(){const e=this._resetAllHiddenIds();return this.update(),{show:e,hide:[]}}invalidate(){this._idToVisibility.forEach((e,t)=>{this._idToVisibility.set(t,0)})}setKnownIds(e){for(const t of e)this._idToVisibility.set(t,o)}setTrue(e){const t=[],i=[],r=new Set(e);return this._idToVisibility.forEach((l,a)=>{const n=!!(this._idToVisibility.get(a)&o),h=r.has(a);!n&&h?t.push(a):n&&!h&&i.push(a),this._idToVisibility.set(a,h?o|v:0)}),{show:t,hide:i}}createQuery(){const{geometry:e,spatialRel:t,where:i,timeExtent:r,objectIds:l}=this;return g.fromJSON({geometry:e,spatialRel:t,where:i,timeExtent:r,objectIds:l})}async update(e,t){this._hash=JSON.stringify(e);const i=await w(e,null,t);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(e){if(!e||!e.where){this._clause=null,this.where=null;return}this._clause=await T(e.where,this._serviceInfo.fieldsIndex),this.where=e.where}_setIdFilter(e){this._idsToShow=e&&e.objectIds&&new Set(e.objectIds),this._idsToHide=e&&e.hiddenIds&&new Set(e.hiddenIds),this.objectIds=e&&e.objectIds}async _setGeometryFilter(e){if(!e||!e.geometry){this._spatialQueryOperator=null,this.geometry=null,this.spatialRel=null;return}const t=e.geometry,i=e.spatialRel||"esriSpatialRelIntersects",r=await y(i,t,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);p(this._geometryBounds,t),this._spatialQueryOperator=r,this.geometry=t,this.spatialRel=i}_setTimeFilter(e){if(this.timeExtent=this._timeOperator=null,!(!e||!e.timeExtent)){if(!this._serviceInfo.timeInfo){const t=new m("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",e.timeExtent);d.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter").error(t);return}this.timeExtent=e.timeExtent,this._timeOperator=f(this._serviceInfo.timeInfo,e.timeExtent,I)}}_applyFilter(e){return this._filterByGeometry(e)&&this._filterById(e)&&this._filterByTime(e)&&this._filterByExpression(e)}_filterByExpression(e){return this.where?this._clause(e):!0}_filterById(e){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(e.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(e.getObjectId()))}_filterByGeometry(e){if(!this.geometry)return!0;const t=e.readHydratedGeometry();return t?this._spatialQueryOperator(t):!1}_filterByTime(e){return this._timeOperator==null?!0:this._timeOperator(e)}_resetAllHiddenIds(){const e=[];return this._idToVisibility.forEach((t,i)=>{t&o||(this._idToVisibility.set(i,o),e.push(i))}),e}}export{Z as default};
